'use client';

import React, { useState, useEffect } from 'react';
import Link from 'next/link';
import { onboardingIntegration, DriverPortalProfile } from '../../services/onboarding-integration';
import { checkPermission } from '../../config/access';
import DriverTaxDashboard from '../../components/DriverTaxDashboard';
import { driverTaxService } from '../services/DriverTaxService';

const AccessRestricted = () => (
  <div style={{
    background: 'linear-gradient(135deg, #f7c52d, #f4a832)',
    minHeight: '100vh',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    padding: '20px'
  }}>
    <div style={{
      background: 'rgba(255, 255, 255, 0.9)',
      borderRadius: '16px',
      padding: '40px 32px',
      border: '1px solid rgba(255, 255, 255, 0.2)',
      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',
      textAlign: 'center',
      maxWidth:        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '16px' }}>
          {[
            { icon: 'üìä', title: 'Tax Dashboard', desc: `View IFTA data, tax liability, and filing alerts${taxAlerts.total > 0 ? ` (${taxAlerts.total} alerts)` : ''}` },
            { icon: 'üìã', title: 'View Assigned Loads', desc: 'Check your current and upcoming deliveries' },
            { icon: 'üìç', title: 'Update Location', desc: 'Share your current location with dispatch' },
            { icon: 'üì∑', title: 'Upload POD', desc: 'Upload proof of delivery documents' },
            { icon: 'üí¨', title: 'Message Dispatch', desc: 'Communicate with your dispatcher' },
            { icon: 'üìÑ', title: 'View Documents', desc: 'Access your employment documents' },
            { icon: '‚öôÔ∏è', title: 'Settings', desc: 'Update your profile and preferences' }
          ].map((action, index) => (      width: '100%'
    }}>
      <div style={{ fontSize: '4rem', marginBottom: '20px' }}>üîí</div>
      <h1 style={{ 
        fontSize: '1.8rem', 
        fontWeight: 'bold', 
        color: '#2d3748', 
        marginBottom: '16px' 
      }}>Access Restricted</h1>
      <p style={{ 
        color: 'rgba(45, 55, 72, 0.8)', 
        marginBottom: '16px',
        lineHeight: '1.6'
      }}>
        You need driver portal permissions to access this system.
      </p>
      <button 
        onClick={() => window.history.back()}
        style={{
          background: 'linear-gradient(135deg, #3b82f6, #2563eb)',
          color: 'white',
          padding: '12px 24px',
          borderRadius: '8px',
          border: 'none',
          fontWeight: 'bold',
          cursor: 'pointer',
          transition: 'all 0.2s ease',
          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)'
        }}
        onMouseOver={(e) => (e.target as HTMLElement).style.transform = 'translateY(-2px)'}
        onMouseOut={(e) => (e.target as HTMLElement).style.transform = 'translateY(0)'}
      >
        Go Back
      </button>
    </div>
  </div>
);

const DriverCard: React.FC<{ driver: DriverPortalProfile; onClick: () => void }> = ({ driver, onClick }) => {
  const getActivationStatus = () => {
    if (driver.credentials.accountActivated) {
      return { color: '#10b981', text: 'Activated', icon: '‚úÖ' };
    } else {
      return { color: '#f59e0b', text: 'Pending', icon: '‚è≥' };
    }
  };

  const status = getActivationStatus();

  return (
    <div 
      onClick={onClick}
      style={{
        background: 'rgba(255, 255, 255, 0.9)',
        borderRadius: '16px',
        padding: '24px',
        border: '1px solid rgba(255, 255, 255, 0.3)',
        boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',
        cursor: 'pointer',
        transition: 'all 0.3s ease',
        height: '100%'
      }}
      onMouseOver={(e) => {
        (e.currentTarget as HTMLElement).style.transform = 'translateY(-4px)';
        (e.currentTarget as HTMLElement).style.boxShadow = '0 12px 40px rgba(0, 0, 0, 0.15)';
      }}
      onMouseOut={(e) => {
        (e.currentTarget as HTMLElement).style.transform = 'translateY(0)';
        (e.currentTarget as HTMLElement).style.boxShadow = '0 8px 32px rgba(0, 0, 0, 0.1)';
      }}
    >
      {/* Header */}
      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'start', marginBottom: '16px' }}>
        <div>
          <h3 style={{ 
            color: '#2d3748', 
            fontSize: '1.3rem', 
            fontWeight: 'bold', 
            margin: 0, 
            marginBottom: '4px' 
          }}>
            {driver.personalInfo.name}
          </h3>
          <p style={{ 
            color: 'rgba(45, 55, 72, 0.7)', 
            fontSize: '0.9rem', 
            margin: 0, 
            marginBottom: '8px' 
          }}>
            {driver.employmentInfo.carrierName}
          </p>
          <div style={{ 
            display: 'flex', 
            gap: '12px', 
            fontSize: '0.85rem', 
            color: 'rgba(45, 55, 72, 0.6)' 
          }}>
            <span>üìß {driver.personalInfo.email}</span>
            <span>üì± {driver.personalInfo.phone}</span>
          </div>
        </div>
        <span style={{
          background: status.color,
          color: 'white',
          padding: '6px 12px',
          borderRadius: '20px',
          fontSize: '0.8rem',
          fontWeight: 'bold',
          display: 'flex',
          alignItems: 'center',
          gap: '4px'
        }}>
          {status.icon} {status.text}
        </span>
      </div>

      {/* Driver Info */}
      <div style={{ 
        display: 'grid', 
        gridTemplateColumns: 'repeat(2, 1fr)', 
        gap: '12px', 
        marginBottom: '16px' 
      }}>
        <div>
          <div style={{ color: 'rgba(45, 55, 72, 0.6)', fontSize: '0.8rem', marginBottom: '2px' }}>
            License
          </div>
          <div style={{ color: '#2d3748', fontSize: '0.9rem', fontWeight: '600' }}>
            {driver.personalInfo.licenseNumber}
          </div>
        </div>
        <div>
          <div style={{ color: 'rgba(45, 55, 72, 0.6)', fontSize: '0.8rem', marginBottom: '2px' }}>
            Role
          </div>
          <div style={{ color: '#2d3748', fontSize: '0.9rem', fontWeight: '600' }}>
            {driver.employmentInfo.role === 'owner_operator' ? 'Owner Operator' : 'Company Driver'}
          </div>
        </div>
      </div>

      {/* Equipment Info */}
      {(driver.employmentInfo.truckNumber || driver.employmentInfo.trailerNumber) && (
        <div style={{ marginBottom: '16px' }}>
          <div style={{ color: 'rgba(45, 55, 72, 0.6)', fontSize: '0.8rem', marginBottom: '4px' }}>
            Equipment
          </div>
          <div style={{ display: 'flex', gap: '12px', fontSize: '0.85rem', color: '#2d3748' }}>
            {driver.employmentInfo.truckNumber && (
              <span>üöõ Truck: {driver.employmentInfo.truckNumber}</span>
            )}
            {driver.employmentInfo.trailerNumber && (
              <span>üöö Trailer: {driver.employmentInfo.trailerNumber}</span>
            )}
          </div>
        </div>
      )}

      {/* Access Info */}
      <div style={{ display: 'flex', gap: '8px', alignItems: 'center', fontSize: '0.85rem' }}>
        <span style={{ color: 'rgba(45, 55, 72, 0.6)' }}>
          Start Date: {new Date(driver.employmentInfo.startDate).toLocaleDateString()}
        </span>
        {driver.credentials.lastLogin && (
          <span style={{ color: 'rgba(45, 55, 72, 0.6)' }}>
            ‚Ä¢ Last Login: {new Date(driver.credentials.lastLogin).toLocaleDateString()}
          </span>
        )}
      </div>
    </div>
  );
};

export default function EnhancedDriverPortal() {
  // Check access permission
  if (!checkPermission('canViewDriverPortal')) {
    return <AccessRestricted />;
  }

  const [drivers, setDrivers] = useState<DriverPortalProfile[]>([]);
  const [selectedDriver, setSelectedDriver] = useState<DriverPortalProfile | null>(null);
  const [searchTerm, setSearchTerm] = useState('');
  const [carrierFilter, setCarrierFilter] = useState<string>('all');
  const [statusFilter, setStatusFilter] = useState<'all' | 'activated' | 'pending'>('all');
  const [activeTab, setActiveTab] = useState<'management' | 'login' | 'dashboard'>('management');

  useEffect(() => {
    // Load all drivers from the integration service
    const allDrivers = onboardingIntegration.getAllDrivers();
    setDrivers(allDrivers);
  }, []);

  const uniqueCarriers = Array.from(new Set(drivers.map(d => d.employmentInfo.carrierName))).sort();

  const filteredDrivers = drivers.filter(driver => {
    const matchesSearch = !searchTerm || 
      driver.personalInfo.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
      driver.personalInfo.email.toLowerCase().includes(searchTerm.toLowerCase()) ||
      driver.employmentInfo.carrierName.toLowerCase().includes(searchTerm.toLowerCase()) ||
      driver.personalInfo.licenseNumber.toLowerCase().includes(searchTerm.toLowerCase());
    
    const matchesCarrier = carrierFilter === 'all' || driver.employmentInfo.carrierName === carrierFilter;
    
    const matchesStatus = statusFilter === 'all' || 
      (statusFilter === 'activated' && driver.credentials.accountActivated) ||
      (statusFilter === 'pending' && !driver.credentials.accountActivated);
    
    return matchesSearch && matchesCarrier && matchesStatus;
  });

  const handleDriverClick = (driver: DriverPortalProfile) => {
    setSelectedDriver(driver);
  };

  const handleCloseDetails = () => {
    setSelectedDriver(null);
  };

  return (
    <div style={{ 
      minHeight: '100vh', 
      background: `
        linear-gradient(rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.05)),
        linear-gradient(135deg, #f7c52d 0%, #f4a832 100%)
      `,
      padding: '80px 20px 20px 20px'
    }}>
      {/* Back Button */}
      <div style={{ padding: '0 0 24px 0', maxWidth: '1400px', margin: '0 auto' }}>
        <Link href="/" style={{ display: 'inline-block', textDecoration: 'none' }}>
          <button style={{
            background: 'rgba(255, 255, 255, 0.2)',
            backdropFilter: 'blur(10px)',
            border: '1px solid rgba(255, 255, 255, 0.3)',
            color: '#2d3748',
            padding: '12px 24px',
            borderRadius: '12px',
            fontWeight: '600',
            cursor: 'pointer',
            transition: 'all 0.3s ease'
          }}
          onMouseOver={(e) => {
            e.currentTarget.style.background = 'rgba(255, 255, 255, 0.3)';
            e.currentTarget.style.transform = 'translateY(-2px)';
          }}
          onMouseOut={(e) => {
            e.currentTarget.style.background = 'rgba(255, 255, 255, 0.2)';
            e.currentTarget.style.transform = 'translateY(0)';
          }}>
            ‚Üê Back to Dashboard
          </button>
        </Link>
      </div>

      <div style={{ maxWidth: '1400px', margin: '0 auto' }}>
        {/* Header */}
        <div style={{
          background: 'rgba(255, 255, 255, 0.9)',
          backdropFilter: 'blur(15px)',
          border: '1px solid rgba(255, 255, 255, 0.3)',
          borderRadius: '20px',
          padding: '32px',
          marginBottom: '32px',
          textAlign: 'center'
        }}>
          <h1 style={{
            fontSize: '48px',
            fontWeight: 'bold',
            color: '#2d3748',
            margin: '0 0 12px 0',
            textShadow: '2px 2px 4px rgba(255,255,255,0.5)'
          }}>
            üöõ ENHANCED DRIVER PORTAL
          </h1>
          <p style={{
            fontSize: '20px',
            color: 'rgba(45, 55, 72, 0.8)',
            margin: 0
          }}>
            Complete driver management and access system
          </p>
        </div>

        {/* Tab Navigation */}
        <div style={{
          background: 'rgba(255, 255, 255, 0.9)',
          backdropFilter: 'blur(15px)',
          border: '1px solid rgba(255, 255, 255, 0.3)',
          borderRadius: '16px',
          padding: '16px',
          marginBottom: '32px',
          display: 'flex',
          gap: '8px',
          justifyContent: 'center',
          flexWrap: 'wrap'
        }}>
          {[
            { id: 'management', label: 'üë• Driver Management', desc: 'Admin View - Manage All Drivers' },
            { id: 'login', label: 'üîê Driver Login Portal', desc: 'Driver Access - Login Interface' },
            { id: 'dashboard', label: 'üì± Driver Dashboard', desc: 'Driver View - Individual Dashboard' }
          ].map((tab) => (
            <button
              key={tab.id}
              onClick={() => setActiveTab(tab.id as any)}
              style={{
                background: activeTab === tab.id 
                  ? 'linear-gradient(135deg, #f7c52d, #f4a832)' 
                  : 'rgba(255, 255, 255, 0.5)',
                color: activeTab === tab.id ? '#2d3748' : 'rgba(45, 55, 72, 0.8)',
                padding: '12px 20px',
                borderRadius: '8px',
                border: activeTab === tab.id 
                  ? '2px solid rgba(247, 197, 45, 0.7)' 
                  : '1px solid rgba(45, 55, 72, 0.2)',
                fontWeight: 'bold',
                cursor: 'pointer',
                transition: 'all 0.2s ease',
                fontSize: '0.9rem',
                textAlign: 'center'
              }}
            >
              <div>{tab.label}</div>
              <div style={{ fontSize: '0.7rem', opacity: 0.8, marginTop: '2px' }}>
                {tab.desc}
              </div>
            </button>
          ))}
        </div>

        {/* Tab Content */}
        {activeTab === 'management' && (
          <>
            {/* Stats Cards */}
            <div style={{ 
              display: 'grid', 
              gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', 
              gap: '20px', 
              marginBottom: '32px' 
            }}>
              {[
                { label: 'Total Drivers', value: drivers.length, color: '#3b82f6' },
                { label: 'Activated', value: drivers.filter(d => d.credentials.accountActivated).length, color: '#10b981' },
                { label: 'Pending', value: drivers.filter(d => !d.credentials.accountActivated).length, color: '#f59e0b' },
                { label: 'Carriers', value: uniqueCarriers.length, color: '#8b5cf6' }
              ].map((stat, index) => (
                <div key={index} style={{
                  background: 'rgba(255, 255, 255, 0.9)',
                  backdropFilter: 'blur(15px)',
                  border: '1px solid rgba(255, 255, 255, 0.3)',
                  borderRadius: '16px',
                  padding: '24px',
                  textAlign: 'center'
                }}>
                  <div style={{ 
                    fontSize: '2.5rem', 
                    fontWeight: 'bold', 
                    color: stat.color,
                    marginBottom: '8px'
                  }}>
                    {stat.value}
                  </div>
                  <div style={{ color: 'rgba(45, 55, 72, 0.8)', fontSize: '1rem' }}>
                    {stat.label}
                  </div>
                </div>
              ))}
            </div>

        {/* Search and Filters */}
        <div style={{
          background: 'rgba(255, 255, 255, 0.9)',
          backdropFilter: 'blur(15px)',
          border: '1px solid rgba(255, 255, 255, 0.3)',
          borderRadius: '16px',
          padding: '24px',
          marginBottom: '32px'
        }}>
          <div style={{ display: 'flex', gap: '16px', alignItems: 'center', flexWrap: 'wrap' }}>
            <input
              type="text"
              placeholder="Search by name, email, carrier, or license..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              style={{
                flex: 1,
                minWidth: '300px',
                padding: '12px 16px',
                borderRadius: '8px',
                border: '1px solid rgba(45, 55, 72, 0.3)',
                background: 'rgba(255, 255, 255, 0.7)',
                color: '#2d3748',
                fontSize: '1rem'
              }}
            />
            <select
              value={carrierFilter}
              onChange={(e) => setCarrierFilter(e.target.value)}
              style={{
                padding: '12px 16px',
                borderRadius: '8px',
                border: '1px solid rgba(45, 55, 72, 0.3)',
                background: 'rgba(255, 255, 255, 0.7)',
                color: '#2d3748',
                fontSize: '1rem'
              }}
            >
              <option value="all">All Carriers</option>
              {uniqueCarriers.map(carrier => (
                <option key={carrier} value={carrier}>{carrier}</option>
              ))}
            </select>
            <select
              value={statusFilter}
              onChange={(e) => setStatusFilter(e.target.value as any)}
              style={{
                padding: '12px 16px',
                borderRadius: '8px',
                border: '1px solid rgba(45, 55, 72, 0.3)',
                background: 'rgba(255, 255, 255, 0.7)',
                color: '#2d3748',
                fontSize: '1rem'
              }}
            >
              <option value="all">All Status</option>
              <option value="activated">Activated</option>
              <option value="pending">Pending</option>
            </select>
          </div>
        </div>

        {/* Drivers Grid */}
        {filteredDrivers.length === 0 ? (
          <div style={{
            background: 'rgba(255, 255, 255, 0.9)',
            backdropFilter: 'blur(15px)',
            border: '1px solid rgba(255, 255, 255, 0.3)',
            borderRadius: '16px',
            padding: '60px',
            textAlign: 'center'
          }}>
            <div style={{ fontSize: '4rem', marginBottom: '20px' }}>üë•</div>
            <h2 style={{ color: '#2d3748', fontSize: '1.5rem', marginBottom: '16px' }}>
              No Drivers Found
            </h2>
            <p style={{ color: 'rgba(45, 55, 72, 0.7)', marginBottom: '24px' }}>
              {drivers.length === 0 
                ? "No drivers have been onboarded yet. Drivers are created automatically when carriers complete the onboarding process."
                : "No drivers match your current search criteria."
              }
            </p>
            {drivers.length === 0 && (
              <Link href="/onboarding/carrier-onboarding/new">
                <button style={{
                  background: 'linear-gradient(135deg, #3b82f6, #2563eb)',
                  color: 'white',
                  padding: '16px 32px',
                  borderRadius: '12px',
                  border: 'none',
                  fontSize: '1.1rem',
                  fontWeight: 'bold',
                  cursor: 'pointer',
                  transition: 'all 0.2s ease'
                }}>
                  üöõ Start Carrier Onboarding
                </button>
              </Link>
            )}
          </div>
        ) : (
          <div style={{
            display: 'grid',
            gridTemplateColumns: 'repeat(auto-fill, minmax(400px, 1fr))',
            gap: '24px'
          }}>
            {filteredDrivers.map((driver) => (
              <DriverCard
                key={driver.driverId}
                driver={driver}
                onClick={() => handleDriverClick(driver)}
              />
            ))}
          </div>
        )}

        {/* Driver Details Modal */}
        {selectedDriver && (
          <div style={{
            position: 'fixed',
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            background: 'rgba(0, 0, 0, 0.8)',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            padding: '20px',
            zIndex: 1000
          }}>
            <div style={{
              background: 'rgba(255, 255, 255, 0.95)',
              backdropFilter: 'blur(15px)',
              borderRadius: '20px',
              padding: '32px',
              maxWidth: '800px',
              width: '100%',
              maxHeight: '80vh',
              overflowY: 'auto',
              border: '1px solid rgba(255, 255, 255, 0.3)'
            }}>
              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '24px' }}>
                <h2 style={{ fontSize: '1.8rem', fontWeight: 'bold', color: '#1f2937', margin: 0 }}>
                  {selectedDriver.personalInfo.name}
                </h2>
                <button
                  onClick={handleCloseDetails}
                  style={{
                    background: 'rgba(239, 68, 68, 0.1)',
                    color: '#ef4444',
                    padding: '8px 12px',
                    borderRadius: '8px',
                    border: '1px solid rgba(239, 68, 68, 0.3)',
                    cursor: 'pointer',
                    fontSize: '1.2rem'
                  }}
                >
                  ‚úï
                </button>
              </div>

              {/* Driver Details Content */}
              <div style={{ display: 'grid', gap: '20px' }}>
                <div>
                  <h3 style={{ color: '#374151', marginBottom: '12px' }}>Personal Information</h3>
                  <div style={{ background: '#f9fafb', padding: '16px', borderRadius: '8px', fontSize: '0.9rem' }}>
                    <p><strong>Name:</strong> {selectedDriver.personalInfo.name}</p>
                    <p><strong>Email:</strong> {selectedDriver.personalInfo.email}</p>
                    <p><strong>Phone:</strong> {selectedDriver.personalInfo.phone}</p>
                    <p><strong>License Number:</strong> {selectedDriver.personalInfo.licenseNumber}</p>
                    <p><strong>License Expiration:</strong> {new Date(selectedDriver.personalInfo.licenseExpiration).toLocaleDateString()}</p>
                  </div>
                </div>

                <div>
                  <h3 style={{ color: '#374151', marginBottom: '12px' }}>Employment Information</h3>
                  <div style={{ background: '#f9fafb', padding: '16px', borderRadius: '8px', fontSize: '0.9rem' }}>
                    <p><strong>Carrier:</strong> {selectedDriver.employmentInfo.carrierName}</p>
                    <p><strong>Start Date:</strong> {new Date(selectedDriver.employmentInfo.startDate).toLocaleDateString()}</p>
                    <p><strong>Role:</strong> {selectedDriver.employmentInfo.role === 'owner_operator' ? 'Owner Operator' : 'Company Driver'}</p>
                    {selectedDriver.employmentInfo.truckNumber && (
                      <p><strong>Truck Number:</strong> {selectedDriver.employmentInfo.truckNumber}</p>
                    )}
                    {selectedDriver.employmentInfo.trailerNumber && (
                      <p><strong>Trailer Number:</strong> {selectedDriver.employmentInfo.trailerNumber}</p>
                    )}
                  </div>
                </div>

                <div>
                  <h3 style={{ color: '#374151', marginBottom: '12px' }}>Portal Access</h3>
                  <div style={{ background: '#f9fafb', padding: '16px', borderRadius: '8px', fontSize: '0.9rem' }}>
                    <p><strong>Email:</strong> {selectedDriver.credentials.email}</p>
                    <p><strong>Account Status:</strong> {selectedDriver.credentials.accountActivated ? '‚úÖ Activated' : '‚è≥ Pending Activation'}</p>
                    {selectedDriver.credentials.temporaryPassword && !selectedDriver.credentials.accountActivated && (
                      <p><strong>Temporary Password:</strong> {selectedDriver.credentials.temporaryPassword}</p>
                    )}
                    {selectedDriver.credentials.lastLogin && (
                      <p><strong>Last Login:</strong> {new Date(selectedDriver.credentials.lastLogin).toLocaleDateString()}</p>
                    )}
                  </div>
                </div>

                <div>
                  <h3 style={{ color: '#374151', marginBottom: '12px' }}>Permissions</h3>
                  <div style={{ background: '#f9fafb', padding: '16px', borderRadius: '8px', fontSize: '0.9rem' }}>
                    <p>‚úÖ View Assigned Loads: {selectedDriver.permissions.canViewAssignedLoads ? 'Yes' : 'No'}</p>
                    <p>üìç Update Location: {selectedDriver.permissions.canUpdateLocation ? 'Yes' : 'No'}</p>
                    <p>üìã Upload PODs: {selectedDriver.permissions.canUploadPODs ? 'Yes' : 'No'}</p>
                    <p>üí¨ Communicate with Dispatch: {selectedDriver.permissions.canCommunicateWithDispatch ? 'Yes' : 'No'}</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}
          </>
        )}

        {/* Driver Login Portal Tab */}
        {activeTab === 'login' && (
          <DriverLoginPortal />
        )}

        {/* Driver Dashboard Tab */}
        {activeTab === 'dashboard' && (
          <DriverDashboardView />
        )}
      </div>
    </div>
  );
}

// Driver Login Portal Component
const DriverLoginPortal: React.FC = () => {
  const [loginEmail, setLoginEmail] = useState('');
  const [loginPassword, setLoginPassword] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [loggedInDriver, setLoggedInDriver] = useState<DriverPortalProfile | null>(null);

  const handleLogin = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsLoading(true);
    
    // Simulate login process
    setTimeout(() => {
      const drivers = onboardingIntegration.getAllDrivers();
      const driver = drivers.find(d => d.credentials.email === loginEmail);
      
      if (driver && driver.credentials.accountActivated) {
        setLoggedInDriver(driver);
      } else {
        alert('Invalid credentials or account not activated');
      }
      setIsLoading(false);
    }, 1000);
  };

  if (loggedInDriver) {
    return <DriverDashboardView driver={loggedInDriver} />;
  }

  return (
    <div style={{
      background: 'rgba(255, 255, 255, 0.9)',
      backdropFilter: 'blur(15px)',
      border: '1px solid rgba(255, 255, 255, 0.3)',
      borderRadius: '20px',
      padding: '40px',
      maxWidth: '500px',
      margin: '0 auto'
    }}>
      <div style={{ textAlign: 'center', marginBottom: '32px' }}>
        <div style={{ fontSize: '4rem', marginBottom: '16px' }}>üöõ</div>
        <h2 style={{ fontSize: '2rem', fontWeight: 'bold', color: '#2d3748', marginBottom: '8px' }}>
          Driver Login
        </h2>
        <p style={{ color: 'rgba(45, 55, 72, 0.8)' }}>
          Access your driver dashboard and load assignments
        </p>
      </div>

      <form onSubmit={handleLogin} style={{ display: 'grid', gap: '20px' }}>
        <div>
          <label style={{ display: 'block', color: '#2d3748', fontWeight: 'bold', marginBottom: '8px' }}>
            Email Address
          </label>
          <input
            type="email"
            value={loginEmail}
            onChange={(e) => setLoginEmail(e.target.value)}
            placeholder="Enter your email address"
            required
            style={{
              width: '100%',
              padding: '12px 16px',
              borderRadius: '8px',
              border: '1px solid rgba(45, 55, 72, 0.3)',
              background: 'rgba(255, 255, 255, 0.7)',
              color: '#2d3748',
              fontSize: '1rem'
            }}
          />
        </div>

        <div>
          <label style={{ display: 'block', color: '#2d3748', fontWeight: 'bold', marginBottom: '8px' }}>
            Password
          </label>
          <input
            type="password"
            value={loginPassword}
            onChange={(e) => setLoginPassword(e.target.value)}
            placeholder="Enter your password"
            required
            style={{
              width: '100%',
              padding: '12px 16px',
              borderRadius: '8px',
              border: '1px solid rgba(45, 55, 72, 0.3)',
              background: 'rgba(255, 255, 255, 0.7)',
              color: '#2d3748',
              fontSize: '1rem'
            }}
          />
        </div>

        <button
          type="submit"
          disabled={isLoading}
          style={{
            background: isLoading 
              ? 'rgba(45, 55, 72, 0.5)' 
              : 'linear-gradient(135deg, #3b82f6, #2563eb)',
            color: 'white',
            padding: '14px 24px',
            borderRadius: '8px',
            border: 'none',
            fontSize: '1.1rem',
            fontWeight: 'bold',
            cursor: isLoading ? 'not-allowed' : 'pointer',
            transition: 'all 0.2s ease'
          }}
        >
          {isLoading ? 'üîÑ Logging in...' : 'üîê Login'}
        </button>
      </form>

      <div style={{
        marginTop: '24px',
        padding: '16px',
        background: 'rgba(59, 130, 246, 0.1)',
        borderRadius: '8px',
        border: '1px solid rgba(59, 130, 246, 0.3)'
      }}>
        <p style={{ color: '#2d3748', fontSize: '0.9rem', margin: 0 }}>
          <strong>Demo Accounts:</strong> Use any email from the driver list in the management tab. 
          Account must be activated to login.
        </p>
      </div>
    </div>
  );
};

// Driver Dashboard View Component
const DriverDashboardView: React.FC<{ driver?: DriverPortalProfile }> = ({ driver }) => {
  const allDrivers = onboardingIntegration.getAllDrivers();
  const demoDriver = driver || allDrivers[0];

  // Get tax alert information
  const driverId = demoDriver ? `driver_${String(allDrivers.indexOf(demoDriver) + 1).padStart(3, '0')}` : '';
  const taxAlerts = driverId ? driverTaxService.getDriverAlerts(driverId) : { urgent: 0, warning: 0, total: 0 };
  const hasUrgentTaxAlerts = driverId ? driverTaxService.hasUrgentAlerts(driverId) : false;

  if (!demoDriver) {
    return (
      <div style={{
        background: 'rgba(255, 255, 255, 0.9)',
        backdropFilter: 'blur(15px)',
        border: '1px solid rgba(255, 255, 255, 0.3)',
        borderRadius: '16px',
        padding: '40px',
        textAlign: 'center'
      }}>
        <div style={{ fontSize: '4rem', marginBottom: '20px' }}>üë§</div>
        <h2 style={{ color: '#2d3748', fontSize: '1.5rem', marginBottom: '16px' }}>
          No Driver Data Available
        </h2>
        <p style={{ color: 'rgba(45, 55, 72, 0.7)' }}>
          Please complete carrier onboarding to create driver accounts.
        </p>
      </div>
    );
  }

  return (
    <div style={{ display: 'grid', gap: '24px' }}>
      {/* Driver Header */}
      <div style={{
        background: 'rgba(255, 255, 255, 0.9)',
        backdropFilter: 'blur(15px)',
        border: '1px solid rgba(255, 255, 255, 0.3)',
        borderRadius: '16px',
        padding: '24px'
      }}>
        <div style={{ display: 'flex', alignItems: 'center', gap: '16px', marginBottom: '16px' }}>
          <div style={{ fontSize: '3rem' }}>üë§</div>
          <div>
            <h2 style={{ fontSize: '1.8rem', fontWeight: 'bold', color: '#2d3748', margin: 0 }}>
              Welcome, {demoDriver.personalInfo.name}
            </h2>
            <p style={{ color: 'rgba(45, 55, 72, 0.7)', margin: 0 }}>
              {demoDriver.employmentInfo.carrierName} ‚Ä¢ {demoDriver.employmentInfo.role === 'owner_operator' ? 'Owner Operator' : 'Company Driver'}
            </p>
          </div>
        </div>
        
        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '16px' }}>
          <div style={{
            background: 'rgba(59, 130, 246, 0.1)',
            borderRadius: '8px',
            padding: '12px',
            textAlign: 'center'
          }}>
            <div style={{ fontSize: '1.5rem', color: '#3b82f6', fontWeight: 'bold' }}>‚úÖ</div>
            <div style={{ color: '#2d3748', fontSize: '0.9rem' }}>Account Active</div>
          </div>
          
          <div style={{
            background: 'rgba(16, 185, 129, 0.1)',
            borderRadius: '8px',
            padding: '12px',
            textAlign: 'center'
          }}>
            <div style={{ fontSize: '1.5rem', color: '#10b981', fontWeight: 'bold' }}>0</div>
            <div style={{ color: '#2d3748', fontSize: '0.9rem' }}>Active Loads</div>
          </div>
          
          <div style={{
            background: 'rgba(245, 158, 11, 0.1)',
            borderRadius: '8px',
            padding: '12px',
            textAlign: 'center'
          }}>
            <div style={{ fontSize: '1.5rem', color: '#f59e0b', fontWeight: 'bold' }}>0</div>
            <div style={{ color: '#2d3748', fontSize: '0.9rem' }}>Completed</div>
          </div>
          
          <div style={{
            background: 'rgba(239, 68, 68, 0.1)',
            borderRadius: '8px',
            padding: '12px',
            textAlign: 'center',
            position: 'relative'
          }}>
            <div style={{ fontSize: '1.5rem', color: '#ef4444', fontWeight: 'bold' }}>
              {taxAlerts.total}
            </div>
            <div style={{ color: '#2d3748', fontSize: '0.9rem' }}>Tax Alerts</div>
            {hasUrgentTaxAlerts && (
              <div style={{
                position: 'absolute',
                top: '4px',
                right: '4px',
                background: '#ef4444',
                color: 'white',
                borderRadius: '50%',
                width: '16px',
                height: '16px',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                fontSize: '0.6rem',
                fontWeight: 'bold'
              }}>
                !
              </div>
            )}
          </div>
        </div>
      </div>

      {/* Quick Actions */}
      <div style={{
        background: 'rgba(255, 255, 255, 0.9)',
        backdropFilter: 'blur(15px)',
        border: '1px solid rgba(255, 255, 255, 0.3)',
        borderRadius: '16px',
        padding: '24px'
      }}>
        <h3 style={{ fontSize: '1.3rem', fontWeight: 'bold', color: '#2d3748', marginBottom: '16px' }}>
          üöÄ Quick Actions
        </h3>
        
        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '16px' }}>
          {[
            { icon: 'ÔøΩ', title: 'Tax Dashboard', desc: 'View IFTA data, tax liability, and filing alerts' },
            { icon: 'ÔøΩüìã', title: 'View Assigned Loads', desc: 'Check your current and upcoming deliveries' },
            { icon: 'üìç', title: 'Update Location', desc: 'Share your current location with dispatch' },
            { icon: 'üì∑', title: 'Upload POD', desc: 'Upload proof of delivery documents' },
            { icon: 'üí¨', title: 'Message Dispatch', desc: 'Communicate with your dispatcher' },
            { icon: 'üìÑ', title: 'View Documents', desc: 'Access your employment documents' },
            { icon: '‚öôÔ∏è', title: 'Settings', desc: 'Update your profile and preferences' }
          ].map((action, index) => (
            <button
              key={index}
              style={{
                background: index === 0 ? 'rgba(245, 158, 11, 0.1)' : 'rgba(255, 255, 255, 0.7)',
                border: index === 0 ? '2px solid #f59e0b' : '1px solid rgba(45, 55, 72, 0.2)',
                borderRadius: '8px',
                padding: '16px',
                textAlign: 'left',
                cursor: 'pointer',
                transition: 'all 0.2s ease',
                position: 'relative'
              }}
              onMouseOver={(e) => {
                if (index === 0) {
                  (e.currentTarget as HTMLElement).style.background = 'rgba(245, 158, 11, 0.2)';
                } else {
                  (e.currentTarget as HTMLElement).style.background = 'rgba(59, 130, 246, 0.1)';
                }
                (e.currentTarget as HTMLElement).style.transform = 'translateY(-2px)';
              }}
              onMouseOut={(e) => {
                if (index === 0) {
                  (e.currentTarget as HTMLElement).style.background = 'rgba(245, 158, 11, 0.1)';
                } else {
                  (e.currentTarget as HTMLElement).style.background = 'rgba(255, 255, 255, 0.7)';
                }
                (e.currentTarget as HTMLElement).style.transform = 'translateY(0)';
              }}
            >
              {index === 0 && (
                <div style={{
                  position: 'absolute',
                  top: '8px',
                  right: '8px',
                  background: '#ef4444',
                  color: 'white',
                  borderRadius: '50%',
                  width: '20px',
                  height: '20px',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center',
                  fontSize: '0.7rem',
                  fontWeight: 'bold'
                }}>
                  !
                </div>
              )}
              <div style={{ fontSize: '1.5rem', marginBottom: '8px' }}>{action.icon}</div>
              <div style={{ fontSize: '1rem', fontWeight: 'bold', color: '#2d3748', marginBottom: '4px' }}>
                {action.title}
              </div>
              <div style={{ fontSize: '0.85rem', color: 'rgba(45, 55, 72, 0.7)' }}>
                {action.desc}
              </div>
            </button>
          ))}
        </div>
      </div>

      {/* Recent Activity */}
      <div style={{
        background: 'rgba(255, 255, 255, 0.9)',
        backdropFilter: 'blur(15px)',
        border: '1px solid rgba(255, 255, 255, 0.3)',
        borderRadius: '16px',
        padding: '24px'
      }}>
        <h3 style={{ fontSize: '1.3rem', fontWeight: 'bold', color: '#2d3748', marginBottom: '16px' }}>
          üìà Recent Activity
        </h3>
        
        <div style={{
          background: 'rgba(245, 158, 11, 0.1)',
          borderRadius: '8px',
          padding: '20px',
          textAlign: 'center'
        }}>
          <div style={{ fontSize: '2rem', marginBottom: '12px' }}>üéØ</div>
          <h4 style={{ color: '#2d3748', marginBottom: '8px' }}>Ready to Start</h4>
          <p style={{ color: 'rgba(45, 55, 72, 0.7)', fontSize: '0.9rem' }}>
            Your account is active and ready to receive load assignments. 
            Check back here for updates on your loads and activities.
          </p>
        </div>
      </div>

      {/* Tax Dashboard */}
      <DriverTaxDashboard 
        driverId={driverId}
        driverName={demoDriver.personalInfo.name}
      />
    </div>
  );
};
