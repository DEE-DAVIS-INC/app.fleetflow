'use client';

import { useRouter } from 'next/navigation';
import { useEffect, useState } from 'react';

import {
  getShipperDashboardSummary,
  getShipperLoads,
} from '../services/loadService';
import { vendorDocumentService } from '../services/vendorDocumentService';

interface VendorSession {
  shipperId: string;
  companyName: string;
  loginTime: string;
}

// Live tracking interface
interface LiveTrackingData {
  loadId: string;
  currentLocation: {
    lat: number;
    lng: number;
    timestamp: string;
    city?: string;
    state?: string;
  };
  estimatedProgress: number;
  realTimeETA: string;
  currentSpeed?: number;
  lastUpdate: string;
  isOnline: boolean;
}

// Phase 1 - Enhanced Load Request System
interface LoadRequest {
  id: string;
  requestType: 'load' | 'rfp' | 'quote_request' | 'spot';
  status: 'pending' | 'quoted' | 'accepted' | 'rejected' | 'completed';
  submittedDate: string;
  pickupDate: string;
  deliveryDate: string;
  origin: string;
  destination: string;
  commodity: string;
  weight: number;
  equipment: string;
  specialInstructions?: string;
  rate?: number;
  brokerResponse?: string;
  responseDate?: string;
}

// Phase 1 - Financial Management
interface FinancialData {
  outstandingInvoices: Invoice[];
  paymentHistory: PaymentRecord[];
  creditLimit: number;
  availableCredit: number;
  paymentTerms: string;
  totalSpent: number;
  averageRate: number;
  onTimePaymentRate: number;
}

interface Invoice {
  id: string;
  loadId: string;
  amount: number;
  dueDate: string;
  status: 'pending' | 'paid' | 'overdue';
  description: string;
}

interface PaymentRecord {
  id: string;
  invoiceId: string;
  amount: number;
  date: string;
  method: string;
  reference: string;
}

// Phase 1 - Multi-User Access Control
interface UserAccess {
  id: string;
  name: string;
  email: string;
  role: 'primary' | 'secondary' | 'readonly' | 'admin';
  permissions: {
    viewLoads: boolean;
    submitRequests: boolean;
    viewFinancials: boolean;
    manageUsers: boolean;
    accessAnalytics: boolean;
  };
  lastLogin: string;
  isActive: boolean;
}

// Phase 1 - Advanced Analytics
interface AnalyticsData {
  loadMetrics: {
    totalLoads: number;
    completedLoads: number;
    onTimeDelivery: number;
    averageTransitTime: number;
    totalRevenue: number;
    averageRate: number;
  };
  performanceTrends: {
    monthlyLoads: number[];
    monthlyRevenue: number[];
    onTimeRate: number[];
  };
  topLanes: {
    origin: string;
    destination: string;
    loadCount: number;
    averageRate: number;
  }[];
}

// Phase 2 - ERP/WMS Integration
interface ERPIntegration {
  sap: {
    connected: boolean;
    lastSync: string;
    syncStatus: 'active' | 'error' | 'disconnected';
    modules: string[];
  };
  oracle: {
    connected: boolean;
    lastSync: string;
    syncStatus: 'active' | 'error' | 'disconnected';
    modules: string[];
  };
  netsuite: {
    connected: boolean;
    lastSync: string;
    syncStatus: 'active' | 'error' | 'disconnected';
    modules: string[];
  };
  quickbooks: {
    connected: boolean;
    lastSync: string;
    syncStatus: 'active' | 'error' | 'disconnected';
    modules: string[];
  };
}

interface WMSIntegration {
  warehouseManagement: {
    connected: boolean;
    warehouses: Warehouse[];
    inventoryLevels: InventoryLevel[];
  };
  inventoryTracking: {
    realTime: boolean;
    lastUpdate: string;
    items: InventoryItem[];
  };
  orderManagement: {
    connected: boolean;
    orders: Order[];
    fulfillmentStatus: FulfillmentStatus[];
  };
}

interface Warehouse {
  id: string;
  name: string;
  location: string;
  capacity: number;
  utilization: number;
  status: 'active' | 'inactive' | 'maintenance';
}

interface InventoryLevel {
  itemId: string;
  itemName: string;
  quantity: number;
  minLevel: number;
  maxLevel: number;
  status: 'normal' | 'low' | 'out';
}

interface InventoryItem {
  id: string;
  name: string;
  sku: string;
  category: string;
  quantity: number;
  location: string;
  lastUpdated: string;
}

interface Order {
  id: string;
  orderNumber: string;
  customer: string;
  items: OrderItem[];
  status: 'pending' | 'processing' | 'shipped' | 'delivered';
  orderDate: string;
  expectedDelivery: string;
}

interface OrderItem {
  id: string;
  name: string;
  quantity: number;
  unitPrice: number;
  totalPrice: number;
}

interface FulfillmentStatus {
  orderId: string;
  status: 'pending' | 'picked' | 'packed' | 'shipped' | 'delivered';
  timestamp: string;
  location: string;
}

// Phase 2 - Contract Management
interface ContractManagement {
  volumeCommitments: Contract[];
  laneAgreements: Contract[];
  spotRates: Contract[];
  seasonalRates: Contract[];
  rateOptimization: RateOptimization;
}

interface Contract {
  id: string;
  type: 'volume' | 'lane' | 'spot' | 'seasonal';
  name: string;
  startDate: string;
  endDate: string;
  status: 'active' | 'expired' | 'pending' | 'cancelled';
  terms: ContractTerms;
  performance: ContractPerformance;
}

interface ContractTerms {
  origin: string;
  destination: string;
  rate: number;
  volume: number;
  equipment: string;
  specialRequirements?: string[];
}

interface ContractPerformance {
  loadsCompleted: number;
  volumeAchieved: number;
  onTimeRate: number;
  costSavings: number;
  complianceRate: number;
}

interface RateOptimization {
  aiRecommendations: RateRecommendation[];
  marketAnalysis: MarketData[];
  competitorBenchmarking: CompetitorData[];
  costOptimization: OptimizationResult[];
}

interface RateRecommendation {
  id: string;
  lane: string;
  currentRate: number;
  recommendedRate: number;
  confidence: number;
  reasoning: string;
  potentialSavings: number;
}

interface MarketData {
  date: string;
  averageRate: number;
  volume: number;
  demand: number;
  supply: number;
}

interface CompetitorData {
  competitor: string;
  rate: number;
  service: string;
  marketShare: number;
}

interface OptimizationResult {
  category: string;
  currentCost: number;
  optimizedCost: number;
  savings: number;
  recommendations: string[];
}

// Phase 2 - Advanced Tracking
interface AdvancedTracking {
  realTimeGPS: {
    enabled: boolean;
    accuracy: number;
    updateFrequency: number;
    lastUpdate: string;
  };
  temperatureMonitoring: {
    enabled: boolean;
    sensors: TemperatureSensor[];
    alerts: TemperatureAlert[];
  };
  fuelMonitoring: {
    enabled: boolean;
    currentLevel: number;
    efficiency: number;
    alerts: FuelAlert[];
  };
  driverBehavior: {
    enabled: boolean;
    metrics: DriverMetrics;
    alerts: DriverAlert[];
  };
  maintenanceAlerts: {
    enabled: boolean;
    alerts: MaintenanceAlert[];
    schedule: MaintenanceSchedule[];
  };
}

interface TemperatureSensor {
  id: string;
  location: string;
  currentTemp: number;
  minTemp: number;
  maxTemp: number;
  status: 'normal' | 'warning' | 'critical';
}

interface TemperatureAlert {
  id: string;
  sensorId: string;
  type: 'high' | 'low' | 'critical';
  temperature: number;
  timestamp: string;
  resolved: boolean;
}

interface FuelAlert {
  id: string;
  type: 'low' | 'efficiency' | 'theft';
  message: string;
  timestamp: string;
  severity: 'low' | 'medium' | 'high';
}

interface DriverMetrics {
  idling: number;
  harshBraking: number;
  speeding: number;
  fuelEfficiency: number;
  safetyScore: number;
}

interface DriverAlert {
  id: string;
  type: 'idling' | 'harsh_braking' | 'speeding' | 'fatigue';
  severity: 'low' | 'medium' | 'high';
  timestamp: string;
  location: string;
}

interface MaintenanceAlert {
  id: string;
  vehicleId: string;
  type: 'scheduled' | 'urgent' | 'preventive';
  description: string;
  dueDate: string;
  priority: 'low' | 'medium' | 'high';
}

interface MaintenanceSchedule {
  vehicleId: string;
  serviceType: string;
  lastService: string;
  nextService: string;
  mileage: number;
}

// Phase 2 - Custom Branding
interface CustomBranding {
  customLogo: {
    enabled: boolean;
    url: string;
    altText: string;
  };
  customColors: {
    enabled: boolean;
    primary: string;
    secondary: string;
    accent: string;
  };
  customDomain: {
    enabled: boolean;
    domain: string;
    ssl: boolean;
  };
  customEmailTemplates: {
    enabled: boolean;
    templates: EmailTemplate[];
  };
}

interface EmailTemplate {
  id: string;
  name: string;
  subject: string;
  body: string;
  variables: string[];
  active: boolean;
}

// Phase 2 - Workflow Customization
interface WorkflowCustomization {
  customApprovalProcess: {
    enabled: boolean;
    steps: ApprovalStep[];
    approvers: Approver[];
  };
  customNotificationRules: {
    enabled: boolean;
    rules: NotificationRule[];
  };
  customReportTemplates: {
    enabled: boolean;
    templates: ReportTemplate[];
  };
  customFieldDefinitions: {
    enabled: boolean;
    fields: CustomField[];
  };
}

interface ApprovalStep {
  id: string;
  name: string;
  order: number;
  approver: string;
  required: boolean;
}

interface Approver {
  id: string;
  name: string;
  email: string;
  role: string;
  permissions: string[];
}

interface NotificationRule {
  id: string;
  name: string;
  trigger: string;
  conditions: NotificationCondition[];
  actions: NotificationAction[];
  active: boolean;
}

interface NotificationCondition {
  field: string;
  operator: string;
  value: string;
}

interface NotificationAction {
  type: 'email' | 'sms' | 'push' | 'webhook';
  target: string;
  template: string;
}

interface ReportTemplate {
  id: string;
  name: string;
  description: string;
  fields: string[];
  format: 'pdf' | 'excel' | 'csv';
  schedule: string;
}

interface CustomField {
  id: string;
  name: string;
  type: 'text' | 'number' | 'date' | 'select' | 'boolean';
  required: boolean;
  options?: string[];
  validation?: string;
}

export default function VendorPortalPage() {
  const [session, setSession] = useState<VendorSession | null>(null);
  const [loads, setLoads] = useState<any[]>([]);
  const [dashboardSummary, setDashboardSummary] = useState<any>(null);
  const [selectedLoad, setSelectedLoad] = useState<any>(null);
  const [isLoading, setIsLoading] = useState(true);
  const [activeTab, setActiveTab] = useState<
    | 'dashboard'
    | 'operations'
    | 'financials'
    | 'analytics'
    | 'integrations'
    | 'settings'
  >('dashboard');

  // Live tracking state
  const [liveTrackingData, setLiveTrackingData] = useState<LiveTrackingData[]>(
    []
  );
  const [trackingRefreshInterval, setTrackingRefreshInterval] =
    useState<NodeJS.Timeout | null>(null);
  const [selectedTrackingLoad, setSelectedTrackingLoad] = useState<
    string | null
  >(null);

  // Phase 1 - New state management
  const [loadRequests, setLoadRequests] = useState<LoadRequest[]>([]);
  const [financialData, setFinancialData] = useState<FinancialData | null>(
    null
  );
  const [userAccess, setUserAccess] = useState<UserAccess[]>([]);
  const [analyticsData, setAnalyticsData] = useState<AnalyticsData | null>(
    null
  );
  const [showNewRequestForm, setShowNewRequestForm] = useState(false);
  const [newRequestData, setNewRequestData] = useState<Partial<LoadRequest>>(
    {}
  );
  const [showNewUserForm, setShowNewUserForm] = useState(false);
  const [newUserData, setNewUserData] = useState<Partial<UserAccess>>({});

  // Phase 2 - New state management
  const [erpIntegration, setErpIntegration] = useState<ERPIntegration | null>(
    null
  );
  const [wmsIntegration, setWmsIntegration] = useState<WMSIntegration | null>(
    null
  );
  const [contractManagement, setContractManagement] =
    useState<ContractManagement | null>(null);
  const [advancedTracking, setAdvancedTracking] =
    useState<AdvancedTracking | null>(null);
  const [customBranding, setCustomBranding] = useState<CustomBranding | null>(
    null
  );
  const [workflowCustomization, setWorkflowCustomization] =
    useState<WorkflowCustomization | null>(null);

  // Debug: Log activeTab changes
  useEffect(() => {
    console.log('Active tab changed to:', activeTab);
  }, [activeTab]);

  // Force CSS reset for scrolling on component mount
  useEffect(() => {
    console.log('🎯 INITIALIZING SCROLL CSS RESET');

    // Reset any CSS that might prevent scrolling
    document.documentElement.style.overflow = 'auto';
    document.documentElement.style.height = 'auto';
    document.documentElement.style.scrollBehavior = 'auto';
    document.body.style.overflow = 'auto';
    document.body.style.height = 'auto';
    document.body.style.scrollBehavior = 'auto';

    // Add pulse animation CSS
    const style = document.createElement('style');
    style.textContent = `
      @keyframes pulse {
        0%, 100% {
          opacity: 1;
          transform: scale(1);
        }
        50% {
          opacity: 0.5;
          transform: scale(1.1);
        }
      }
    `;
    document.head.appendChild(style);

    console.log('🎯 CSS RESET COMPLETE');
  }, []);

  const router = useRouter();

  // SIMPLE PAGE REFRESH: Most reliable way to get to top
  const scrollToTop = () => {
    console.log('🔄 FORCING PAGE REFRESH - Direct approach');
    window.location.reload();
  };

  // Live tracking functions
  const generateMockTrackingData = (load: any): LiveTrackingData => {
    const baseLat = 33.749; // Atlanta
    const baseLng = -84.388;
    const progress =
      load.currentStatus === 'in_transit' ? Math.random() * 0.8 + 0.1 : 0;

    return {
      loadId: load.loadId,
      currentLocation: {
        lat: baseLat + (Math.random() - 0.5) * 2,
        lng: baseLng + (Math.random() - 0.5) * 2,
        timestamp: new Date().toISOString(),
        city: 'Atlanta',
        state: 'GA',
      },
      estimatedProgress: progress,
      realTimeETA: new Date(
        Date.now() + Math.random() * 24 * 60 * 60 * 1000
      ).toISOString(),
      currentSpeed: Math.random() * 20 + 50, // 50-70 mph
      lastUpdate: new Date().toISOString(),
      isOnline: Math.random() > 0.1, // 90% online rate
    };
  };

  const updateLiveTracking = () => {
    const inTransitLoads = loads.filter(
      (load) => load.currentStatus === 'in_transit'
    );
    const newTrackingData = inTransitLoads.map((load) =>
      generateMockTrackingData(load)
    );
    setLiveTrackingData(newTrackingData);
  };

  // Start live tracking when loads tab is active
  useEffect(() => {
    if (activeTab === 'operations' && loads.length > 0) {
      // Initial update
      updateLiveTracking();

      // Set up interval for live updates
      const interval = setInterval(updateLiveTracking, 30000); // Update every 30 seconds
      setTrackingRefreshInterval(interval);

      return () => {
        if (interval) clearInterval(interval);
      };
    } else {
      // Clear interval when not on loads tab
      if (trackingRefreshInterval) {
        clearInterval(trackingRefreshInterval);
        setTrackingRefreshInterval(null);
      }
    }
  }, [activeTab, loads]);

  useEffect(() => {
    // Check if user is logged in
    const sessionData = localStorage.getItem('vendorSession');
    if (!sessionData) {
      router.push('/vendor-login');
      return;
    }

    const parsedSession = JSON.parse(sessionData);
    setSession(parsedSession);
    loadDashboardData(parsedSession.shipperId);
    loadPhase1Data(parsedSession.shipperId);
    loadPhase2Data(parsedSession.shipperId);
  }, [router]);

  // Removed useEffect for tab changes - now handled directly in onClick

  // No need for floating scroll button since we use page refresh

  const loadDashboardData = async (shipperId: string) => {
    try {
      setIsLoading(true);
      const [loadsData, summaryData] = await Promise.all([
        getShipperLoads(shipperId),
        getShipperDashboardSummary(shipperId),
      ]);

      // Add a mock in-transit load for demonstration
      const mockInTransitLoad = {
        id: 'LF-25001-ATLMIA-WMT-DVFL-001',
        loadId: 'LF-25001-ATLMIA-WMT-DVFL-001',
        currentStatus: 'in_transit',
        origin: 'Atlanta, GA',
        destination: 'Miami, FL',
        commodity: 'Electronics',
        weight: 15000,
        equipment: 'Dry Van',
        rate: 2800,
        pickupDate: new Date(
          Date.now() - 2 * 24 * 60 * 60 * 1000
        ).toISOString(),
        deliveryDate: new Date(
          Date.now() + 1 * 24 * 60 * 60 * 1000
        ).toISOString(),
        driver: 'John Rodriguez',
        truck: 'ABC-123',
        trailer: 'XYZ-789',
      };

      setLoads([mockInTransitLoad, ...loadsData]);
      setDashboardSummary(summaryData);
    } catch (error) {
      console.error('Error loading dashboard data:', error);
    } finally {
      setIsLoading(false);
    }
  };

  // Phase 1 - Load enhanced data
  const loadPhase1Data = async (shipperId: string) => {
    try {
      // Mock data for Phase 1 features
      const mockLoadRequests: LoadRequest[] = [
        {
          id: 'LR-001',
          requestType: 'load',
          status: 'quoted',
          submittedDate: new Date(
            Date.now() - 2 * 24 * 60 * 60 * 1000
          ).toISOString(),
          pickupDate: new Date(
            Date.now() + 3 * 24 * 60 * 60 * 1000
          ).toISOString(),
          deliveryDate: new Date(
            Date.now() + 5 * 24 * 60 * 60 * 1000
          ).toISOString(),
          origin: 'Atlanta, GA',
          destination: 'Miami, FL',
          commodity: 'Electronics',
          weight: 15000,
          equipment: 'Dry Van',
          rate: 2800,
          brokerResponse: 'Rate confirmed. Driver assigned.',
          responseDate: new Date(
            Date.now() - 1 * 24 * 60 * 60 * 1000
          ).toISOString(),
        },
        {
          id: 'LR-002',
          requestType: 'rfp',
          status: 'pending',
          submittedDate: new Date(
            Date.now() - 1 * 24 * 60 * 60 * 1000
          ).toISOString(),
          pickupDate: new Date(
            Date.now() + 7 * 24 * 60 * 60 * 1000
          ).toISOString(),
          deliveryDate: new Date(
            Date.now() + 10 * 24 * 60 * 60 * 1000
          ).toISOString(),
          origin: 'Chicago, IL',
          destination: 'Los Angeles, CA',
          commodity: 'Automotive Parts',
          weight: 25000,
          equipment: 'Reefer',
          specialInstructions: 'Temperature controlled - keep at 35°F',
        },
      ];

      const mockFinancialData: FinancialData = {
        outstandingInvoices: [
          {
            id: 'INV-001',
            loadId: 'LF-25001-ATLMIA-WMT-DVFL-001',
            amount: 2800,
            dueDate: new Date(
              Date.now() + 15 * 24 * 60 * 60 * 1000
            ).toISOString(),
            status: 'pending',
            description: 'Atlanta to Miami - Electronics',
          },
          {
            id: 'INV-002',
            loadId: 'LF-25002-CHILAX-TS-DVFL-002',
            amount: 4200,
            dueDate: new Date(
              Date.now() + 8 * 24 * 60 * 60 * 1000
            ).toISOString(),
            status: 'pending',
            description: 'Chicago to LA - Automotive Parts',
          },
        ],
        paymentHistory: [
          {
            id: 'PAY-001',
            invoiceId: 'INV-003',
            amount: 1800,
            date: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
            method: 'ACH',
            reference: 'ACH-2024-001',
          },
        ],
        creditLimit: 50000,
        availableCredit: 43000,
        paymentTerms: 'Net 30',
        totalSpent: 125000,
        averageRate: 2850,
        onTimePaymentRate: 95.2,
      };

      const mockUserAccess: UserAccess[] = [
        {
          id: 'USR-001',
          name: 'John Smith',
          email: 'john.smith@abcmfg.com',
          role: 'primary',
          permissions: {
            viewLoads: true,
            submitRequests: true,
            viewFinancials: true,
            manageUsers: true,
            accessAnalytics: true,
          },
          lastLogin: new Date().toISOString(),
          isActive: true,
        },
        {
          id: 'USR-002',
          name: 'Sarah Johnson',
          email: 'sarah.johnson@abcmfg.com',
          role: 'secondary',
          permissions: {
            viewLoads: true,
            submitRequests: true,
            viewFinancials: false,
            manageUsers: false,
            accessAnalytics: false,
          },
          lastLogin: new Date(
            Date.now() - 2 * 24 * 60 * 60 * 1000
          ).toISOString(),
          isActive: true,
        },
      ];

      const mockAnalyticsData: AnalyticsData = {
        loadMetrics: {
          totalLoads: 47,
          completedLoads: 42,
          onTimeDelivery: 96.2,
          averageTransitTime: 2.3,
          totalRevenue: 125000,
          averageRate: 2850,
        },
        performanceTrends: {
          monthlyLoads: [12, 15, 18, 14, 16, 19, 22, 20, 18, 21, 24, 26],
          monthlyRevenue: [
            32000, 38000, 42000, 36000, 41000, 45000, 52000, 48000, 43000,
            49000, 55000, 58000,
          ],
          onTimeRate: [94, 95, 96, 93, 97, 96, 98, 95, 96, 97, 98, 96],
        },
        topLanes: [
          {
            origin: 'Atlanta, GA',
            destination: 'Miami, FL',
            loadCount: 12,
            averageRate: 2800,
          },
          {
            origin: 'Chicago, IL',
            destination: 'Los Angeles, CA',
            loadCount: 8,
            averageRate: 4200,
          },
        ],
      };

      setLoadRequests(mockLoadRequests);
      setFinancialData(mockFinancialData);
      setUserAccess(mockUserAccess);
      setAnalyticsData(mockAnalyticsData);
    } catch (error) {
      console.error('Error loading Phase 1 data:', error);
    }
  };

  // Phase 2 - Load enhanced data
  const loadPhase2Data = async (shipperId: string) => {
    try {
      // Mock data for Phase 2 features
      const mockErpIntegration: ERPIntegration = {
        sap: {
          connected: true,
          lastSync: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),
          syncStatus: 'active',
          modules: ['MM', 'SD', 'FI', 'CO'],
        },
        oracle: {
          connected: false,
          lastSync: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),
          syncStatus: 'disconnected',
          modules: [],
        },
        netsuite: {
          connected: true,
          lastSync: new Date(Date.now() - 30 * 60 * 1000).toISOString(),
          syncStatus: 'active',
          modules: ['Inventory', 'Orders', 'Financials'],
        },
        quickbooks: {
          connected: true,
          lastSync: new Date(Date.now() - 15 * 60 * 1000).toISOString(),
          syncStatus: 'active',
          modules: ['Invoicing', 'Payments', 'Reports'],
        },
      };

      const mockWmsIntegration: WMSIntegration = {
        warehouseManagement: {
          connected: true,
          warehouses: [
            {
              id: 'WH-001',
              name: 'Main Distribution Center',
              location: 'Atlanta, GA',
              capacity: 50000,
              utilization: 78.5,
              status: 'active',
            },
            {
              id: 'WH-002',
              name: 'West Coast Hub',
              location: 'Los Angeles, CA',
              capacity: 35000,
              utilization: 65.2,
              status: 'active',
            },
          ],
          inventoryLevels: [
            {
              itemId: 'ITEM-001',
              itemName: 'Electronics Component A',
              quantity: 1250,
              minLevel: 500,
              maxLevel: 2000,
              status: 'normal',
            },
            {
              itemId: 'ITEM-002',
              itemName: 'Automotive Part B',
              quantity: 75,
              minLevel: 100,
              maxLevel: 500,
              status: 'low',
            },
          ],
        },
        inventoryTracking: {
          realTime: true,
          lastUpdate: new Date().toISOString(),
          items: [
            {
              id: 'INV-001',
              name: 'Electronics Component A',
              sku: 'EC-A-001',
              category: 'Electronics',
              quantity: 1250,
              location: 'A1-B2-C3',
              lastUpdated: new Date().toISOString(),
            },
          ],
        },
        orderManagement: {
          connected: true,
          orders: [
            {
              id: 'ORD-001',
              orderNumber: 'PO-2024-001',
              customer: 'Tech Solutions LLC',
              items: [
                {
                  id: 'OI-001',
                  name: 'Electronics Component A',
                  quantity: 100,
                  unitPrice: 25.5,
                  totalPrice: 2550.0,
                },
              ],
              status: 'processing',
              orderDate: new Date(
                Date.now() - 2 * 24 * 60 * 60 * 1000
              ).toISOString(),
              expectedDelivery: new Date(
                Date.now() + 3 * 24 * 60 * 60 * 1000
              ).toISOString(),
            },
          ],
          fulfillmentStatus: [
            {
              orderId: 'ORD-001',
              status: 'picked',
              timestamp: new Date().toISOString(),
              location: 'Main Distribution Center',
            },
          ],
        },
      };

      const mockContractManagement: ContractManagement = {
        volumeCommitments: [
          {
            id: 'CON-001',
            type: 'volume',
            name: 'Q1 2024 Volume Commitment',
            startDate: new Date(
              Date.now() - 30 * 24 * 60 * 60 * 1000
            ).toISOString(),
            endDate: new Date(
              Date.now() + 60 * 24 * 60 * 60 * 1000
            ).toISOString(),
            status: 'active',
            terms: {
              origin: 'Atlanta, GA',
              destination: 'Miami, FL',
              rate: 2800,
              volume: 50,
              equipment: 'Dry Van',
            },
            performance: {
              loadsCompleted: 35,
              volumeAchieved: 70,
              onTimeRate: 96.2,
              costSavings: 12500,
              complianceRate: 98.5,
            },
          },
        ],
        laneAgreements: [
          {
            id: 'CON-002',
            type: 'lane',
            name: 'Chicago-LA Dedicated Lane',
            startDate: new Date(
              Date.now() - 15 * 24 * 60 * 60 * 1000
            ).toISOString(),
            endDate: new Date(
              Date.now() + 45 * 24 * 60 * 60 * 1000
            ).toISOString(),
            status: 'active',
            terms: {
              origin: 'Chicago, IL',
              destination: 'Los Angeles, CA',
              rate: 4200,
              volume: 25,
              equipment: 'Reefer',
              specialRequirements: [
                'Temperature controlled',
                'Hazmat certified',
              ],
            },
            performance: {
              loadsCompleted: 18,
              volumeAchieved: 72,
              onTimeRate: 94.4,
              costSavings: 8500,
              complianceRate: 97.2,
            },
          },
        ],
        spotRates: [],
        seasonalRates: [],
        rateOptimization: {
          aiRecommendations: [
            {
              id: 'REC-001',
              lane: 'Atlanta-Miami',
              currentRate: 2800,
              recommendedRate: 2650,
              confidence: 85,
              reasoning:
                'Market analysis shows 5.4% rate decrease due to increased capacity',
              potentialSavings: 7500,
            },
          ],
          marketAnalysis: [
            {
              date: new Date().toISOString(),
              averageRate: 2850,
              volume: 1250,
              demand: 8.5,
              supply: 7.2,
            },
          ],
          competitorBenchmarking: [
            {
              competitor: 'Competitor A',
              rate: 2900,
              service: 'Standard',
              marketShare: 15.2,
            },
          ],
          costOptimization: [
            {
              category: 'Fuel Optimization',
              currentCost: 45000,
              optimizedCost: 41000,
              savings: 4000,
              recommendations: [
                'Implement route optimization',
                'Use fuel-efficient vehicles',
              ],
            },
          ],
        },
      };

      const mockAdvancedTracking: AdvancedTracking = {
        realTimeGPS: {
          enabled: true,
          accuracy: 95.2,
          updateFrequency: 30,
          lastUpdate: new Date().toISOString(),
        },
        temperatureMonitoring: {
          enabled: true,
          sensors: [
            {
              id: 'TEMP-001',
              location: 'Trailer Front',
              currentTemp: 35.2,
              minTemp: 32,
              maxTemp: 38,
              status: 'normal',
            },
            {
              id: 'TEMP-002',
              location: 'Trailer Rear',
              currentTemp: 36.8,
              minTemp: 32,
              maxTemp: 38,
              status: 'warning',
            },
          ],
          alerts: [
            {
              id: 'TEMP-ALERT-001',
              sensorId: 'TEMP-002',
              type: 'high',
              temperature: 36.8,
              timestamp: new Date().toISOString(),
              resolved: false,
            },
          ],
        },
        fuelMonitoring: {
          enabled: true,
          currentLevel: 78.5,
          efficiency: 6.8,
          alerts: [
            {
              id: 'FUEL-ALERT-001',
              type: 'efficiency',
              message: 'Fuel efficiency below target by 12%',
              timestamp: new Date().toISOString(),
              severity: 'medium',
            },
          ],
        },
        driverBehavior: {
          enabled: true,
          metrics: {
            idling: 8.5,
            harshBraking: 2.1,
            speeding: 1.8,
            fuelEfficiency: 6.8,
            safetyScore: 92.5,
          },
          alerts: [
            {
              id: 'DRIVER-ALERT-001',
              type: 'idling',
              severity: 'medium',
              timestamp: new Date().toISOString(),
              location: 'Atlanta, GA',
            },
          ],
        },
        maintenanceAlerts: {
          enabled: true,
          alerts: [
            {
              id: 'MAINT-ALERT-001',
              vehicleId: 'TRK-001',
              type: 'scheduled',
              description: 'Oil change due in 500 miles',
              dueDate: new Date(
                Date.now() + 7 * 24 * 60 * 60 * 1000
              ).toISOString(),
              priority: 'medium',
            },
          ],
          schedule: [
            {
              vehicleId: 'TRK-001',
              serviceType: 'Oil Change',
              lastService: new Date(
                Date.now() - 30 * 24 * 60 * 60 * 1000
              ).toISOString(),
              nextService: new Date(
                Date.now() + 7 * 24 * 60 * 60 * 1000
              ).toISOString(),
              mileage: 48500,
            },
          ],
        },
      };

      const mockCustomBranding: CustomBranding = {
        customLogo: {
          enabled: true,
          url: '/images/custom-logo.png',
          altText: 'ABC Manufacturing Corp Logo',
        },
        customColors: {
          enabled: true,
          primary: '#1e40af',
          secondary: '#3b82f6',
          accent: '#f59e0b',
        },
        customDomain: {
          enabled: false,
          domain: '',
          ssl: false,
        },
        customEmailTemplates: {
          enabled: true,
          templates: [
            {
              id: 'TPL-001',
              name: 'Load Confirmation',
              subject: 'Load #{loadId} Confirmed',
              body: 'Your load has been confirmed and is scheduled for pickup on {pickupDate}.',
              variables: ['loadId', 'pickupDate'],
              active: true,
            },
          ],
        },
      };

      const mockWorkflowCustomization: WorkflowCustomization = {
        customApprovalProcess: {
          enabled: true,
          steps: [
            {
              id: 'STEP-001',
              name: 'Manager Review',
              order: 1,
              approver: 'John Smith',
              required: true,
            },
            {
              id: 'STEP-002',
              name: 'Finance Approval',
              order: 2,
              approver: 'Sarah Johnson',
              required: true,
            },
          ],
          approvers: [
            {
              id: 'APPR-001',
              name: 'John Smith',
              email: 'john.smith@abcmfg.com',
              role: 'Operations Manager',
              permissions: ['approve_loads', 'view_financials'],
            },
          ],
        },
        customNotificationRules: {
          enabled: true,
          rules: [
            {
              id: 'RULE-001',
              name: 'Load Status Updates',
              trigger: 'load_status_change',
              conditions: [
                {
                  field: 'status',
                  operator: 'equals',
                  value: 'delivered',
                },
              ],
              actions: [
                {
                  type: 'email',
                  target: 'customer',
                  template: 'load_delivered',
                },
              ],
              active: true,
            },
          ],
        },
        customReportTemplates: {
          enabled: true,
          templates: [
            {
              id: 'RPT-001',
              name: 'Monthly Performance Report',
              description: 'Comprehensive monthly performance metrics',
              fields: ['loads', 'revenue', 'on_time_rate', 'cost_savings'],
              format: 'pdf',
              schedule: 'monthly',
            },
          ],
        },
        customFieldDefinitions: {
          enabled: true,
          fields: [
            {
              id: 'FLD-001',
              name: 'Customer Reference',
              type: 'text',
              required: true,
              validation: 'max_length:50',
            },
          ],
        },
      };

      setErpIntegration(mockErpIntegration);
      setWmsIntegration(mockWmsIntegration);
      setContractManagement(mockContractManagement);
      setAdvancedTracking(mockAdvancedTracking);
      setCustomBranding(mockCustomBranding);
      setWorkflowCustomization(mockWorkflowCustomization);
    } catch (error) {
      console.error('Error loading Phase 2 data:', error);
    }
  };

  const handleLogout = () => {
    localStorage.removeItem('vendorSession');
    router.push('/vendor-login');
  };

  const getStatusIcon = (status: string) => {
    switch (status) {
      case 'dispatched':
        return '🚛';
      case 'pickup_complete':
        return '📋';
      case 'in_transit':
        return '🛣️';
      case 'delivered':
        return '✅';
      default:
        return '📦';
    }
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'dispatched':
        return '#3b82f6';
      case 'pickup_complete':
        return '#f59e0b';
      case 'in_transit':
        return '#10b981';
      case 'delivered':
        return '#059669';
      default:
        return '#6b7280';
    }
  };

  // Live tracking helper functions
  const getTrackingStatus = (loadId: string) => {
    return liveTrackingData.find((tracking) => tracking.loadId === loadId);
  };

  const formatETA = (eta: string) => {
    const etaDate = new Date(eta);
    const now = new Date();
    const diffHours = Math.floor(
      (etaDate.getTime() - now.getTime()) / (1000 * 60 * 60)
    );

    if (diffHours < 1) return 'Less than 1 hour';
    if (diffHours < 24) return `${diffHours} hours`;
    const diffDays = Math.floor(diffHours / 24);
    return `${diffDays} days`;
  };

  const getProgressColor = (progress: number) => {
    if (progress < 0.3) return '#ef4444';
    if (progress < 0.7) return '#f59e0b';
    return '#10b981';
  };

  // Phase 1 - Helper functions
  const getRequestStatusColor = (status: string) => {
    switch (status) {
      case 'pending':
        return '#f59e0b';
      case 'quoted':
        return '#3b82f6';
      case 'accepted':
        return '#10b981';
      case 'rejected':
        return '#ef4444';
      case 'completed':
        return '#059669';
      default:
        return '#6b7280';
    }
  };

  const getRequestTypeIcon = (type: string) => {
    switch (type) {
      case 'load':
        return '🚛';
      case 'rfp':
        return '📋';
      case 'quote_request':
        return '💰';
      case 'spot':
        return '⚡';
      default:
        return '📦';
    }
  };

  const handleSubmitRequest = () => {
    if (
      !newRequestData.origin ||
      !newRequestData.destination ||
      !newRequestData.commodity
    ) {
      alert('Please fill in required fields');
      return;
    }

    const newRequest: LoadRequest = {
      id: `LR-${Date.now()}`,
      requestType: newRequestData.requestType || 'load',
      status: 'pending',
      submittedDate: new Date().toISOString(),
      pickupDate: newRequestData.pickupDate || '',
      deliveryDate: newRequestData.deliveryDate || '',
      origin: newRequestData.origin || '',
      destination: newRequestData.destination || '',
      commodity: newRequestData.commodity || '',
      weight: newRequestData.weight || 0,
      equipment: newRequestData.equipment || 'Dry Van',
      specialInstructions: newRequestData.specialInstructions,
    };

    setLoadRequests((prev) => [newRequest, ...prev]);
    setShowNewRequestForm(false);
    setNewRequestData({});
  };

  if (isLoading) {
    return (
      <div
        style={{
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          minHeight: '100vh',
          background:
            'linear-gradient(135deg, #022c22 0%, #044e46 50%, #0a1612 100%)',
        }}
      >
        <div style={{ color: 'white', fontSize: '1.2rem' }}>🔄 Loading...</div>
      </div>
    );
  }

  if (!session) {
    return null;
  }

  return (
    <div
      style={{
        background:
          'linear-gradient(135deg, #022c22 0%, #044e46 50%, #0a1612 100%)',
        minHeight: '100vh',
        padding: '20px',
        fontFamily: 'system-ui, sans-serif',
      }}
    >
      {/* Header */}
      <div
        style={{
          background: 'rgba(255, 255, 255, 0.1)',
          backdropFilter: 'blur(10px)',
          borderRadius: '16px',
          padding: '24px',
          marginBottom: '24px',
          border: '1px solid rgba(255, 255, 255, 0.2)',
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center',
        }}
      >
        <div>
          <h1
            style={{
              color: 'white',
              margin: 0,
              fontSize: '2rem',
              fontWeight: '700',
              background: 'linear-gradient(45deg, #3b82f6, #06b6d4)',
              backgroundClip: 'text',
              WebkitBackgroundClip: 'text',
              WebkitTextFillColor: 'transparent',
              marginBottom: '8px',
            }}
          >
            🚚 {session.companyName}
          </h1>
          <p
            style={{
              color: 'rgba(255, 255, 255, 0.8)',
              margin: '4px 0 0 0',
              fontSize: '1rem',
              fontWeight: '500',
            }}
          >
            Enterprise Shipper Portal • Phase 2 Enhanced • Real-Time Operations
          </p>
          <div
            style={{
              display: 'flex',
              alignItems: 'center',
              gap: '16px',
              marginTop: '8px',
            }}
          >
            <span
              style={{
                background: 'rgba(16, 185, 129, 0.2)',
                color: '#10b981',
                padding: '4px 8px',
                borderRadius: '12px',
                fontSize: '0.8rem',
                fontWeight: '600',
              }}
            >
              ✅ Connected
            </span>
            <span
              style={{
                background: 'rgba(59, 130, 246, 0.2)',
                color: '#60a5fa',
                padding: '4px 8px',
                borderRadius: '12px',
                fontSize: '0.8rem',
                fontWeight: '600',
              }}
            >
              🔄 Live Updates
            </span>
            <span
              style={{
                background: 'rgba(236, 72, 153, 0.2)',
                color: '#ec4899',
                padding: '4px 8px',
                borderRadius: '12px',
                fontSize: '0.8rem',
                fontWeight: '600',
              }}
            >
              🤖 AI Enhanced
            </span>
          </div>
        </div>
        <div style={{ display: 'flex', gap: '12px', alignItems: 'center' }}>
          <button
            style={{
              background: 'rgba(59, 130, 246, 0.2)',
              color: '#60a5fa',
              border: '1px solid rgba(59, 130, 246, 0.3)',
              borderRadius: '8px',
              padding: '8px 16px',
              cursor: 'pointer',
              fontSize: '0.9rem',
              fontWeight: '500',
              display: 'flex',
              alignItems: 'center',
              gap: '6px',
            }}
          >
            📞 Support
          </button>
          <button
            style={{
              background: 'rgba(245, 158, 11, 0.2)',
              color: '#fbbf24',
              border: '1px solid rgba(245, 158, 11, 0.3)',
              borderRadius: '8px',
              padding: '8px 16px',
              cursor: 'pointer',
              fontSize: '0.9rem',
              fontWeight: '500',
              display: 'flex',
              alignItems: 'center',
              gap: '6px',
              position: 'relative',
            }}
          >
            🔔 Alerts
            <span
              style={{
                position: 'absolute',
                top: '-4px',
                right: '-4px',
                background: '#ef4444',
                color: 'white',
                borderRadius: '50%',
                width: '16px',
                height: '16px',
                fontSize: '0.7rem',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                fontWeight: '600',
              }}
            >
              3
            </span>
          </button>
          <button
            style={{
              background: 'rgba(16, 185, 129, 0.2)',
              color: '#34d399',
              border: '1px solid rgba(16, 185, 129, 0.3)',
              borderRadius: '8px',
              padding: '8px 16px',
              cursor: 'pointer',
              fontSize: '0.9rem',
              fontWeight: '500',
              display: 'flex',
              alignItems: 'center',
              gap: '6px',
            }}
          >
            📊 Analytics
          </button>
          <button
            style={{
              background: 'rgba(239, 68, 68, 0.2)',
              color: '#f87171',
              border: '1px solid rgba(239, 68, 68, 0.3)',
              borderRadius: '8px',
              padding: '8px 16px',
              cursor: 'pointer',
              fontSize: '0.9rem',
              fontWeight: '500',
              display: 'flex',
              alignItems: 'center',
              gap: '6px',
            }}
            onClick={handleLogout}
          >
            🚪 Logout
          </button>
        </div>
      </div>

      {/* Enhanced Navigation Tabs */}
      <div
        style={{
          background: 'rgba(255, 255, 255, 0.1)',
          backdropFilter: 'blur(10px)',
          borderRadius: '16px',
          padding: '12px',
          marginBottom: '24px',
          border: '1px solid rgba(255, 255, 255, 0.2)',
          display: 'flex',
          gap: '12px',
          flexWrap: 'wrap',
        }}
      >
        {[
          {
            id: 'dashboard',
            label: '📊 Dashboard',
            icon: '📊',
            desc: 'Overview & KPIs',
            color: '#3b82f6',
            hoverColor: 'rgba(59, 130, 246, 0.3)',
          },
          {
            id: 'operations',
            label: '🚛 Operations',
            icon: '🚛',
            desc: 'Load Management',
            color: '#3b82f6',
            hoverColor: 'rgba(59, 130, 246, 0.3)',
          },
          {
            id: 'financials',
            label: '💰 Financials',
            icon: '💰',
            desc: 'Billing & Payments',
            color: '#10b981',
            hoverColor: 'rgba(16, 185, 129, 0.3)',
          },
          {
            id: 'analytics',
            label: '📈 Analytics',
            icon: '📈',
            desc: 'Performance Insights',
            color: '#6366f1',
            hoverColor: 'rgba(99, 102, 241, 0.3)',
          },
          {
            id: 'integrations',
            label: '🔗 Integrations',
            icon: '🔗',
            desc: 'ERP & WMS',
            color: '#f97316',
            hoverColor: 'rgba(249, 115, 22, 0.3)',
          },
          {
            id: 'settings',
            label: '⚙️ Settings',
            icon: '⚙️',
            desc: 'Configuration',
            color: '#8B5CF6',
            hoverColor: 'rgba(139, 92, 246, 0.3)',
          },
        ].map((tab) => (
          <button
            key={tab.id}
            onClick={() => setActiveTab(tab.id as any)}
            style={{
              background:
                activeTab === tab.id
                  ? `linear-gradient(135deg, ${tab.hoverColor}, ${tab.hoverColor.replace('0.3', '0.2')})`
                  : 'rgba(255, 255, 255, 0.05)',
              color: 'white',
              border:
                activeTab === tab.id
                  ? `1px solid ${tab.color}`
                  : '1px solid rgba(255, 255, 255, 0.1)',
              borderRadius: '12px',
              padding: '16px 20px',
              cursor: 'pointer',
              fontSize: '0.9rem',
              fontWeight: '600',
              transition: 'all 0.3s ease',
              flex: '1 1 auto',
              minWidth: '140px',
              display: 'flex',
              flexDirection: 'column',
              alignItems: 'center',
              gap: '6px',
              position: 'relative',
              overflow: 'hidden',
            }}
            onMouseEnter={(e) => {
              if (activeTab !== tab.id) {
                e.currentTarget.style.background = tab.hoverColor;
                e.currentTarget.style.transform = 'translateY(-2px)';
                e.currentTarget.style.boxShadow = `0 8px 25px ${tab.hoverColor}`;
              }
            }}
            onMouseLeave={(e) => {
              if (activeTab !== tab.id) {
                e.currentTarget.style.background = 'rgba(255, 255, 255, 0.05)';
                e.currentTarget.style.transform = 'translateY(0)';
                e.currentTarget.style.boxShadow = 'none';
              }
            }}
          >
            <div style={{ fontSize: '1.2rem' }}>{tab.icon}</div>
            <div style={{ fontWeight: '600' }}>{tab.label}</div>
            <div
              style={{
                fontSize: '0.7rem',
                opacity: 0.7,
                textAlign: 'center',
                lineHeight: '1.2',
              }}
            >
              {tab.desc}
            </div>
            {activeTab === tab.id && (
              <div
                style={{
                  position: 'absolute',
                  bottom: 0,
                  left: 0,
                  right: 0,
                  height: '3px',
                  background: `linear-gradient(90deg, ${tab.color}, ${tab.color})`,
                  borderRadius: '0 0 12px 12px',
                }}
              />
            )}
          </button>
        ))}
      </div>

      {/* Enhanced Dashboard Tab */}
      {activeTab === 'dashboard' && dashboardSummary && (
        <div>
          {/* Enhanced KPI Cards */}
          <div
            style={{
              display: 'grid',
              gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
              gap: '20px',
              marginBottom: '32px',
            }}
          >
            <div
              style={{
                background:
                  'linear-gradient(135deg, rgba(59, 130, 246, 0.2), rgba(6, 182, 212, 0.2))',
                backdropFilter: 'blur(10px)',
                borderRadius: '16px',
                padding: '24px',
                border: '1px solid rgba(59, 130, 246, 0.3)',
                textAlign: 'center',
                position: 'relative',
                overflow: 'hidden',
                transition: 'all 0.3s ease',
              }}
              onMouseEnter={(e) => {
                e.currentTarget.style.transform = 'translateY(-4px)';
                e.currentTarget.style.boxShadow =
                  '0 12px 32px rgba(59, 130, 246, 0.3)';
              }}
              onMouseLeave={(e) => {
                e.currentTarget.style.transform = 'translateY(0)';
                e.currentTarget.style.boxShadow = 'none';
              }}
            >
              <div
                style={{
                  fontSize: '2.5rem',
                  marginBottom: '12px',
                  filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))',
                }}
              >
                📦
              </div>
              <div
                style={{
                  fontSize: '2rem',
                  fontWeight: '700',
                  color: '#60a5fa',
                  marginBottom: '8px',
                  textShadow: '0 2px 4px rgba(0,0,0,0.3)',
                }}
              >
                {dashboardSummary.totalLoads}
              </div>
              <div
                style={{
                  fontSize: '1rem',
                  color: 'rgba(255, 255, 255, 0.9)',
                  marginBottom: '8px',
                  fontWeight: '600',
                }}
              >
                Total Loads
              </div>
              <div
                style={{
                  fontSize: '0.9rem',
                  color: '#34d399',
                  fontWeight: '600',
                  background: 'rgba(16, 185, 129, 0.2)',
                  padding: '4px 8px',
                  borderRadius: '8px',
                  display: 'inline-block',
                }}
              >
                ↗️ +12% from last week
              </div>
            </div>

            <div
              style={{
                background:
                  'linear-gradient(135deg, rgba(139, 92, 246, 0.2), rgba(168, 85, 247, 0.2))',
                backdropFilter: 'blur(10px)',
                borderRadius: '16px',
                padding: '24px',
                border: '1px solid rgba(139, 92, 246, 0.3)',
                textAlign: 'center',
                position: 'relative',
                overflow: 'hidden',
                transition: 'all 0.3s ease',
              }}
              onMouseEnter={(e) => {
                e.currentTarget.style.transform = 'translateY(-4px)';
                e.currentTarget.style.boxShadow =
                  '0 12px 32px rgba(139, 92, 246, 0.3)';
              }}
              onMouseLeave={(e) => {
                e.currentTarget.style.transform = 'translateY(0)';
                e.currentTarget.style.boxShadow = 'none';
              }}
            >
              <div
                style={{
                  fontSize: '2.5rem',
                  marginBottom: '12px',
                  filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))',
                }}
              >
                🛣️
              </div>
              <div
                style={{
                  fontSize: '2rem',
                  fontWeight: '700',
                  color: '#a78bfa',
                  marginBottom: '8px',
                  textShadow: '0 2px 4px rgba(0,0,0,0.3)',
                }}
              >
                {dashboardSummary.inTransit}
              </div>
              <div
                style={{
                  fontSize: '1rem',
                  color: 'rgba(255, 255, 255, 0.9)',
                  marginBottom: '8px',
                  fontWeight: '600',
                }}
              >
                In Transit
              </div>
              <div
                style={{
                  fontSize: '0.9rem',
                  color: '#34d399',
                  fontWeight: '600',
                  background: 'rgba(16, 185, 129, 0.2)',
                  padding: '4px 8px',
                  borderRadius: '8px',
                  display: 'inline-block',
                }}
              >
                ↗️ +5% from last month
              </div>
            </div>

            <div
              style={{
                background:
                  'linear-gradient(135deg, rgba(16, 185, 129, 0.2), rgba(5, 150, 105, 0.2))',
                backdropFilter: 'blur(10px)',
                borderRadius: '16px',
                padding: '24px',
                border: '1px solid rgba(16, 185, 129, 0.3)',
                textAlign: 'center',
                position: 'relative',
                overflow: 'hidden',
                transition: 'all 0.3s ease',
              }}
              onMouseEnter={(e) => {
                e.currentTarget.style.transform = 'translateY(-4px)';
                e.currentTarget.style.boxShadow =
                  '0 12px 32px rgba(16, 185, 129, 0.3)';
              }}
              onMouseLeave={(e) => {
                e.currentTarget.style.transform = 'translateY(0)';
                e.currentTarget.style.boxShadow = 'none';
              }}
            >
              <div
                style={{
                  fontSize: '2.5rem',
                  marginBottom: '12px',
                  filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))',
                }}
              >
                ✅
              </div>
              <div
                style={{
                  fontSize: '2rem',
                  fontWeight: '700',
                  color: '#34d399',
                  marginBottom: '8px',
                  textShadow: '0 2px 4px rgba(0,0,0,0.3)',
                }}
              >
                {dashboardSummary.delivered}
              </div>
              <div
                style={{
                  fontSize: '1rem',
                  color: 'rgba(255, 255, 255, 0.9)',
                  marginBottom: '8px',
                  fontWeight: '600',
                }}
              >
                Delivered
              </div>
              <div
                style={{
                  fontSize: '0.9rem',
                  color: '#34d399',
                  fontWeight: '600',
                  background: 'rgba(16, 185, 129, 0.2)',
                  padding: '4px 8px',
                  borderRadius: '8px',
                  display: 'inline-block',
                }}
              >
                ↗️ +8% from last month
              </div>
            </div>

            <div
              style={{
                background:
                  'linear-gradient(135deg, rgba(245, 158, 11, 0.2), rgba(217, 119, 6, 0.2))',
                backdropFilter: 'blur(10px)',
                borderRadius: '16px',
                padding: '24px',
                border: '1px solid rgba(245, 158, 11, 0.3)',
                textAlign: 'center',
                position: 'relative',
                overflow: 'hidden',
                transition: 'all 0.3s ease',
              }}
              onMouseEnter={(e) => {
                e.currentTarget.style.transform = 'translateY(-4px)';
                e.currentTarget.style.boxShadow =
                  '0 12px 32px rgba(245, 158, 11, 0.3)';
              }}
              onMouseLeave={(e) => {
                e.currentTarget.style.transform = 'translateY(0)';
                e.currentTarget.style.boxShadow = 'none';
              }}
            >
              <div
                style={{
                  fontSize: '2.5rem',
                  marginBottom: '12px',
                  filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.3))',
                }}
              >
                📊
              </div>
              <div
                style={{
                  fontSize: '2rem',
                  fontWeight: '700',
                  color: '#fbbf24',
                  marginBottom: '8px',
                  textShadow: '0 2px 4px rgba(0,0,0,0.3)',
                }}
              >
                {dashboardSummary.deliveryPerformance.onTimeRate}%
              </div>
              <div
                style={{
                  fontSize: '1rem',
                  color: 'rgba(255, 255, 255, 0.9)',
                  marginBottom: '8px',
                  fontWeight: '600',
                }}
              >
                On-Time Rate
              </div>
              <div
                style={{
                  fontSize: '0.9rem',
                  color: '#34d399',
                  fontWeight: '600',
                  background: 'rgba(16, 185, 129, 0.2)',
                  padding: '4px 8px',
                  borderRadius: '8px',
                  display: 'inline-block',
                }}
              >
                ↗️ +2.1% from last month
              </div>
            </div>
          </div>

          {/* Quick Actions Section */}
          <div
            style={{
              background: 'rgba(255, 255, 255, 0.15)',
              backdropFilter: 'blur(10px)',
              borderRadius: '16px',
              padding: '24px',
              border: '1px solid rgba(255, 255, 255, 0.2)',
              marginBottom: '24px',
            }}
          >
            <h2
              style={{
                color: 'white',
                fontSize: '1.5rem',
                fontWeight: '600',
                marginBottom: '20px',
                display: 'flex',
                alignItems: 'center',
                gap: '12px',
              }}
            >
              ⚡ Quick Actions
            </h2>
            <div
              style={{
                display: 'grid',
                gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
                gap: '16px',
              }}
            >
              <button
                style={{
                  background:
                    'linear-gradient(135deg, rgba(59, 130, 246, 0.2), rgba(6, 182, 212, 0.2))',
                  border: '1px solid rgba(59, 130, 246, 0.3)',
                  borderRadius: '12px',
                  padding: '20px',
                  color: 'white',
                  cursor: 'pointer',
                  fontSize: '1rem',
                  fontWeight: '600',
                  display: 'flex',
                  flexDirection: 'column',
                  alignItems: 'center',
                  gap: '8px',
                  transition: 'all 0.3s ease',
                }}
                onMouseEnter={(e) => {
                  e.currentTarget.style.transform = 'translateY(-2px)';
                  e.currentTarget.style.boxShadow =
                    '0 8px 25px rgba(59, 130, 246, 0.3)';
                }}
                onMouseLeave={(e) => {
                  e.currentTarget.style.transform = 'translateY(0)';
                  e.currentTarget.style.boxShadow = 'none';
                }}
              >
                <div style={{ fontSize: '2rem' }}>📋</div>
                <div>New Load Request</div>
                <div style={{ fontSize: '0.8rem', opacity: 0.7 }}>
                  Submit a new load
                </div>
              </button>

              <button
                style={{
                  background:
                    'linear-gradient(135deg, rgba(16, 185, 129, 0.2), rgba(5, 150, 105, 0.2))',
                  border: '1px solid rgba(16, 185, 129, 0.3)',
                  borderRadius: '12px',
                  padding: '20px',
                  color: 'white',
                  cursor: 'pointer',
                  fontSize: '1rem',
                  fontWeight: '600',
                  display: 'flex',
                  flexDirection: 'column',
                  alignItems: 'center',
                  gap: '8px',
                  transition: 'all 0.3s ease',
                }}
                onMouseEnter={(e) => {
                  e.currentTarget.style.transform = 'translateY(-2px)';
                  e.currentTarget.style.boxShadow =
                    '0 8px 25px rgba(16, 185, 129, 0.3)';
                }}
                onMouseLeave={(e) => {
                  e.currentTarget.style.transform = 'translateY(0)';
                  e.currentTarget.style.boxShadow = 'none';
                }}
              >
                <div style={{ fontSize: '2rem' }}>📄</div>
                <div>Upload Documents</div>
                <div style={{ fontSize: '0.8rem', opacity: 0.7 }}>
                  Submit paperwork
                </div>
              </button>

              <button
                style={{
                  background:
                    'linear-gradient(135deg, rgba(249, 115, 22, 0.3), rgba(217, 119, 6, 0.3))',
                  border: '1px solid rgba(249, 115, 22, 0.4)',
                  borderRadius: '12px',
                  padding: '20px',
                  color: 'white',
                  cursor: 'pointer',
                  fontSize: '1rem',
                  fontWeight: '600',
                  display: 'flex',
                  flexDirection: 'column',
                  alignItems: 'center',
                  gap: '8px',
                  transition: 'all 0.3s ease',
                }}
                onMouseEnter={(e) => {
                  e.currentTarget.style.transform = 'translateY(-2px)';
                  e.currentTarget.style.boxShadow =
                    '0 8px 25px rgba(249, 115, 22, 0.4)';
                }}
                onMouseLeave={(e) => {
                  e.currentTarget.style.transform = 'translateY(0)';
                  e.currentTarget.style.boxShadow = 'none';
                }}
              >
                <div style={{ fontSize: '2rem' }}>📞</div>
                <div>Contact Broker</div>
                <div style={{ fontSize: '0.8rem', opacity: 0.7 }}>
                  Get support
                </div>
              </button>

              <button
                style={{
                  background:
                    'linear-gradient(135deg, rgba(99, 102, 241, 0.3), rgba(79, 70, 229, 0.3))',
                  border: '1px solid rgba(99, 102, 241, 0.4)',
                  borderRadius: '12px',
                  padding: '20px',
                  color: 'white',
                  cursor: 'pointer',
                  fontSize: '1rem',
                  fontWeight: '600',
                  display: 'flex',
                  flexDirection: 'column',
                  alignItems: 'center',
                  gap: '8px',
                  transition: 'all 0.3s ease',
                }}
                onMouseEnter={(e) => {
                  e.currentTarget.style.transform = 'translateY(-2px)';
                  e.currentTarget.style.boxShadow =
                    '0 8px 25px rgba(99, 102, 241, 0.4)';
                }}
                onMouseLeave={(e) => {
                  e.currentTarget.style.transform = 'translateY(0)';
                  e.currentTarget.style.boxShadow = 'none';
                }}
              >
                <div style={{ fontSize: '2rem' }}>📊</div>
                <div>View Analytics</div>
                <div style={{ fontSize: '0.8rem', opacity: 0.7 }}>
                  Performance insights
                </div>
              </button>
            </div>
          </div>

          {/* Recent Activity */}
          <div
            style={{
              background: 'rgba(255, 255, 255, 0.15)',
              backdropFilter: 'blur(10px)',
              borderRadius: '16px',
              padding: '24px',
              border: '1px solid rgba(255, 255, 255, 0.2)',
            }}
          >
            <h2
              style={{
                color: 'white',
                fontSize: '1.3rem',
                fontWeight: '600',
                marginBottom: '20px',
                margin: 0,
              }}
            >
              📋 Recent Load Activity
            </h2>
            {isLoading ? (
              <div
                style={{
                  textAlign: 'center',
                  color: 'rgba(255, 255, 255, 0.7)',
                  padding: '40px',
                }}
              >
                🔄 Loading recent activity...
              </div>
            ) : loads.length === 0 ? (
              <div
                style={{
                  textAlign: 'center',
                  color: 'rgba(255, 255, 255, 0.7)',
                  padding: '40px',
                }}
              >
                📭 No loads found
              </div>
            ) : (
              <div style={{ display: 'grid', gap: '12px' }}>
                {loads.slice(0, 5).map((load, index) => (
                  <div
                    key={index}
                    style={{
                      background: 'rgba(255, 255, 255, 0.1)',
                      borderRadius: '8px',
                      padding: '16px',
                      border: '1px solid rgba(255, 255, 255, 0.2)',
                      display: 'flex',
                      justifyContent: 'space-between',
                      alignItems: 'center',
                    }}
                  >
                    <div
                      style={{
                        display: 'flex',
                        alignItems: 'center',
                        gap: '12px',
                      }}
                    >
                      <div style={{ fontSize: '1.5rem' }}>
                        {getStatusIcon(load.currentStatus)}
                      </div>
                      <div>
                        <div
                          style={{
                            color: 'white',
                            fontWeight: '600',
                            fontSize: '1rem',
                          }}
                        >
                          Load {load.loadId}
                        </div>
                        <div
                          style={{
                            color: 'rgba(255, 255, 255, 0.7)',
                            fontSize: '0.9rem',
                          }}
                        >
                          {load.route.origin} → {load.route.destination}
                        </div>
                      </div>
                    </div>
                    <div style={{ textAlign: 'right' }}>
                      <div
                        style={{
                          background: `${getStatusColor(load.currentStatus)}20`,
                          color: getStatusColor(load.currentStatus),
                          padding: '4px 12px',
                          borderRadius: '20px',
                          fontSize: '0.8rem',
                          fontWeight: '600',
                          marginBottom: '4px',
                        }}
                      >
                        {load.statusDisplay}
                      </div>
                      <div
                        style={{
                          color: 'rgba(255, 255, 255, 0.6)',
                          fontSize: '0.8rem',
                        }}
                      >
                        Updated{' '}
                        {new Date(load.lastUpdated).toLocaleDateString()}
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>
      )}

      {/* Loads Tab with Live Tracking */}
      {activeTab === 'operations' && (
        <div>
          {/* Operations Header */}
          <div
            style={{
              background:
                'linear-gradient(135deg, rgba(59, 130, 246, 0.15), rgba(37, 99, 235, 0.15))',
              backdropFilter: 'blur(10px)',
              borderRadius: '20px',
              padding: '24px',
              marginBottom: '24px',
              border: '2px solid rgba(59, 130, 246, 0.3)',
              boxShadow: '0 8px 32px rgba(59, 130, 246, 0.2)',
              position: 'relative',
              overflow: 'hidden',
            }}
          >
            {/* Header Accent Line */}
            <div
              style={{
                position: 'absolute',
                top: 0,
                left: 0,
                right: 0,
                height: '4px',
                background: 'linear-gradient(90deg, #3b82f6, #1d4ed8, #3b82f6)',
                borderRadius: '20px 20px 0 0',
              }}
            />

            {/* Header Content */}
            <div style={{ position: 'relative', zIndex: 1 }}>
              <h2
                style={{
                  color: 'white',
                  fontSize: '2rem',
                  fontWeight: '700',
                  marginBottom: '12px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '16px',
                  textShadow: '0 2px 4px rgba(0,0,0,0.3)',
                }}
              >
                <span style={{ fontSize: '2.5rem' }}>🚛</span>
                Operations Center
              </h2>
              <p
                style={{
                  color: 'rgba(255, 255, 255, 0.9)',
                  fontSize: '1.1rem',
                  marginBottom: '24px',
                  lineHeight: '1.6',
                  fontWeight: '400',
                }}
              >
                Comprehensive operations management including load tracking,
                requests, contracts, and real-time monitoring.
              </p>
            </div>

            {/* Operations Navigation */}
            <div
              style={{
                display: 'flex',
                gap: '12px',
                marginBottom: '24px',
                flexWrap: 'wrap',
              }}
            >
              <button
                onClick={() => setActiveTab('operations')}
                style={{
                  background:
                    'linear-gradient(135deg, rgba(59, 130, 246, 0.2), rgba(37, 99, 235, 0.2))',
                  color: '#60a5fa',
                  border: '1px solid rgba(59, 130, 246, 0.3)',
                  padding: '8px 16px',
                  borderRadius: '8px',
                  cursor: 'pointer',
                  fontSize: '0.9rem',
                  fontWeight: '600',
                  transition: 'all 0.3s ease',
                }}
                onMouseEnter={(e) => {
                  e.currentTarget.style.transform = 'translateY(-2px)';
                  e.currentTarget.style.boxShadow =
                    '0 4px 12px rgba(59, 130, 246, 0.3)';
                }}
                onMouseLeave={(e) => {
                  e.currentTarget.style.transform = 'translateY(0)';
                  e.currentTarget.style.boxShadow = 'none';
                }}
              >
                📦 Load Management
              </button>
              <button
                onClick={() => setActiveTab('operations')}
                style={{
                  background:
                    'linear-gradient(135deg, rgba(16, 185, 129, 0.2), rgba(5, 150, 105, 0.2))',
                  color: '#34d399',
                  border: '1px solid rgba(16, 185, 129, 0.3)',
                  padding: '8px 16px',
                  borderRadius: '8px',
                  cursor: 'pointer',
                  fontSize: '0.9rem',
                  fontWeight: '600',
                  transition: 'all 0.3s ease',
                }}
                onMouseEnter={(e) => {
                  e.currentTarget.style.transform = 'translateY(-2px)';
                  e.currentTarget.style.boxShadow =
                    '0 4px 12px rgba(16, 185, 129, 0.3)';
                }}
                onMouseLeave={(e) => {
                  e.currentTarget.style.transform = 'translateY(0)';
                  e.currentTarget.style.boxShadow = 'none';
                }}
              >
                📋 Requests & Contracts
              </button>
              <button
                onClick={() => setActiveTab('operations')}
                style={{
                  background:
                    'linear-gradient(135deg, rgba(245, 158, 11, 0.2), rgba(217, 119, 6, 0.2))',
                  color: '#fbbf24',
                  border: '1px solid rgba(245, 158, 11, 0.3)',
                  padding: '8px 16px',
                  borderRadius: '8px',
                  cursor: 'pointer',
                  fontSize: '0.9rem',
                  fontWeight: '600',
                  transition: 'all 0.3s ease',
                }}
                onMouseEnter={(e) => {
                  e.currentTarget.style.transform = 'translateY(-2px)';
                  e.currentTarget.style.boxShadow =
                    '0 4px 12px rgba(245, 158, 11, 0.3)';
                }}
                onMouseLeave={(e) => {
                  e.currentTarget.style.transform = 'translateY(0)';
                  e.currentTarget.style.boxShadow = 'none';
                }}
              >
                📍 Real-Time Tracking
              </button>
              <button
                onClick={() => setActiveTab('operations')}
                style={{
                  background:
                    'linear-gradient(135deg, rgba(139, 92, 246, 0.2), rgba(124, 58, 237, 0.2))',
                  color: '#a78bfa',
                  border: '1px solid rgba(139, 92, 246, 0.3)',
                  padding: '8px 16px',
                  borderRadius: '8px',
                  cursor: 'pointer',
                  fontSize: '0.9rem',
                  fontWeight: '600',
                  transition: 'all 0.3s ease',
                }}
                onMouseEnter={(e) => {
                  e.currentTarget.style.transform = 'translateY(-2px)';
                  e.currentTarget.style.boxShadow =
                    '0 4px 12px rgba(139, 92, 246, 0.3)';
                }}
                onMouseLeave={(e) => {
                  e.currentTarget.style.transform = 'translateY(0)';
                  e.currentTarget.style.boxShadow = 'none';
                }}
              >
                📄 Documents
              </button>
            </div>
          </div>

          <div
            style={{
              background: 'rgba(255, 255, 255, 0.15)',
              backdropFilter: 'blur(10px)',
              borderRadius: '16px',
              padding: '24px',
              border: '1px solid rgba(255, 255, 255, 0.2)',
            }}
          >
            {isLoading ? (
              <div
                style={{
                  textAlign: 'center',
                  color: 'rgba(255, 255, 255, 0.7)',
                  padding: '40px',
                }}
              >
                🔄 Loading your loads...
              </div>
            ) : loads.length === 0 ? (
              <div
                style={{
                  textAlign: 'center',
                  color: 'rgba(255, 255, 255, 0.7)',
                  padding: '40px',
                }}
              >
                📭 No loads found
              </div>
            ) : (
              <div style={{ display: 'grid', gap: '20px' }}>
                {loads.map((load, index) => {
                  const trackingData = getTrackingStatus(load.loadId);
                  const isInTransit = load.currentStatus === 'in_transit';

                  return (
                    <div
                      key={index}
                      style={{
                        background: 'rgba(255, 255, 255, 0.1)',
                        borderRadius: '16px',
                        padding: '24px',
                        border: '1px solid rgba(255, 255, 255, 0.2)',
                        cursor: 'pointer',
                        transition: 'all 0.3s ease',
                        position: 'relative',
                        overflow: 'hidden',
                      }}
                      onClick={() => setSelectedLoad(load)}
                      onMouseOver={(e) => {
                        e.currentTarget.style.transform = 'translateY(-2px)';
                        e.currentTarget.style.boxShadow =
                          '0 8px 25px rgba(0, 0, 0, 0.2)';
                      }}
                      onMouseOut={(e) => {
                        e.currentTarget.style.transform = 'translateY(0)';
                        e.currentTarget.style.boxShadow = 'none';
                      }}
                    >
                      {/* Live tracking indicator */}
                      {isInTransit && trackingData && (
                        <div
                          style={{
                            position: 'absolute',
                            top: '12px',
                            right: '12px',
                            display: 'flex',
                            alignItems: 'center',
                            gap: '6px',
                            background: 'rgba(16, 185, 129, 0.2)',
                            padding: '4px 8px',
                            borderRadius: '12px',
                            fontSize: '0.8rem',
                            color: '#10b981',
                            fontWeight: '600',
                          }}
                        >
                          <div
                            style={{
                              width: '6px',
                              height: '6px',
                              borderRadius: '50%',
                              background: trackingData.isOnline
                                ? '#10b981'
                                : '#ef4444',
                              animation: trackingData.isOnline
                                ? 'pulse 2s infinite'
                                : 'none',
                            }}
                          />
                          {trackingData.isOnline ? 'LIVE' : 'OFFLINE'}
                        </div>
                      )}

                      <div
                        style={{
                          display: 'flex',
                          justifyContent: 'space-between',
                          alignItems: 'flex-start',
                          marginBottom: '20px',
                        }}
                      >
                        <div>
                          <h3
                            style={{
                              color: 'white',
                              fontSize: '1.3rem',
                              fontWeight: '600',
                              margin: 0,
                              marginBottom: '6px',
                            }}
                          >
                            {getStatusIcon(load.currentStatus)} Load{' '}
                            {load.loadId}
                          </h3>
                          <div
                            style={{
                              color: 'rgba(255, 255, 255, 0.8)',
                              fontSize: '1rem',
                              marginBottom: '8px',
                            }}
                          >
                            {load.route.origin} → {load.route.destination}
                          </div>
                          <div
                            style={{
                              color: 'rgba(255, 255, 255, 0.6)',
                              fontSize: '0.9rem',
                            }}
                          >
                            Distance: {load.route.distance}
                          </div>
                        </div>
                        <div
                          style={{
                            background: `${getStatusColor(load.currentStatus)}20`,
                            color: getStatusColor(load.currentStatus),
                            padding: '8px 16px',
                            borderRadius: '20px',
                            fontSize: '0.9rem',
                            fontWeight: '600',
                          }}
                        >
                          {load.statusDisplay}
                        </div>
                      </div>

                      {/* Enhanced Live Tracking Information */}
                      {isInTransit && trackingData && (
                        <div
                          style={{
                            background:
                              'linear-gradient(135deg, rgba(16, 185, 129, 0.15), rgba(5, 150, 105, 0.15))',
                            borderRadius: '16px',
                            padding: '20px',
                            marginBottom: '20px',
                            border: '2px solid rgba(16, 185, 129, 0.3)',
                            boxShadow: '0 4px 16px rgba(16, 185, 129, 0.2)',
                            position: 'relative',
                            overflow: 'hidden',
                          }}
                        >
                          {/* Real-time pulse animation */}
                          <div
                            style={{
                              position: 'absolute',
                              top: 0,
                              left: 0,
                              right: 0,
                              height: '3px',
                              background:
                                'linear-gradient(90deg, #10b981, #059669, #10b981)',
                              animation: 'pulse 2s infinite',
                            }}
                          />

                          {/* Live tracking header */}
                          <div
                            style={{
                              display: 'flex',
                              alignItems: 'center',
                              gap: '8px',
                              marginBottom: '16px',
                              color: '#10b981',
                              fontWeight: '600',
                              fontSize: '1rem',
                            }}
                          >
                            <div
                              style={{
                                width: '8px',
                                height: '8px',
                                borderRadius: '50%',
                                background: trackingData.isOnline
                                  ? '#10b981'
                                  : '#ef4444',
                                animation: trackingData.isOnline
                                  ? 'pulse 1s infinite'
                                  : 'none',
                              }}
                            />
                            🚛 REAL-TIME TRACKING ACTIVE
                          </div>

                          <div
                            style={{
                              display: 'grid',
                              gridTemplateColumns:
                                'repeat(auto-fit, minmax(220px, 1fr))',
                              gap: '16px',
                              marginBottom: '16px',
                            }}
                          >
                            <div>
                              <div
                                style={{
                                  color: 'rgba(255, 255, 255, 0.7)',
                                  fontSize: '0.8rem',
                                  marginBottom: '4px',
                                }}
                              >
                                📍 Current Location
                              </div>
                              <div
                                style={{
                                  color: 'white',
                                  fontSize: '1rem',
                                  fontWeight: '600',
                                }}
                              >
                                {trackingData.currentLocation.city},{' '}
                                {trackingData.currentLocation.state}
                              </div>
                              <div
                                style={{
                                  color: 'rgba(255, 255, 255, 0.6)',
                                  fontSize: '0.8rem',
                                }}
                              >
                                {trackingData.currentLocation.lat.toFixed(4)},{' '}
                                {trackingData.currentLocation.lng.toFixed(4)}
                              </div>
                            </div>

                            <div>
                              <div
                                style={{
                                  color: 'rgba(255, 255, 255, 0.7)',
                                  fontSize: '0.8rem',
                                  marginBottom: '4px',
                                }}
                              >
                                ⏱️ ETA
                              </div>
                              <div
                                style={{
                                  color: 'white',
                                  fontSize: '1rem',
                                  fontWeight: '600',
                                }}
                              >
                                {formatETA(trackingData.realTimeETA)}
                              </div>
                              <div
                                style={{
                                  color: 'rgba(255, 255, 255, 0.6)',
                                  fontSize: '0.8rem',
                                }}
                              >
                                {new Date(
                                  trackingData.realTimeETA
                                ).toLocaleString()}
                              </div>
                            </div>

                            <div>
                              <div
                                style={{
                                  color: 'rgba(255, 255, 255, 0.7)',
                                  fontSize: '0.8rem',
                                  marginBottom: '4px',
                                }}
                              >
                                🚀 Current Speed
                              </div>
                              <div
                                style={{
                                  color: 'white',
                                  fontSize: '1rem',
                                  fontWeight: '600',
                                }}
                              >
                                {(trackingData.currentSpeed || 65).toFixed(0)}{' '}
                                mph
                              </div>
                              <div
                                style={{
                                  color: 'rgba(255, 255, 255, 0.6)',
                                  fontSize: '0.8rem',
                                }}
                              >
                                {(trackingData.currentSpeed || 0) > 70
                                  ? '⚠️ Over Speed Limit'
                                  : '✅ Normal Speed'}
                              </div>
                            </div>

                            <div>
                              <div
                                style={{
                                  color: 'rgba(255, 255, 255, 0.7)',
                                  fontSize: '0.8rem',
                                  marginBottom: '4px',
                                }}
                              >
                                📊 Progress
                              </div>
                              <div
                                style={{
                                  color: 'white',
                                  fontSize: '1rem',
                                  fontWeight: '600',
                                }}
                              >
                                {trackingData.estimatedProgress}%
                              </div>
                              {/* Progress Bar */}
                              <div
                                style={{
                                  width: '100%',
                                  height: '6px',
                                  background: 'rgba(255, 255, 255, 0.2)',
                                  borderRadius: '3px',
                                  marginTop: '4px',
                                  overflow: 'hidden',
                                }}
                              >
                                <div
                                  style={{
                                    width: `${trackingData.estimatedProgress}%`,
                                    height: '100%',
                                    background: `linear-gradient(90deg, ${getProgressColor(trackingData.estimatedProgress)}, ${getProgressColor(trackingData.estimatedProgress)}80)`,
                                    borderRadius: '3px',
                                    transition: 'width 0.5s ease',
                                  }}
                                />
                              </div>
                            </div>
                          </div>

                          {/* Interactive Action Buttons */}
                          <div
                            style={{
                              display: 'flex',
                              gap: '12px',
                              marginTop: '16px',
                              flexWrap: 'wrap',
                            }}
                          >
                            <button
                              style={{
                                background:
                                  'linear-gradient(135deg, #3b82f6, #2563eb)',
                                color: 'white',
                                border: 'none',
                                padding: '8px 16px',
                                borderRadius: '8px',
                                cursor: 'pointer',
                                fontSize: '0.9rem',
                                fontWeight: '600',
                                display: 'flex',
                                alignItems: 'center',
                                gap: '6px',
                                transition: 'all 0.3s ease',
                              }}
                              onMouseEnter={(e) => {
                                e.currentTarget.style.transform =
                                  'translateY(-2px)';
                                e.currentTarget.style.boxShadow =
                                  '0 4px 12px rgba(59, 130, 246, 0.3)';
                              }}
                              onMouseLeave={(e) => {
                                e.currentTarget.style.transform =
                                  'translateY(0)';
                                e.currentTarget.style.boxShadow = 'none';
                              }}
                            >
                              🗺️ Live Map View
                            </button>
                            <button
                              style={{
                                background:
                                  'linear-gradient(135deg, #10b981, #059669)',
                                color: 'white',
                                border: 'none',
                                padding: '8px 16px',
                                borderRadius: '8px',
                                cursor: 'pointer',
                                fontSize: '0.9rem',
                                fontWeight: '600',
                                display: 'flex',
                                alignItems: 'center',
                                gap: '6px',
                                transition: 'all 0.3s ease',
                              }}
                              onMouseEnter={(e) => {
                                e.currentTarget.style.transform =
                                  'translateY(-2px)';
                                e.currentTarget.style.boxShadow =
                                  '0 4px 12px rgba(16, 185, 129, 0.3)';
                              }}
                              onMouseLeave={(e) => {
                                e.currentTarget.style.transform =
                                  'translateY(0)';
                                e.currentTarget.style.boxShadow = 'none';
                              }}
                            >
                              📞 Contact Driver
                            </button>
                            <button
                              style={{
                                background:
                                  'linear-gradient(135deg, #f59e0b, #d97706)',
                                color: 'white',
                                border: 'none',
                                padding: '8px 16px',
                                borderRadius: '8px',
                                cursor: 'pointer',
                                fontSize: '0.9rem',
                                fontWeight: '600',
                                display: 'flex',
                                alignItems: 'center',
                                gap: '6px',
                                transition: 'all 0.3s ease',
                              }}
                              onMouseEnter={(e) => {
                                e.currentTarget.style.transform =
                                  'translateY(-2px)';
                                e.currentTarget.style.boxShadow =
                                  '0 4px 12px rgba(245, 158, 11, 0.3)';
                              }}
                              onMouseLeave={(e) => {
                                e.currentTarget.style.transform =
                                  'translateY(0)';
                                e.currentTarget.style.boxShadow = 'none';
                              }}
                            >
                              🔄 Refresh Data
                            </button>
                          </div>

                          {/* Enhanced Real-time Status Bar */}
                          <div
                            style={{
                              marginTop: '12px',
                              padding: '12px 16px',
                              background: 'rgba(255, 255, 255, 0.1)',
                              borderRadius: '8px',
                              border: '1px solid rgba(255, 255, 255, 0.2)',
                            }}
                          >
                            <div
                              style={{
                                display: 'flex',
                                alignItems: 'center',
                                justifyContent: 'space-between',
                                fontSize: '0.8rem',
                                color: 'rgba(255, 255, 255, 0.8)',
                              }}
                            >
                              <div
                                style={{
                                  display: 'flex',
                                  alignItems: 'center',
                                  gap: '8px',
                                }}
                              >
                                <div
                                  style={{
                                    width: '8px',
                                    height: '8px',
                                    borderRadius: '50%',
                                    background: trackingData.isOnline
                                      ? '#10b981'
                                      : '#ef4444',
                                    animation: trackingData.isOnline
                                      ? 'pulse 1s infinite'
                                      : 'none',
                                  }}
                                />
                                <span>
                                  GPS Signal:{' '}
                                  {trackingData.isOnline ? 'Strong' : 'Weak'}
                                </span>
                              </div>
                              <div
                                style={{
                                  display: 'flex',
                                  alignItems: 'center',
                                  gap: '12px',
                                }}
                              >
                                <span>🔄 Auto-refresh: 30s</span>
                                <span>
                                  📡 Last update:{' '}
                                  {new Date(
                                    trackingData.lastUpdate
                                  ).toLocaleTimeString()}
                                </span>
                                {trackingData.isOnline && (
                                  <span
                                    style={{
                                      color: '#10b981',
                                      fontWeight: '600',
                                    }}
                                  >
                                    • LIVE
                                  </span>
                                )}
                              </div>
                            </div>
                          </div>

                          {/* Progress bar */}
                          <div style={{ marginBottom: '12px' }}>
                            <div
                              style={{
                                display: 'flex',
                                justifyContent: 'space-between',
                                alignItems: 'center',
                                marginBottom: '8px',
                              }}
                            >
                              <div
                                style={{
                                  color: 'rgba(255, 255, 255, 0.7)',
                                  fontSize: '0.9rem',
                                }}
                              >
                                Route Progress
                              </div>
                              <div
                                style={{
                                  color: 'white',
                                  fontSize: '0.9rem',
                                  fontWeight: '600',
                                }}
                              >
                                {Math.round(
                                  trackingData.estimatedProgress * 100
                                )}
                                %
                              </div>
                            </div>
                            <div
                              style={{
                                width: '100%',
                                height: '8px',
                                background: 'rgba(255, 255, 255, 0.2)',
                                borderRadius: '4px',
                                overflow: 'hidden',
                              }}
                            >
                              <div
                                style={{
                                  width: `${trackingData.estimatedProgress * 100}%`,
                                  height: '100%',
                                  background: getProgressColor(
                                    trackingData.estimatedProgress
                                  ),
                                  borderRadius: '4px',
                                  transition: 'width 0.3s ease',
                                }}
                              />
                            </div>
                          </div>

                          {/* Mini map placeholder */}
                          <div
                            style={{
                              height: '120px',
                              background: 'rgba(255, 255, 255, 0.05)',
                              borderRadius: '8px',
                              display: 'flex',
                              alignItems: 'center',
                              justifyContent: 'center',
                              border: '1px solid rgba(255, 255, 255, 0.1)',
                            }}
                          >
                            <div
                              style={{
                                color: 'rgba(255, 255, 255, 0.6)',
                                fontSize: '0.9rem',
                                textAlign: 'center',
                              }}
                            >
                              🗺️ Interactive Map View
                              <br />
                              <span style={{ fontSize: '0.8rem' }}>
                                Click to view full tracking map
                              </span>
                            </div>
                          </div>
                        </div>
                      )}

                      {/* Milestone Progress */}
                      <div
                        style={{
                          display: 'grid',
                          gridTemplateColumns: 'repeat(3, 1fr)',
                          gap: '12px',
                          marginBottom: '16px',
                        }}
                      >
                        <div style={{ textAlign: 'center' }}>
                          <div
                            style={{
                              fontSize: '1.2rem',
                              marginBottom: '4px',
                              opacity: load.milestones.bolCreated?.completed
                                ? 1
                                : 0.4,
                            }}
                          >
                            📋
                          </div>
                          <div
                            style={{
                              color: load.milestones.bolCreated?.completed
                                ? 'white'
                                : 'rgba(255, 255, 255, 0.5)',
                              fontSize: '0.8rem',
                              fontWeight: '600',
                            }}
                          >
                            BOL Created
                          </div>
                          {load.milestones.bolCreated?.completed && (
                            <div
                              style={{
                                color: 'rgba(255, 255, 255, 0.6)',
                                fontSize: '0.7rem',
                              }}
                            >
                              {load.milestones.bolCreated.timestamp
                                ? new Date(
                                    load.milestones.bolCreated.timestamp
                                  ).toLocaleDateString()
                                : ''}
                            </div>
                          )}
                        </div>

                        <div style={{ textAlign: 'center' }}>
                          <div
                            style={{
                              fontSize: '1.2rem',
                              marginBottom: '4px',
                              opacity: load.milestones.transitUpdate?.completed
                                ? 1
                                : 0.4,
                            }}
                          >
                            🛣️
                          </div>
                          <div
                            style={{
                              color: load.milestones.transitUpdate?.completed
                                ? 'white'
                                : 'rgba(255, 255, 255, 0.5)',
                              fontSize: '0.8rem',
                              fontWeight: '600',
                            }}
                          >
                            In Transit
                          </div>
                          {load.milestones.transitUpdate?.completed && (
                            <div
                              style={{
                                color: 'rgba(255, 255, 255, 0.6)',
                                fontSize: '0.7rem',
                              }}
                            >
                              ETA:{' '}
                              {load.estimatedDelivery
                                ? new Date(
                                    load.estimatedDelivery
                                  ).toLocaleDateString()
                                : 'TBD'}
                            </div>
                          )}
                        </div>

                        <div style={{ textAlign: 'center' }}>
                          <div
                            style={{
                              fontSize: '1.2rem',
                              marginBottom: '4px',
                              opacity: load.milestones.deliveryComplete
                                ?.completed
                                ? 1
                                : 0.4,
                            }}
                          >
                            ✅
                          </div>
                          <div
                            style={{
                              color: load.milestones.deliveryComplete?.completed
                                ? 'white'
                                : 'rgba(255, 255, 255, 0.5)',
                              fontSize: '0.8rem',
                              fontWeight: '600',
                            }}
                          >
                            Delivered
                          </div>
                          {load.milestones.deliveryComplete?.completed && (
                            <div
                              style={{
                                color: 'rgba(255, 255, 255, 0.6)',
                                fontSize: '0.7rem',
                              }}
                            >
                              {load.milestones.deliveryComplete.timestamp
                                ? new Date(
                                    load.milestones.deliveryComplete.timestamp
                                  ).toLocaleDateString()
                                : ''}
                            </div>
                          )}
                        </div>
                      </div>

                      {/* Contact Info */}
                      <div
                        style={{
                          background: 'rgba(255, 255, 255, 0.1)',
                          borderRadius: '8px',
                          padding: '12px',
                          display: 'flex',
                          justifyContent: 'space-between',
                          alignItems: 'center',
                        }}
                      >
                        <div>
                          <div
                            style={{
                              color: 'rgba(255, 255, 255, 0.7)',
                              fontSize: '0.8rem',
                              marginBottom: '2px',
                            }}
                          >
                            Broker Contact
                          </div>
                          <div
                            style={{
                              color: 'white',
                              fontSize: '0.9rem',
                              fontWeight: '600',
                            }}
                          >
                            {load.contact.brokerName}
                          </div>
                          {load.contact.dispatcherName && (
                            <div
                              style={{
                                color: 'rgba(255, 255, 255, 0.6)',
                                fontSize: '0.8rem',
                              }}
                            >
                              Dispatcher: {load.contact.dispatcherName}
                            </div>
                          )}
                        </div>
                        <div
                          style={{
                            display: 'flex',
                            gap: '8px',
                          }}
                        >
                          <button
                            style={{
                              background: 'rgba(59, 130, 246, 0.2)',
                              color: '#60a5fa',
                              border: '1px solid rgba(59, 130, 246, 0.3)',
                              borderRadius: '6px',
                              padding: '6px 12px',
                              cursor: 'pointer',
                              fontSize: '0.8rem',
                              fontWeight: '500',
                            }}
                          >
                            📞 Call
                          </button>
                          <button
                            style={{
                              background: 'rgba(16, 185, 129, 0.2)',
                              color: '#34d399',
                              border: '1px solid rgba(16, 185, 129, 0.3)',
                              borderRadius: '6px',
                              padding: '6px 12px',
                              cursor: 'pointer',
                              fontSize: '0.8rem',
                              fontWeight: '500',
                            }}
                          >
                            📱 Message
                          </button>
                        </div>
                      </div>
                    </div>
                  );
                })}
              </div>
            )}
          </div>
        </div>
      )}

      {/* Documents Section - Now part of Operations */}
      {activeTab === 'operations' && (
        <div>
          <div
            style={{
              background: 'rgba(255, 255, 255, 0.15)',
              backdropFilter: 'blur(10px)',
              borderRadius: '16px',
              padding: '24px',
              border: '1px solid rgba(255, 255, 255, 0.2)',
              marginBottom: '24px',
            }}
          >
            <h2
              style={{
                color: 'white',
                fontSize: '1.8rem',
                fontWeight: '600',
                marginBottom: '8px',
                display: 'flex',
                alignItems: 'center',
                gap: '12px',
              }}
            >
              📄 Document Center
            </h2>
            <p
              style={{
                color: 'rgba(255, 255, 255, 0.8)',
                fontSize: '1rem',
                marginBottom: '24px',
              }}
            >
              Upload and manage your essential documents. All uploads are
              automatically sent to your assigned broker for review.
            </p>

            {/* Broker Information */}
            {(() => {
              const broker = session?.shipperId
                ? vendorDocumentService.getShipperBroker(session.shipperId)
                : null;

              if (broker) {
                return (
                  <div
                    style={{
                      background: 'rgba(59, 130, 246, 0.15)',
                      backdropFilter: 'blur(10px)',
                      borderRadius: '12px',
                      padding: '16px',
                      border: '1px solid rgba(59, 130, 246, 0.3)',
                      marginBottom: '24px',
                    }}
                  >
                    <h3
                      style={{
                        color: 'white',
                        fontSize: '1.1rem',
                        fontWeight: '600',
                        marginBottom: '8px',
                        display: 'flex',
                        alignItems: 'center',
                        gap: '8px',
                      }}
                    >
                      👤 Your Assigned Broker
                    </h3>
                    <div
                      style={{ display: 'flex', gap: '24px', flexWrap: 'wrap' }}
                    >
                      <div>
                        <span
                          style={{
                            color: 'rgba(255, 255, 255, 0.7)',
                            fontSize: '0.9rem',
                          }}
                        >
                          Name:
                        </span>
                        <div style={{ color: 'white', fontWeight: '500' }}>
                          {broker.brokerName}
                        </div>
                      </div>
                      <div>
                        <span
                          style={{
                            color: 'rgba(255, 255, 255, 0.7)',
                            fontSize: '0.9rem',
                          }}
                        >
                          Email:
                        </span>
                        <div style={{ color: 'white', fontWeight: '500' }}>
                          {broker.brokerEmail}
                        </div>
                      </div>
                      <div>
                        <span
                          style={{
                            color: 'rgba(255, 255, 255, 0.7)',
                            fontSize: '0.9rem',
                          }}
                        >
                          Phone:
                        </span>
                        <div style={{ color: 'white', fontWeight: '500' }}>
                          {broker.brokerPhone}
                        </div>
                      </div>
                    </div>
                    <p
                      style={{
                        color: 'rgba(255, 255, 255, 0.6)',
                        fontSize: '0.8rem',
                        marginTop: '8px',
                        marginBottom: 0,
                      }}
                    >
                      All document uploads will automatically notify{' '}
                      {broker.brokerName}
                    </p>
                  </div>
                );
              }
              return null;
            })()}

            {/* Document Statistics */}
            <div
              style={{
                display: 'grid',
                gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
                gap: '16px',
                marginBottom: '32px',
              }}
            >
              {(() => {
                const stats = session?.shipperId
                  ? vendorDocumentService.getDocumentStats(session.shipperId)
                  : {
                      total: 0,
                      pending: 0,
                      approved: 0,
                      rejected: 0,
                      byType: {},
                    };

                return (
                  <>
                    <div
                      style={{
                        background: 'rgba(59, 130, 246, 0.2)',
                        backdropFilter: 'blur(10px)',
                        borderRadius: '12px',
                        padding: '20px',
                        border: '1px solid rgba(59, 130, 246, 0.3)',
                        textAlign: 'center',
                      }}
                    >
                      <div
                        style={{
                          fontSize: '2rem',
                          color: '#60a5fa',
                          marginBottom: '8px',
                        }}
                      >
                        📊
                      </div>
                      <div
                        style={{
                          fontSize: '1.5rem',
                          fontWeight: 'bold',
                          color: 'white',
                          marginBottom: '4px',
                        }}
                      >
                        {stats.total}
                      </div>
                      <div
                        style={{
                          fontSize: '0.9rem',
                          color: 'rgba(255, 255, 255, 0.8)',
                        }}
                      >
                        Total Documents
                      </div>
                    </div>

                    <div
                      style={{
                        background: 'rgba(234, 179, 8, 0.2)',
                        backdropFilter: 'blur(10px)',
                        borderRadius: '12px',
                        padding: '20px',
                        border: '1px solid rgba(234, 179, 8, 0.3)',
                        textAlign: 'center',
                      }}
                    >
                      <div
                        style={{
                          fontSize: '2rem',
                          color: '#fbbf24',
                          marginBottom: '8px',
                        }}
                      >
                        ⏳
                      </div>
                      <div
                        style={{
                          fontSize: '1.5rem',
                          fontWeight: 'bold',
                          color: 'white',
                          marginBottom: '4px',
                        }}
                      >
                        {stats.pending}
                      </div>
                      <div
                        style={{
                          fontSize: '0.9rem',
                          color: 'rgba(255, 255, 255, 0.8)',
                        }}
                      >
                        Pending Review
                      </div>
                    </div>

                    <div
                      style={{
                        background: 'rgba(16, 185, 129, 0.2)',
                        backdropFilter: 'blur(10px)',
                        borderRadius: '12px',
                        padding: '20px',
                        border: '1px solid rgba(16, 185, 129, 0.3)',
                        textAlign: 'center',
                      }}
                    >
                      <div
                        style={{
                          fontSize: '2rem',
                          color: '#10b981',
                          marginBottom: '8px',
                        }}
                      >
                        ✅
                      </div>
                      <div
                        style={{
                          fontSize: '1.5rem',
                          fontWeight: 'bold',
                          color: 'white',
                          marginBottom: '4px',
                        }}
                      >
                        {stats.approved}
                      </div>
                      <div
                        style={{
                          fontSize: '0.9rem',
                          color: 'rgba(255, 255, 255, 0.8)',
                        }}
                      >
                        Approved
                      </div>
                    </div>

                    <div
                      style={{
                        background: 'rgba(248, 113, 113, 0.2)',
                        backdropFilter: 'blur(10px)',
                        borderRadius: '12px',
                        padding: '20px',
                        border: '1px solid rgba(248, 113, 113, 0.3)',
                        textAlign: 'center',
                      }}
                    >
                      <div
                        style={{
                          fontSize: '2rem',
                          color: '#f87171',
                          marginBottom: '8px',
                        }}
                      >
                        ❌
                      </div>
                      <div
                        style={{
                          fontSize: '1.5rem',
                          fontWeight: 'bold',
                          color: 'white',
                          marginBottom: '4px',
                        }}
                      >
                        {stats.rejected}
                      </div>
                      <div
                        style={{
                          fontSize: '0.9rem',
                          color: 'rgba(255, 255, 255, 0.8)',
                        }}
                      >
                        Needs Changes
                      </div>
                    </div>
                  </>
                );
              })()}
            </div>

            {/* Document Upload Section */}
            <div
              style={{
                background: 'rgba(255, 255, 255, 0.1)',
                borderRadius: '12px',
                padding: '24px',
                border: '1px solid rgba(255, 255, 255, 0.2)',
                marginBottom: '24px',
              }}
            >
              <h3
                style={{
                  color: 'white',
                  fontSize: '1.2rem',
                  fontWeight: '600',
                  marginBottom: '16px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                }}
              >
                📤 Upload New Document
              </h3>

              <form
                onSubmit={async (e) => {
                  e.preventDefault();

                  try {
                    const formData = new FormData(e.currentTarget);
                    const file = formData.get('file') as File;
                    const docType = formData.get('documentType') as string;
                    const description = formData.get('description') as string;
                    const priority = formData.get('priority') as string;

                    if (!file || !session?.shipperId) return;

                    await vendorDocumentService.uploadDocument(
                      session.shipperId,
                      file,
                      docType as any,
                      description,
                      [],
                      { priority: priority as any }
                    );

                    // Reset form
                    e.currentTarget.reset();
                    alert(
                      'Document uploaded successfully! Your broker has been notified.'
                    );
                  } catch (error) {
                    console.error('Upload error:', error);
                    alert('Error uploading document. Please try again.');
                  }
                }}
                style={{
                  display: 'grid',
                  gap: '16px',
                }}
              >
                <div
                  style={{
                    display: 'grid',
                    gridTemplateColumns: '1fr 1fr',
                    gap: '16px',
                  }}
                >
                  <div>
                    <label
                      style={{
                        color: 'white',
                        fontSize: '0.9rem',
                        marginBottom: '8px',
                        display: 'block',
                      }}
                    >
                      Document Type *
                    </label>
                    <select
                      name='documentType'
                      required
                      style={{
                        width: '100%',
                        padding: '12px',
                        borderRadius: '8px',
                        border: '1px solid rgba(255, 255, 255, 0.3)',
                        background: 'rgba(255, 255, 255, 0.1)',
                        color: 'white',
                        fontSize: '0.9rem',
                      }}
                    >
                      <option value=''>Select document type...</option>
                      <option value='quote_request'>📋 Quote Request</option>
                      <option value='insurance_certificate'>
                        🛡️ Insurance Certificate
                      </option>
                      <option value='contract'>📋 Contract</option>
                      <option value='bol'>📄 Bill of Lading</option>
                      <option value='invoice'>💰 Invoice</option>
                      <option value='compliance_doc'>
                        ✅ Compliance Document
                      </option>
                      <option value='other'>📎 Other</option>
                    </select>
                  </div>

                  <div>
                    <label
                      style={{
                        color: 'white',
                        fontSize: '0.9rem',
                        marginBottom: '8px',
                        display: 'block',
                      }}
                    >
                      Priority
                    </label>
                    <select
                      name='priority'
                      style={{
                        width: '100%',
                        padding: '12px',
                        borderRadius: '8px',
                        border: '1px solid rgba(255, 255, 255, 0.3)',
                        background: 'rgba(255, 255, 255, 0.1)',
                        color: 'white',
                        fontSize: '0.9rem',
                      }}
                    >
                      <option value='medium'>📋 Medium</option>
                      <option value='low'>📝 Low</option>
                      <option value='high'>⚡ High</option>
                      <option value='urgent'>🚨 Urgent</option>
                    </select>
                  </div>
                </div>

                <div>
                  <label
                    style={{
                      color: 'white',
                      fontSize: '0.9rem',
                      marginBottom: '8px',
                      display: 'block',
                    }}
                  >
                    File *
                  </label>
                  <input
                    type='file'
                    name='file'
                    required
                    accept='.pdf,.doc,.docx,.jpg,.jpeg,.png,.xlsx,.xls'
                    style={{
                      width: '100%',
                      padding: '12px',
                      borderRadius: '8px',
                      border: '1px solid rgba(255, 255, 255, 0.3)',
                      background: 'rgba(255, 255, 255, 0.1)',
                      color: 'white',
                      fontSize: '0.9rem',
                    }}
                  />
                </div>

                <div>
                  <label
                    style={{
                      color: 'white',
                      fontSize: '0.9rem',
                      marginBottom: '8px',
                      display: 'block',
                    }}
                  >
                    Description
                  </label>
                  <textarea
                    name='description'
                    rows={3}
                    placeholder='Brief description of the document...'
                    style={{
                      width: '100%',
                      padding: '12px',
                      borderRadius: '8px',
                      border: '1px solid rgba(255, 255, 255, 0.3)',
                      background: 'rgba(255, 255, 255, 0.1)',
                      color: 'white',
                      fontSize: '0.9rem',
                      resize: 'vertical',
                    }}
                  />
                </div>

                <button
                  type='submit'
                  style={{
                    background: 'linear-gradient(135deg, #3b82f6, #1d4ed8)',
                    color: 'white',
                    border: 'none',
                    borderRadius: '8px',
                    padding: '14px 24px',
                    cursor: 'pointer',
                    fontSize: '1rem',
                    fontWeight: '600',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    gap: '8px',
                  }}
                >
                  📤 Upload Document
                </button>
              </form>
            </div>

            {/* Document List */}
            <div
              style={{
                background: 'rgba(255, 255, 255, 0.1)',
                borderRadius: '12px',
                padding: '20px',
                border: '1px solid rgba(255, 255, 255, 0.2)',
              }}
            >
              <h3
                style={{
                  color: 'white',
                  fontSize: '1.2rem',
                  fontWeight: '600',
                  marginBottom: '16px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                }}
              >
                📂 Your Documents
              </h3>

              <div style={{ maxHeight: '400px', overflowY: 'auto' }}>
                {(() => {
                  const documents = session?.shipperId
                    ? vendorDocumentService.getShipperDocuments(
                        session.shipperId
                      )
                    : [];

                  if (documents.length === 0) {
                    return (
                      <div
                        style={{
                          textAlign: 'center',
                          padding: '40px 20px',
                          color: 'rgba(255, 255, 255, 0.6)',
                          fontSize: '1rem',
                        }}
                      >
                        <div style={{ fontSize: '3rem', marginBottom: '16px' }}>
                          📭
                        </div>
                        <p>No documents uploaded yet</p>
                        <p style={{ fontSize: '0.9rem', marginTop: '8px' }}>
                          Upload your first document using the form above
                        </p>
                      </div>
                    );
                  }

                  return documents.map((doc) => (
                    <div
                      key={doc.id}
                      style={{
                        background: 'rgba(255, 255, 255, 0.05)',
                        borderRadius: '8px',
                        padding: '16px',
                        marginBottom: '12px',
                        border: `1px solid ${
                          doc.status === 'approved'
                            ? 'rgba(16, 185, 129, 0.3)'
                            : doc.status === 'rejected' ||
                                doc.status === 'requires_changes'
                              ? 'rgba(248, 113, 113, 0.3)'
                              : 'rgba(234, 179, 8, 0.3)'
                        }`,
                      }}
                    >
                      <div
                        style={{
                          display: 'flex',
                          justifyContent: 'space-between',
                          alignItems: 'flex-start',
                          marginBottom: '12px',
                        }}
                      >
                        <div style={{ flex: 1 }}>
                          <h4
                            style={{
                              color: 'white',
                              fontSize: '1rem',
                              fontWeight: '600',
                              margin: 0,
                              marginBottom: '4px',
                            }}
                          >
                            {doc.documentType === 'quote_request'
                              ? '📋'
                              : doc.documentType === 'insurance_certificate'
                                ? '🛡️'
                                : doc.documentType === 'contract'
                                  ? '📋'
                                  : doc.documentType === 'bol'
                                    ? '📄'
                                    : doc.documentType === 'invoice'
                                      ? '💰'
                                      : doc.documentType === 'compliance_doc'
                                        ? '✅'
                                        : '📎'}{' '}
                            {doc.fileName}
                          </h4>
                          {doc.description && (
                            <p
                              style={{
                                color: 'rgba(255, 255, 255, 0.7)',
                                fontSize: '0.9rem',
                                margin: '0 0 8px 0',
                              }}
                            >
                              {doc.description}
                            </p>
                          )}
                          <div
                            style={{
                              display: 'flex',
                              alignItems: 'center',
                              gap: '12px',
                              fontSize: '0.8rem',
                              color: 'rgba(255, 255, 255, 0.5)',
                            }}
                          >
                            <span>
                              📅 {new Date(doc.uploadedAt).toLocaleDateString()}
                            </span>
                            <span>
                              📏 {(doc.fileSize / 1024 / 1024).toFixed(1)} MB
                            </span>
                            {doc.expirationDate && (
                              <span>
                                ⏰ Expires:{' '}
                                {new Date(
                                  doc.expirationDate
                                ).toLocaleDateString()}
                              </span>
                            )}
                          </div>
                        </div>

                        <div
                          style={{
                            display: 'flex',
                            alignItems: 'center',
                            gap: '12px',
                          }}
                        >
                          <span
                            style={{
                              fontSize: '0.8rem',
                              background:
                                doc.status === 'approved'
                                  ? 'rgba(16, 185, 129, 0.2)'
                                  : doc.status === 'rejected' ||
                                      doc.status === 'requires_changes'
                                    ? 'rgba(248, 113, 113, 0.2)'
                                    : 'rgba(234, 179, 8, 0.2)',
                              color:
                                doc.status === 'approved'
                                  ? '#10b981'
                                  : doc.status === 'rejected' ||
                                      doc.status === 'requires_changes'
                                    ? '#f87171'
                                    : '#fbbf24',
                              padding: '4px 8px',
                              borderRadius: '12px',
                              fontWeight: '600',
                              textTransform: 'uppercase',
                            }}
                          >
                            {doc.status === 'pending_review'
                              ? '⏳ PENDING'
                              : doc.status === 'approved'
                                ? '✅ APPROVED'
                                : doc.status === 'rejected'
                                  ? '❌ REJECTED'
                                  : '🔄 NEEDS CHANGES'}
                          </span>
                        </div>
                      </div>

                      {doc.brokerNotes && (
                        <div
                          style={{
                            background: 'rgba(59, 130, 246, 0.1)',
                            borderRadius: '6px',
                            padding: '12px',
                            marginTop: '12px',
                            borderLeft: '3px solid #3b82f6',
                          }}
                        >
                          <div
                            style={{
                              fontSize: '0.8rem',
                              color: '#60a5fa',
                              fontWeight: '600',
                              marginBottom: '4px',
                            }}
                          >
                            💬 Broker Notes:
                          </div>
                          <div
                            style={{
                              color: 'rgba(255, 255, 255, 0.8)',
                              fontSize: '0.9rem',
                            }}
                          >
                            {doc.brokerNotes}
                          </div>
                        </div>
                      )}
                    </div>
                  ));
                })()}
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Load Requests Section - Now part of Operations */}
      {activeTab === 'operations' && (
        <div>
          <div
            style={{
              background: 'rgba(255, 255, 255, 0.15)',
              backdropFilter: 'blur(10px)',
              borderRadius: '16px',
              padding: '20px',
              marginBottom: '24px',
              border: '1px solid rgba(255, 255, 255, 0.2)',
              display: 'flex',
              justifyContent: 'space-between',
              alignItems: 'center',
            }}
          >
            <div>
              <h2
                style={{
                  color: 'white',
                  fontSize: '1.3rem',
                  fontWeight: '600',
                  margin: 0,
                  marginBottom: '4px',
                }}
              >
                📋 My Load Requests
              </h2>
              <p
                style={{
                  color: 'rgba(255, 255, 255, 0.7)',
                  fontSize: '0.9rem',
                  margin: 0,
                }}
              >
                Submit new load requests or view existing ones.
              </p>
            </div>
            <button
              style={{
                background: 'rgba(59, 130, 246, 0.2)',
                color: '#60a5fa',
                border: '1px solid rgba(59, 130, 246, 0.3)',
                borderRadius: '8px',
                padding: '8px 16px',
                cursor: 'pointer',
                fontSize: '0.9rem',
                fontWeight: '500',
              }}
              onClick={() => setShowNewRequestForm(true)}
            >
              📋 New Load Request
            </button>
          </div>

          {showNewRequestForm && (
            <div
              style={{
                background: 'rgba(255, 255, 255, 0.15)',
                backdropFilter: 'blur(10px)',
                borderRadius: '16px',
                padding: '24px',
                border: '1px solid rgba(255, 255, 255, 0.2)',
                marginBottom: '24px',
              }}
            >
              <h3
                style={{
                  color: 'white',
                  fontSize: '1.2rem',
                  fontWeight: '600',
                  marginBottom: '16px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                }}
              >
                📋 Submit New Load Request
              </h3>
              <form
                onSubmit={(e) => {
                  e.preventDefault();
                  handleSubmitRequest();
                }}
                style={{
                  display: 'grid',
                  gap: '16px',
                }}
              >
                <div
                  style={{
                    display: 'grid',
                    gridTemplateColumns: '1fr 1fr',
                    gap: '16px',
                  }}
                >
                  <div>
                    <label
                      style={{
                        color: 'white',
                        fontSize: '0.9rem',
                        marginBottom: '8px',
                        display: 'block',
                      }}
                    >
                      Request Type *
                    </label>
                    <select
                      name='requestType'
                      required
                      style={{
                        width: '100%',
                        padding: '12px',
                        borderRadius: '8px',
                        border: '1px solid rgba(255, 255, 255, 0.3)',
                        background: 'rgba(255, 255, 255, 0.1)',
                        color: 'white',
                        fontSize: '0.9rem',
                      }}
                    >
                      <option value='load'>📦 Load</option>
                      <option value='rfp'>📋 RFP</option>
                      <option value='quote_request'>💰 Quote Request</option>
                      <option value='spot'>⚡ Spot</option>
                    </select>
                  </div>

                  <div>
                    <label
                      style={{
                        color: 'white',
                        fontSize: '0.9rem',
                        marginBottom: '8px',
                        display: 'block',
                      }}
                    >
                      Pickup Date *
                    </label>
                    <input
                      type='date'
                      name='pickupDate'
                      required
                      style={{
                        width: '100%',
                        padding: '12px',
                        borderRadius: '8px',
                        border: '1px solid rgba(255, 255, 255, 0.3)',
                        background: 'rgba(255, 255, 255, 0.1)',
                        color: 'white',
                        fontSize: '0.9rem',
                      }}
                    />
                  </div>

                  <div>
                    <label
                      style={{
                        color: 'white',
                        fontSize: '0.9rem',
                        marginBottom: '8px',
                        display: 'block',
                      }}
                    >
                      Delivery Date *
                    </label>
                    <input
                      type='date'
                      name='deliveryDate'
                      required
                      style={{
                        width: '100%',
                        padding: '12px',
                        borderRadius: '8px',
                        border: '1px solid rgba(255, 255, 255, 0.3)',
                        background: 'rgba(255, 255, 255, 0.1)',
                        color: 'white',
                        fontSize: '0.9rem',
                      }}
                    />
                  </div>

                  <div>
                    <label
                      style={{
                        color: 'white',
                        fontSize: '0.9rem',
                        marginBottom: '8px',
                        display: 'block',
                      }}
                    >
                      Origin *
                    </label>
                    <input
                      type='text'
                      name='origin'
                      required
                      placeholder='e.g., Atlanta, GA'
                      style={{
                        width: '100%',
                        padding: '12px',
                        borderRadius: '8px',
                        border: '1px solid rgba(255, 255, 255, 0.3)',
                        background: 'rgba(255, 255, 255, 0.1)',
                        color: 'white',
                        fontSize: '0.9rem',
                      }}
                    />
                  </div>

                  <div>
                    <label
                      style={{
                        color: 'white',
                        fontSize: '0.9rem',
                        marginBottom: '8px',
                        display: 'block',
                      }}
                    >
                      Destination *
                    </label>
                    <input
                      type='text'
                      name='destination'
                      required
                      placeholder='e.g., Miami, FL'
                      style={{
                        width: '100%',
                        padding: '12px',
                        borderRadius: '8px',
                        border: '1px solid rgba(255, 255, 255, 0.3)',
                        background: 'rgba(255, 255, 255, 0.1)',
                        color: 'white',
                        fontSize: '0.9rem',
                      }}
                    />
                  </div>

                  <div>
                    <label
                      style={{
                        color: 'white',
                        fontSize: '0.9rem',
                        marginBottom: '8px',
                        display: 'block',
                      }}
                    >
                      Commodity *
                    </label>
                    <input
                      type='text'
                      name='commodity'
                      required
                      placeholder='e.g., Electronics, Automotive Parts'
                      style={{
                        width: '100%',
                        padding: '12px',
                        borderRadius: '8px',
                        border: '1px solid rgba(255, 255, 255, 0.3)',
                        background: 'rgba(255, 255, 255, 0.1)',
                        color: 'white',
                        fontSize: '0.9rem',
                      }}
                    />
                  </div>

                  <div>
                    <label
                      style={{
                        color: 'white',
                        fontSize: '0.9rem',
                        marginBottom: '8px',
                        display: 'block',
                      }}
                    >
                      Weight (lbs) *
                    </label>
                    <input
                      type='number'
                      name='weight'
                      required
                      min='0'
                      style={{
                        width: '100%',
                        padding: '12px',
                        borderRadius: '8px',
                        border: '1px solid rgba(255, 255, 255, 0.3)',
                        background: 'rgba(255, 255, 255, 0.1)',
                        color: 'white',
                        fontSize: '0.9rem',
                      }}
                    />
                  </div>

                  <div>
                    <label
                      style={{
                        color: 'white',
                        fontSize: '0.9rem',
                        marginBottom: '8px',
                        display: 'block',
                      }}
                    >
                      Equipment Type *
                    </label>
                    <select
                      name='equipment'
                      required
                      style={{
                        width: '100%',
                        padding: '12px',
                        borderRadius: '8px',
                        border: '1px solid rgba(255, 255, 255, 0.3)',
                        background: 'rgba(255, 255, 255, 0.1)',
                        color: 'white',
                        fontSize: '0.9rem',
                      }}
                    >
                      <option value=''>Select equipment type...</option>
                      <option value='Dry Van'>📦 Dry Van</option>
                      <option value='Reefer'>🧊 Reefer</option>
                      <option value='Flatbed'>🚚 Flatbed</option>
                      <option value='Step Deck'>🚛 Step Deck</option>
                      <option value='Tanker'>🚛 Tanker</option>
                    </select>
                  </div>

                  <div>
                    <label
                      style={{
                        color: 'white',
                        fontSize: '0.9rem',
                        marginBottom: '8px',
                        display: 'block',
                      }}
                    >
                      Special Instructions
                    </label>
                    <textarea
                      name='specialInstructions'
                      rows={3}
                      placeholder='Any specific requirements or notes for the load?'
                      style={{
                        width: '100%',
                        padding: '12px',
                        borderRadius: '8px',
                        border: '1px solid rgba(255, 255, 255, 0.3)',
                        background: 'rgba(255, 255, 255, 0.1)',
                        color: 'white',
                        fontSize: '0.9rem',
                        resize: 'vertical',
                      }}
                    />
                  </div>
                </div>

                <button
                  type='submit'
                  style={{
                    background: 'linear-gradient(135deg, #10b981, #059669)',
                    color: 'white',
                    border: 'none',
                    borderRadius: '8px',
                    padding: '14px 24px',
                    cursor: 'pointer',
                    fontSize: '1rem',
                    fontWeight: '600',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    gap: '8px',
                    transition: 'all 0.3s ease',
                  }}
                  onMouseEnter={(e) => {
                    e.currentTarget.style.transform = 'translateY(-2px)';
                    e.currentTarget.style.boxShadow =
                      '0 8px 25px rgba(16, 185, 129, 0.3)';
                  }}
                  onMouseLeave={(e) => {
                    e.currentTarget.style.transform = 'translateY(0)';
                    e.currentTarget.style.boxShadow = 'none';
                  }}
                >
                  📋 Submit Request
                </button>
              </form>
            </div>
          )}

          <div
            style={{
              background: 'rgba(255, 255, 255, 0.15)',
              backdropFilter: 'blur(10px)',
              borderRadius: '16px',
              padding: '24px',
              border: '1px solid rgba(255, 255, 255, 0.2)',
            }}
          >
            <h3
              style={{
                color: 'white',
                fontSize: '1.2rem',
                fontWeight: '600',
                marginBottom: '16px',
                display: 'flex',
                alignItems: 'center',
                gap: '8px',
              }}
            >
              📋 My Load Requests
            </h3>
            {isLoading ? (
              <div
                style={{
                  textAlign: 'center',
                  color: 'rgba(255, 255, 255, 0.7)',
                  padding: '40px',
                }}
              >
                🔄 Loading requests...
              </div>
            ) : loadRequests.length === 0 ? (
              <div
                style={{
                  textAlign: 'center',
                  color: 'rgba(255, 255, 255, 0.7)',
                  padding: '40px',
                }}
              >
                📭 No load requests found. Submit a new one!
              </div>
            ) : (
              <div style={{ display: 'grid', gap: '16px' }}>
                {loadRequests.map((request) => (
                  <div
                    key={request.id}
                    style={{
                      background: 'rgba(255, 255, 255, 0.08)',
                      borderRadius: '12px',
                      padding: '16px',
                      border: '1px solid rgba(255, 255, 255, 0.15)',
                      display: 'flex',
                      justifyContent: 'space-between',
                      alignItems: 'center',
                    }}
                  >
                    <div>
                      <h4
                        style={{
                          color: 'white',
                          fontSize: '1rem',
                          fontWeight: '600',
                          margin: 0,
                          marginBottom: '4px',
                        }}
                      >
                        {getRequestTypeIcon(request.requestType)}{' '}
                        {request.requestType} Request
                      </h4>
                      <div
                        style={{
                          color: 'rgba(255, 255, 255, 0.7)',
                          fontSize: '0.9rem',
                        }}
                      >
                        {request.origin} → {request.destination}
                      </div>
                      <div
                        style={{
                          color: 'rgba(255, 255, 255, 0.6)',
                          fontSize: '0.8rem',
                        }}
                      >
                        Pickup:{' '}
                        {new Date(request.pickupDate).toLocaleDateString()}
                      </div>
                      <div
                        style={{
                          color: 'rgba(255, 255, 255, 0.6)',
                          fontSize: '0.8rem',
                        }}
                      >
                        Delivery:{' '}
                        {new Date(request.deliveryDate).toLocaleDateString()}
                      </div>
                    </div>
                    <div
                      style={{
                        background: `${getRequestStatusColor(request.status)}20`,
                        color: getRequestStatusColor(request.status),
                        padding: '4px 12px',
                        borderRadius: '20px',
                        fontSize: '0.8rem',
                        fontWeight: '600',
                      }}
                    >
                      {request.status === 'pending'
                        ? '⏳ Pending'
                        : request.status === 'quoted'
                          ? '💰 Quoted'
                          : request.status === 'accepted'
                            ? '✅ Accepted'
                            : request.status === 'rejected'
                              ? '❌ Rejected'
                              : '✅ Completed'}
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>
      )}

      {/* Financials Tab */}
      {activeTab === 'financials' && financialData && (
        <div>
          <div
            style={{
              background:
                'linear-gradient(135deg, rgba(16, 185, 129, 0.15), rgba(5, 150, 105, 0.15))',
              backdropFilter: 'blur(10px)',
              borderRadius: '20px',
              padding: '24px',
              marginBottom: '24px',
              border: '2px solid rgba(16, 185, 129, 0.3)',
              boxShadow: '0 8px 32px rgba(16, 185, 129, 0.2)',
              position: 'relative',
              overflow: 'hidden',
            }}
          >
            {/* Header Accent Line */}
            <div
              style={{
                position: 'absolute',
                top: 0,
                left: 0,
                right: 0,
                height: '4px',
                background: 'linear-gradient(90deg, #10b981, #059669, #10b981)',
                borderRadius: '20px 20px 0 0',
              }}
            />

            {/* Header Content */}
            <div style={{ position: 'relative', zIndex: 1 }}>
              <h2
                style={{
                  color: 'white',
                  fontSize: '2rem',
                  fontWeight: '700',
                  marginBottom: '12px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '16px',
                  textShadow: '0 2px 4px rgba(0,0,0,0.3)',
                }}
              >
                <span style={{ fontSize: '2.5rem' }}>💰</span>
                Financial Dashboard
              </h2>
              <p
                style={{
                  color: 'rgba(255, 255, 255, 0.9)',
                  fontSize: '1.1rem',
                  marginBottom: '24px',
                  lineHeight: '1.6',
                  fontWeight: '400',
                }}
              >
                View your outstanding invoices, payment history, and financial
                performance.
              </p>
            </div>

            <div
              style={{
                display: 'grid',
                gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
                gap: '20px',
                marginBottom: '32px',
              }}
            >
              <div
                style={{
                  background: 'rgba(255, 255, 255, 0.15)',
                  backdropFilter: 'blur(10px)',
                  borderRadius: '12px',
                  padding: '20px',
                  border: '1px solid rgba(255, 255, 255, 0.2)',
                  textAlign: 'center',
                }}
              >
                <div style={{ fontSize: '2rem', marginBottom: '8px' }}>💰</div>
                <div
                  style={{
                    color: 'white',
                    fontSize: '1.5rem',
                    fontWeight: '600',
                    marginBottom: '4px',
                  }}
                >
                  ${financialData.availableCredit.toFixed(2)}
                </div>
                <div
                  style={{
                    color: 'rgba(255, 255, 255, 0.7)',
                    fontSize: '0.9rem',
                  }}
                >
                  Available Credit
                </div>
              </div>

              <div
                style={{
                  background: 'rgba(255, 255, 255, 0.15)',
                  backdropFilter: 'blur(10px)',
                  borderRadius: '12px',
                  padding: '20px',
                  border: '1px solid rgba(255, 255, 255, 0.2)',
                  textAlign: 'center',
                }}
              >
                <div style={{ fontSize: '2rem', marginBottom: '8px' }}>💰</div>
                <div
                  style={{
                    color: 'white',
                    fontSize: '1.5rem',
                    fontWeight: '600',
                    marginBottom: '4px',
                  }}
                >
                  ${financialData.totalSpent.toFixed(2)}
                </div>
                <div
                  style={{
                    color: 'rgba(255, 255, 255, 0.7)',
                    fontSize: '0.9rem',
                  }}
                >
                  Total Spent
                </div>
              </div>

              <div
                style={{
                  background: 'rgba(255, 255, 255, 0.15)',
                  backdropFilter: 'blur(10px)',
                  borderRadius: '12px',
                  padding: '20px',
                  border: '1px solid rgba(255, 255, 255, 0.2)',
                  textAlign: 'center',
                }}
              >
                <div style={{ fontSize: '2rem', marginBottom: '8px' }}>💰</div>
                <div
                  style={{
                    color: 'white',
                    fontSize: '1.5rem',
                    fontWeight: '600',
                    marginBottom: '4px',
                  }}
                >
                  ${financialData.averageRate.toFixed(2)}
                </div>
                <div
                  style={{
                    color: 'rgba(255, 255, 255, 0.7)',
                    fontSize: '0.9rem',
                  }}
                >
                  Average Rate
                </div>
              </div>

              <div
                style={{
                  background: 'rgba(255, 255, 255, 0.15)',
                  backdropFilter: 'blur(10px)',
                  borderRadius: '12px',
                  padding: '20px',
                  border: '1px solid rgba(255, 255, 255, 0.2)',
                  textAlign: 'center',
                }}
              >
                <div style={{ fontSize: '2rem', marginBottom: '8px' }}>💰</div>
                <div
                  style={{
                    color: 'white',
                    fontSize: '1.5rem',
                    fontWeight: '600',
                    marginBottom: '4px',
                  }}
                >
                  {financialData.onTimePaymentRate}%
                </div>
                <div
                  style={{
                    color: 'rgba(255, 255, 255, 0.7)',
                    fontSize: '0.9rem',
                  }}
                >
                  On-Time Payment Rate
                </div>
              </div>
            </div>

            <div
              style={{
                background: 'rgba(255, 255, 255, 0.15)',
                backdropFilter: 'blur(10px)',
                borderRadius: '16px',
                padding: '24px',
                border: '1px solid rgba(255, 255, 255, 0.2)',
                marginTop: '24px',
              }}
            >
              <h3
                style={{
                  color: 'white',
                  fontSize: '1.2rem',
                  fontWeight: '600',
                  marginBottom: '16px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                }}
              >
                📋 Outstanding Invoices
              </h3>
              {financialData.outstandingInvoices.length === 0 ? (
                <div
                  style={{
                    textAlign: 'center',
                    color: 'rgba(255, 255, 255, 0.7)',
                    padding: '40px',
                  }}
                >
                  📭 No outstanding invoices.
                </div>
              ) : (
                <div style={{ maxHeight: '400px', overflowY: 'auto' }}>
                  {financialData.outstandingInvoices.map((invoice) => (
                    <div
                      key={invoice.id}
                      style={{
                        background: 'rgba(255, 255, 255, 0.08)',
                        borderRadius: '12px',
                        padding: '16px',
                        marginBottom: '12px',
                        border: `1px solid ${
                          invoice.status === 'overdue'
                            ? 'rgba(248, 113, 113, 0.3)'
                            : 'rgba(234, 179, 8, 0.3)'
                        }`,
                      }}
                    >
                      <div
                        style={{
                          display: 'flex',
                          justifyContent: 'space-between',
                          alignItems: 'flex-start',
                          marginBottom: '12px',
                        }}
                      >
                        <div style={{ flex: 1 }}>
                          <h4
                            style={{
                              color: 'white',
                              fontSize: '1rem',
                              fontWeight: '600',
                              margin: 0,
                              marginBottom: '4px',
                            }}
                          >
                            Invoice #{invoice.id}
                          </h4>
                          <div
                            style={{
                              color: 'rgba(255, 255, 255, 0.7)',
                              fontSize: '0.9rem',
                            }}
                          >
                            Load ID: {invoice.loadId}
                          </div>
                          <div
                            style={{
                              color: 'rgba(255, 255, 255, 0.7)',
                              fontSize: '0.9rem',
                            }}
                          >
                            Amount: ${invoice.amount.toFixed(2)}
                          </div>
                          <div
                            style={{
                              color: 'rgba(255, 255, 255, 0.7)',
                              fontSize: '0.9rem',
                            }}
                          >
                            Due Date:{' '}
                            {new Date(invoice.dueDate).toLocaleDateString()}
                          </div>
                        </div>
                        <div
                          style={{
                            display: 'flex',
                            alignItems: 'center',
                            gap: '12px',
                          }}
                        >
                          <span
                            style={{
                              fontSize: '0.8rem',
                              background:
                                invoice.status === 'overdue'
                                  ? 'rgba(248, 113, 113, 0.2)'
                                  : 'rgba(234, 179, 8, 0.2)',
                              color:
                                invoice.status === 'overdue'
                                  ? '#f87171'
                                  : '#fbbf24',
                              padding: '4px 8px',
                              borderRadius: '12px',
                              fontWeight: '600',
                              textTransform: 'uppercase',
                            }}
                          >
                            {invoice.status === 'pending'
                              ? '⏳ Overdue'
                              : '✅ Paid'}
                          </span>
                        </div>
                      </div>
                      {invoice.description && (
                        <div
                          style={{
                            color: 'rgba(255, 255, 255, 0.7)',
                            fontSize: '0.9rem',
                            marginTop: '8px',
                          }}
                        >
                          Description: {invoice.description}
                        </div>
                      )}
                    </div>
                  ))}
                </div>
              )}
            </div>

            <div
              style={{
                background: 'rgba(255, 255, 255, 0.15)',
                backdropFilter: 'blur(10px)',
                borderRadius: '16px',
                padding: '24px',
                border: '1px solid rgba(255, 255, 255, 0.2)',
                marginTop: '24px',
              }}
            >
              <h3
                style={{
                  color: 'white',
                  fontSize: '1.2rem',
                  fontWeight: '600',
                  marginBottom: '16px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                }}
              >
                📋 Payment History
              </h3>
              {financialData.paymentHistory.length === 0 ? (
                <div
                  style={{
                    textAlign: 'center',
                    color: 'rgba(255, 255, 255, 0.7)',
                    padding: '40px',
                  }}
                >
                  📭 No payment history yet.
                </div>
              ) : (
                <div style={{ maxHeight: '400px', overflowY: 'auto' }}>
                  {financialData.paymentHistory.map((payment) => (
                    <div
                      key={payment.id}
                      style={{
                        background: 'rgba(255, 255, 255, 0.08)',
                        borderRadius: '12px',
                        padding: '16px',
                        marginBottom: '12px',
                        border: '1px solid rgba(255, 255, 255, 0.15)',
                      }}
                    >
                      <div
                        style={{
                          display: 'flex',
                          justifyContent: 'space-between',
                          alignItems: 'flex-start',
                          marginBottom: '12px',
                        }}
                      >
                        <div style={{ flex: 1 }}>
                          <h4
                            style={{
                              color: 'white',
                              fontSize: '1rem',
                              fontWeight: '600',
                              margin: 0,
                              marginBottom: '4px',
                            }}
                          >
                            Payment for Invoice #{payment.invoiceId}
                          </h4>
                          <div
                            style={{
                              color: 'rgba(255, 255, 255, 0.7)',
                              fontSize: '0.9rem',
                            }}
                          >
                            Amount: ${payment.amount.toFixed(2)}
                          </div>
                          <div
                            style={{
                              color: 'rgba(255, 255, 255, 0.7)',
                              fontSize: '0.9rem',
                            }}
                          >
                            Date: {new Date(payment.date).toLocaleDateString()}
                          </div>
                          <div
                            style={{
                              color: 'rgba(255, 255, 255, 0.7)',
                              fontSize: '0.9rem',
                            }}
                          >
                            Method: {payment.method}
                          </div>
                          <div
                            style={{
                              color: 'rgba(255, 255, 255, 0.7)',
                              fontSize: '0.9rem',
                            }}
                          >
                            Reference: {payment.reference}
                          </div>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              )}
            </div>
          </div>
        </div>
      )}

      {/* Users Section - Now part of Settings */}
      {activeTab === 'settings' && (
        <div>
          <div
            style={{
              background:
                'linear-gradient(135deg, rgba(139, 92, 246, 0.15), rgba(124, 58, 237, 0.15))',
              backdropFilter: 'blur(10px)',
              borderRadius: '20px',
              padding: '24px',
              marginBottom: '24px',
              border: '2px solid rgba(139, 92, 246, 0.3)',
              boxShadow: '0 8px 32px rgba(139, 92, 246, 0.2)',
              position: 'relative',
              overflow: 'hidden',
            }}
          >
            {/* Header Accent Line */}
            <div
              style={{
                position: 'absolute',
                top: 0,
                left: 0,
                right: 0,
                height: '4px',
                background: 'linear-gradient(90deg, #8b5cf6, #7c3aed, #8b5cf6)',
                borderRadius: '20px 20px 0 0',
              }}
            />

            {/* Header Content */}
            <div style={{ position: 'relative', zIndex: 1 }}>
              <h2
                style={{
                  color: 'white',
                  fontSize: '2rem',
                  fontWeight: '700',
                  marginBottom: '12px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '16px',
                  textShadow: '0 2px 4px rgba(0,0,0,0.3)',
                }}
              >
                <span style={{ fontSize: '2.5rem' }}>⚙️</span>
                System Settings
              </h2>
              <p
                style={{
                  color: 'rgba(255, 255, 255, 0.9)',
                  fontSize: '1.1rem',
                  marginBottom: '24px',
                  lineHeight: '1.6',
                  fontWeight: '400',
                }}
              >
                Manage user access, portal configuration, branding, and system
                preferences.
              </p>
            </div>

            {/* Settings Navigation */}
            <div
              style={{
                display: 'flex',
                gap: '12px',
                marginBottom: '24px',
                flexWrap: 'wrap',
              }}
            >
              <button
                onClick={() => setActiveTab('settings')}
                style={{
                  background:
                    'linear-gradient(135deg, rgba(139, 92, 246, 0.2), rgba(124, 58, 237, 0.2))',
                  color: '#a78bfa',
                  border: '1px solid rgba(139, 92, 246, 0.3)',
                  padding: '8px 16px',
                  borderRadius: '8px',
                  cursor: 'pointer',
                  fontSize: '0.9rem',
                  fontWeight: '600',
                  transition: 'all 0.3s ease',
                }}
                onMouseEnter={(e) => {
                  e.currentTarget.style.transform = 'translateY(-2px)';
                  e.currentTarget.style.boxShadow =
                    '0 4px 12px rgba(139, 92, 246, 0.3)';
                }}
                onMouseLeave={(e) => {
                  e.currentTarget.style.transform = 'translateY(0)';
                  e.currentTarget.style.boxShadow = 'none';
                }}
              >
                👥 User Management
              </button>
              <button
                onClick={() => setActiveTab('settings')}
                style={{
                  background:
                    'linear-gradient(135deg, rgba(236, 72, 153, 0.2), rgba(219, 39, 119, 0.2))',
                  color: '#f472b6',
                  border: '1px solid rgba(236, 72, 153, 0.3)',
                  padding: '8px 16px',
                  borderRadius: '8px',
                  cursor: 'pointer',
                  fontSize: '0.9rem',
                  fontWeight: '600',
                  transition: 'all 0.3s ease',
                }}
                onMouseEnter={(e) => {
                  e.currentTarget.style.transform = 'translateY(-2px)';
                  e.currentTarget.style.boxShadow =
                    '0 4px 12px rgba(236, 72, 153, 0.3)';
                }}
                onMouseLeave={(e) => {
                  e.currentTarget.style.transform = 'translateY(0)';
                  e.currentTarget.style.boxShadow = 'none';
                }}
              >
                🎨 Branding & Customization
              </button>
              <button
                onClick={() => setActiveTab('settings')}
                style={{
                  background:
                    'linear-gradient(135deg, rgba(16, 185, 129, 0.2), rgba(5, 150, 105, 0.2))',
                  color: '#34d399',
                  border: '1px solid rgba(16, 185, 129, 0.3)',
                  padding: '8px 16px',
                  borderRadius: '8px',
                  cursor: 'pointer',
                  fontSize: '0.9rem',
                  fontWeight: '600',
                  transition: 'all 0.3s ease',
                }}
                onMouseEnter={(e) => {
                  e.currentTarget.style.transform = 'translateY(-2px)';
                  e.currentTarget.style.boxShadow =
                    '0 4px 12px rgba(16, 185, 129, 0.3)';
                }}
                onMouseLeave={(e) => {
                  e.currentTarget.style.transform = 'translateY(0)';
                  e.currentTarget.style.boxShadow = 'none';
                }}
              >
                👤 Company Profile
              </button>
            </div>

            <div
              style={{
                background: 'rgba(255, 255, 255, 0.1)',
                borderRadius: '12px',
                padding: '20px',
                border: '1px solid rgba(255, 255, 255, 0.2)',
                marginBottom: '24px',
              }}
            >
              <h3
                style={{
                  color: 'white',
                  fontSize: '1.2rem',
                  fontWeight: '600',
                  marginBottom: '16px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                }}
              >
                👤 Add New User
              </h3>
              <form
                onSubmit={(e) => {
                  e.preventDefault();
                  // In a real app, you'd send this data to an API
                  const formData = new FormData(e.currentTarget);
                  const newUser: UserAccess = {
                    id: `USR-${Date.now()}`,
                    name: (formData.get('name') as string) || '',
                    email: (formData.get('email') as string) || '',
                    role:
                      (formData.get('role') as UserAccess['role']) ||
                      'secondary',
                    permissions: {
                      viewLoads: true,
                      submitRequests: true,
                      viewFinancials: false,
                      manageUsers: false,
                      accessAnalytics: false,
                    },
                    lastLogin: new Date().toISOString(),
                    isActive: true,
                  };
                  setUserAccess((prev) => [newUser, ...prev]);
                  setShowNewUserForm(false); // Hide form after adding
                  setNewUserData({}); // Reset form data
                }}
                style={{
                  display: 'grid',
                  gap: '16px',
                }}
              >
                <div>
                  <label
                    style={{
                      color: 'white',
                      fontSize: '0.9rem',
                      marginBottom: '8px',
                      display: 'block',
                    }}
                  >
                    Name *
                  </label>
                  <input
                    type='text'
                    name='name'
                    required
                    placeholder='e.g., Jane Doe'
                    style={{
                      width: '100%',
                      padding: '12px',
                      borderRadius: '8px',
                      border: '1px solid rgba(255, 255, 255, 0.3)',
                      background: 'rgba(255, 255, 255, 0.1)',
                      color: 'white',
                      fontSize: '0.9rem',
                    }}
                  />
                </div>
                <div>
                  <label
                    style={{
                      color: 'white',
                      fontSize: '0.9rem',
                      marginBottom: '8px',
                      display: 'block',
                    }}
                  >
                    Email *
                  </label>
                  <input
                    type='email'
                    name='email'
                    required
                    placeholder='e.g., jane.doe@example.com'
                    style={{
                      width: '100%',
                      padding: '12px',
                      borderRadius: '8px',
                      border: '1px solid rgba(255, 255, 255, 0.3)',
                      background: 'rgba(255, 255, 255, 0.1)',
                      color: 'white',
                      fontSize: '0.9rem',
                    }}
                  />
                </div>
                <div>
                  <label
                    style={{
                      color: 'white',
                      fontSize: '0.9rem',
                      marginBottom: '8px',
                      display: 'block',
                    }}
                  >
                    Role *
                  </label>
                  <select
                    name='role'
                    required
                    style={{
                      width: '100%',
                      padding: '12px',
                      borderRadius: '8px',
                      border: '1px solid rgba(255, 255, 255, 0.3)',
                      background: 'rgba(255, 255, 255, 0.1)',
                      color: 'white',
                      fontSize: '0.9rem',
                    }}
                  >
                    <option value=''>Select role...</option>
                    <option value='primary'>Primary User (Full Access)</option>
                    <option value='secondary'>
                      Secondary User (Limited Access)
                    </option>
                    <option value='readonly'>Read-Only User</option>
                    <option value='admin'>Administrator</option>
                  </select>
                </div>
                <button
                  type='submit'
                  style={{
                    background: 'linear-gradient(135deg, #8b5cf6, #7c3aed)',
                    color: 'white',
                    border: 'none',
                    borderRadius: '8px',
                    padding: '14px 24px',
                    cursor: 'pointer',
                    fontSize: '1rem',
                    fontWeight: '600',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    gap: '8px',
                    transition: 'all 0.3s ease',
                  }}
                  onMouseEnter={(e) => {
                    e.currentTarget.style.transform = 'translateY(-2px)';
                    e.currentTarget.style.boxShadow =
                      '0 8px 25px rgba(139, 92, 246, 0.3)';
                  }}
                  onMouseLeave={(e) => {
                    e.currentTarget.style.transform = 'translateY(0)';
                    e.currentTarget.style.boxShadow = 'none';
                  }}
                >
                  👤 Add User
                </button>
              </form>
            </div>

            <div
              style={{
                background: 'rgba(255, 255, 255, 0.1)',
                borderRadius: '12px',
                padding: '20px',
                border: '1px solid rgba(255, 255, 255, 0.2)',
                marginTop: '24px',
              }}
            >
              <h3
                style={{
                  color: 'white',
                  fontSize: '1.2rem',
                  fontWeight: '600',
                  marginBottom: '16px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                }}
              >
                👥 Current Users
              </h3>
              {isLoading ? (
                <div
                  style={{
                    textAlign: 'center',
                    color: 'rgba(255, 255, 255, 0.7)',
                    padding: '40px',
                  }}
                >
                  🔄 Loading users...
                </div>
              ) : userAccess.length === 0 ? (
                <div
                  style={{
                    textAlign: 'center',
                    color: 'rgba(255, 255, 255, 0.7)',
                    padding: '40px',
                  }}
                >
                  📭 No users added yet. Add a new one!
                </div>
              ) : (
                <div style={{ display: 'grid', gap: '16px' }}>
                  {userAccess.map((user) => (
                    <div
                      key={user.id}
                      style={{
                        background: 'rgba(255, 255, 255, 0.08)',
                        borderRadius: '12px',
                        padding: '16px',
                        border: '1px solid rgba(255, 255, 255, 0.15)',
                        display: 'flex',
                        justifyContent: 'space-between',
                        alignItems: 'center',
                      }}
                    >
                      <div>
                        <h4
                          style={{
                            color: 'white',
                            fontSize: '1rem',
                            fontWeight: '600',
                            margin: 0,
                            marginBottom: '4px',
                          }}
                        >
                          {user.name} ({user.email})
                        </h4>
                        <div
                          style={{
                            color: 'rgba(255, 255, 255, 0.7)',
                            fontSize: '0.9rem',
                          }}
                        >
                          Role:{' '}
                          {user.role === 'primary'
                            ? 'Full Access'
                            : user.role === 'secondary'
                              ? 'Limited Access'
                              : user.role === 'readonly'
                                ? 'Read-Only'
                                : 'Administrator'}
                        </div>
                        <div
                          style={{
                            color: 'rgba(255, 255, 255, 0.7)',
                            fontSize: '0.9rem',
                          }}
                        >
                          Last Login:{' '}
                          {new Date(user.lastLogin).toLocaleDateString()}
                        </div>
                        <div
                          style={{
                            color: 'rgba(255, 255, 255, 0.7)',
                            fontSize: '0.9rem',
                          }}
                        >
                          Status: {user.isActive ? 'Active' : 'Inactive'}
                        </div>
                      </div>
                      <div
                        style={{
                          display: 'flex',
                          alignItems: 'center',
                          gap: '12px',
                        }}
                      >
                        <button
                          style={{
                            background: 'rgba(239, 68, 68, 0.2)',
                            color: '#f87171',
                            border: '1px solid rgba(239, 68, 68, 0.3)',
                            borderRadius: '6px',
                            padding: '6px 12px',
                            cursor: 'pointer',
                            fontSize: '0.8rem',
                            fontWeight: '500',
                          }}
                          onClick={() => {
                            const updatedUsers = userAccess.filter(
                              (u) => u.id !== user.id
                            );
                            setUserAccess(updatedUsers);
                          }}
                        >
                          🗑️ Remove
                        </button>
                      </div>
                    </div>
                  ))}
                </div>
              )}
            </div>
          </div>
        </div>
      )}

      {/* Analytics Tab */}
      {activeTab === 'analytics' && analyticsData && (
        <div>
          <div
            style={{
              background:
                'linear-gradient(135deg, rgba(99, 102, 241, 0.15), rgba(79, 70, 229, 0.15))',
              backdropFilter: 'blur(10px)',
              borderRadius: '20px',
              padding: '24px',
              marginBottom: '24px',
              border: '2px solid rgba(99, 102, 241, 0.3)',
              boxShadow: '0 8px 32px rgba(99, 102, 241, 0.2)',
              position: 'relative',
              overflow: 'hidden',
            }}
          >
            {/* Header Accent Line */}
            <div
              style={{
                position: 'absolute',
                top: 0,
                left: 0,
                right: 0,
                height: '4px',
                background: 'linear-gradient(90deg, #6366f1, #4f46e5, #6366f1)',
                borderRadius: '20px 20px 0 0',
              }}
            />

            {/* Header Content */}
            <div style={{ position: 'relative', zIndex: 1 }}>
              <h2
                style={{
                  color: 'white',
                  fontSize: '2rem',
                  fontWeight: '700',
                  marginBottom: '12px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '16px',
                  textShadow: '0 2px 4px rgba(0,0,0,0.3)',
                }}
              >
                <span style={{ fontSize: '2.5rem' }}>📈</span>
                Analytics Dashboard
              </h2>
              <p
                style={{
                  color: 'rgba(255, 255, 255, 0.9)',
                  fontSize: '1.1rem',
                  marginBottom: '24px',
                  lineHeight: '1.6',
                  fontWeight: '400',
                }}
              >
                View detailed analytics and performance metrics.
              </p>
            </div>

            <div
              style={{
                display: 'grid',
                gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
                gap: '20px',
                marginBottom: '32px',
              }}
            >
              <div
                style={{
                  background: 'rgba(255, 255, 255, 0.15)',
                  backdropFilter: 'blur(10px)',
                  borderRadius: '12px',
                  padding: '20px',
                  border: '1px solid rgba(255, 255, 255, 0.2)',
                  textAlign: 'center',
                }}
              >
                <div style={{ fontSize: '2rem', marginBottom: '8px' }}>📊</div>
                <div
                  style={{
                    fontSize: '1.5rem',
                    fontWeight: 'bold',
                    color: 'white',
                    marginBottom: '4px',
                  }}
                >
                  {analyticsData.loadMetrics.totalLoads}
                </div>
                <div
                  style={{
                    fontSize: '0.9rem',
                    color: 'rgba(255, 255, 255, 0.8)',
                  }}
                >
                  Total Loads
                </div>
              </div>

              <div
                style={{
                  background: 'rgba(255, 255, 255, 0.15)',
                  backdropFilter: 'blur(10px)',
                  borderRadius: '12px',
                  padding: '20px',
                  border: '1px solid rgba(255, 255, 255, 0.2)',
                  textAlign: 'center',
                }}
              >
                <div style={{ fontSize: '2rem', marginBottom: '8px' }}>💰</div>
                <div
                  style={{
                    fontSize: '1.5rem',
                    fontWeight: 'bold',
                    color: 'white',
                    marginBottom: '4px',
                  }}
                >
                  ${analyticsData.loadMetrics.totalRevenue.toFixed(2)}
                </div>
                <div
                  style={{
                    fontSize: '0.9rem',
                    color: 'rgba(255, 255, 255, 0.8)',
                  }}
                >
                  Total Revenue
                </div>
              </div>

              <div
                style={{
                  background: 'rgba(255, 255, 255, 0.15)',
                  backdropFilter: 'blur(10px)',
                  borderRadius: '12px',
                  padding: '20px',
                  border: '1px solid rgba(255, 255, 255, 0.2)',
                  textAlign: 'center',
                }}
              >
                <div style={{ fontSize: '2rem', marginBottom: '8px' }}>⏱️</div>
                <div
                  style={{
                    fontSize: '1.5rem',
                    fontWeight: 'bold',
                    color: 'white',
                    marginBottom: '4px',
                  }}
                >
                  {analyticsData.loadMetrics.averageTransitTime.toFixed(1)} Days
                </div>
                <div
                  style={{
                    fontSize: '0.9rem',
                    color: 'rgba(255, 255, 255, 0.8)',
                  }}
                >
                  Average Transit Time
                </div>
              </div>

              <div
                style={{
                  background: 'rgba(255, 255, 255, 0.15)',
                  backdropFilter: 'blur(10px)',
                  borderRadius: '12px',
                  padding: '20px',
                  border: '1px solid rgba(255, 255, 255, 0.2)',
                  textAlign: 'center',
                }}
              >
                <div style={{ fontSize: '2rem', marginBottom: '8px' }}>💰</div>
                <div
                  style={{
                    fontSize: '1.5rem',
                    fontWeight: 'bold',
                    color: 'white',
                    marginBottom: '4px',
                  }}
                >
                  ${analyticsData.loadMetrics.averageRate.toFixed(2)}
                </div>
                <div
                  style={{
                    fontSize: '0.9rem',
                    color: 'rgba(255, 255, 255, 0.8)',
                  }}
                >
                  Average Rate
                </div>
              </div>
            </div>

            <div
              style={{
                background: 'rgba(255, 255, 255, 0.15)',
                backdropFilter: 'blur(10px)',
                borderRadius: '16px',
                padding: '24px',
                border: '1px solid rgba(255, 255, 255, 0.2)',
                marginTop: '24px',
              }}
            >
              <h3
                style={{
                  color: 'white',
                  fontSize: '1.2rem',
                  fontWeight: '600',
                  marginBottom: '16px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                }}
              >
                📈 Performance Trends
              </h3>
              <div style={{ display: 'flex', gap: '20px', flexWrap: 'wrap' }}>
                <div
                  style={{
                    flex: 1,
                    background: 'rgba(255, 255, 255, 0.1)',
                    borderRadius: '12px',
                    padding: '20px',
                    border: '1px solid rgba(255, 255, 255, 0.2)',
                    textAlign: 'center',
                  }}
                >
                  <div style={{ fontSize: '2rem', marginBottom: '8px' }}>
                    📈
                  </div>
                  <div
                    style={{
                      fontSize: '1.5rem',
                      fontWeight: 'bold',
                      color: 'white',
                      marginBottom: '4px',
                    }}
                  >
                    {
                      analyticsData.performanceTrends.onTimeRate[
                        analyticsData.performanceTrends.onTimeRate.length - 1
                      ]
                    }
                    %
                  </div>
                  <div
                    style={{
                      fontSize: '0.9rem',
                      color: 'rgba(255, 255, 255, 0.8)',
                    }}
                  >
                    On-Time Rate (Latest)
                  </div>
                </div>
                <div
                  style={{
                    flex: 1,
                    background: 'rgba(255, 255, 255, 0.1)',
                    borderRadius: '12px',
                    padding: '20px',
                    border: '1px solid rgba(255, 255, 255, 0.2)',
                    textAlign: 'center',
                  }}
                >
                  <div style={{ fontSize: '2rem', marginBottom: '8px' }}>
                    📈
                  </div>
                  <div
                    style={{
                      fontSize: '1.5rem',
                      fontWeight: 'bold',
                      color: 'white',
                      marginBottom: '4px',
                    }}
                  >
                    {analyticsData.loadMetrics.totalLoads}
                  </div>
                  <div
                    style={{
                      fontSize: '0.9rem',
                      color: 'rgba(255, 255, 255, 0.8)',
                    }}
                  >
                    Total Loads (Latest)
                  </div>
                </div>
              </div>

              <div
                style={{
                  background: 'rgba(255, 255, 255, 0.15)',
                  backdropFilter: 'blur(10px)',
                  borderRadius: '16px',
                  padding: '24px',
                  border: '1px solid rgba(255, 255, 255, 0.2)',
                  marginTop: '24px',
                }}
              >
                <h3
                  style={{
                    color: 'white',
                    fontSize: '1.2rem',
                    fontWeight: '600',
                    marginBottom: '16px',
                    display: 'flex',
                    alignItems: 'center',
                    gap: '8px',
                  }}
                >
                  🗺️ Top Lanes
                </h3>
                {analyticsData.topLanes.length === 0 ? (
                  <div
                    style={{
                      textAlign: 'center',
                      color: 'rgba(255, 255, 255, 0.7)',
                      padding: '40px',
                    }}
                  >
                    📭 No top lanes data available.
                  </div>
                ) : (
                  <div style={{ maxHeight: '400px', overflowY: 'auto' }}>
                    {analyticsData.topLanes.map((lane, index) => (
                      <div
                        key={index}
                        style={{
                          background: 'rgba(255, 255, 255, 0.08)',
                          borderRadius: '12px',
                          padding: '16px',
                          marginBottom: '12px',
                          border: '1px solid rgba(255, 255, 255, 0.15)',
                        }}
                      >
                        <div
                          style={{
                            display: 'flex',
                            justifyContent: 'space-between',
                            alignItems: 'center',
                            marginBottom: '12px',
                          }}
                        >
                          <div style={{ flex: 1 }}>
                            <h4
                              style={{
                                color: 'white',
                                fontSize: '1rem',
                                fontWeight: '600',
                                margin: 0,
                                marginBottom: '4px',
                              }}
                            >
                              {lane.origin} → {lane.destination}
                            </h4>
                            <div
                              style={{
                                color: 'rgba(255, 255, 255, 0.7)',
                                fontSize: '0.9rem',
                              }}
                            >
                              Loads: {lane.loadCount}
                            </div>
                            <div
                              style={{
                                color: 'rgba(255, 255, 255, 0.7)',
                                fontSize: '0.9rem',
                              }}
                            >
                              Avg Rate: ${lane.averageRate.toFixed(2)}
                            </div>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Integrations Tab */}
      {activeTab === 'integrations' && (
        <div>
          <div
            style={{
              background:
                'linear-gradient(135deg, rgba(249, 115, 22, 0.15), rgba(217, 119, 6, 0.15))',
              backdropFilter: 'blur(10px)',
              borderRadius: '20px',
              padding: '24px',
              marginBottom: '24px',
              border: '2px solid rgba(249, 115, 22, 0.3)',
              boxShadow: '0 8px 32px rgba(249, 115, 22, 0.2)',
              position: 'relative',
              overflow: 'hidden',
            }}
          >
            {/* Header Accent Line */}
            <div
              style={{
                position: 'absolute',
                top: 0,
                left: 0,
                right: 0,
                height: '4px',
                background: 'linear-gradient(90deg, #f97316, #ea580c, #f97316)',
                borderRadius: '20px 20px 0 0',
              }}
            />

            {/* Header Content */}
            <div style={{ position: 'relative', zIndex: 1 }}>
              <h2
                style={{
                  color: 'white',
                  fontSize: '2rem',
                  fontWeight: '700',
                  marginBottom: '12px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '16px',
                  textShadow: '0 2px 4px rgba(0,0,0,0.3)',
                }}
              >
                <span style={{ fontSize: '2.5rem' }}>🔗</span>
                System Integrations
              </h2>
              <p
                style={{
                  color: 'rgba(255, 255, 255, 0.9)',
                  fontSize: '1.1rem',
                  marginBottom: '24px',
                  lineHeight: '1.6',
                  fontWeight: '400',
                }}
              >
                Manage ERP, WMS, and third-party system integrations.
              </p>
            </div>

            {/* ERP Integration Section */}
            <div
              style={{
                background: 'rgba(255, 255, 255, 0.1)',
                borderRadius: '12px',
                padding: '20px',
                marginBottom: '24px',
                border: '1px solid rgba(255, 255, 255, 0.2)',
              }}
            >
              <h3
                style={{
                  color: 'white',
                  fontSize: '1.2rem',
                  fontWeight: '600',
                  marginBottom: '16px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                }}
              >
                🏢 ERP Integration
              </h3>
              {erpIntegration && (
                <div
                  style={{
                    display: 'grid',
                    gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',
                    gap: '16px',
                  }}
                >
                  {Object.entries(erpIntegration).map(([system, data]) => (
                    <div
                      key={system}
                      style={{
                        background: 'rgba(255, 255, 255, 0.08)',
                        borderRadius: '12px',
                        padding: '16px',
                        border: `1px solid ${
                          data.connected
                            ? 'rgba(34, 197, 94, 0.3)'
                            : 'rgba(239, 68, 68, 0.3)'
                        }`,
                      }}
                    >
                      <div
                        style={{
                          display: 'flex',
                          justifyContent: 'space-between',
                          alignItems: 'center',
                          marginBottom: '12px',
                        }}
                      >
                        <h4
                          style={{
                            color: 'white',
                            fontSize: '1rem',
                            fontWeight: '600',
                            margin: 0,
                            textTransform: 'uppercase',
                          }}
                        >
                          {system.toUpperCase()}
                        </h4>
                        <span
                          style={{
                            fontSize: '0.8rem',
                            background: data.connected
                              ? 'rgba(34, 197, 94, 0.2)'
                              : 'rgba(239, 68, 68, 0.2)',
                            color: data.connected ? '#22c55e' : '#ef4444',
                            padding: '4px 8px',
                            borderRadius: '12px',
                            fontWeight: '600',
                          }}
                        >
                          {data.connected ? '✅ Connected' : '❌ Disconnected'}
                        </span>
                      </div>
                      <div
                        style={{
                          color: 'rgba(255, 255, 255, 0.7)',
                          fontSize: '0.9rem',
                          marginBottom: '8px',
                        }}
                      >
                        Last Sync: {new Date(data.lastSync).toLocaleString()}
                      </div>
                      <div
                        style={{
                          color: 'rgba(255, 255, 255, 0.7)',
                          fontSize: '0.9rem',
                          marginBottom: '8px',
                        }}
                      >
                        Status: {data.syncStatus}
                      </div>
                      {data.modules.length > 0 && (
                        <div
                          style={{
                            color: 'rgba(255, 255, 255, 0.7)',
                            fontSize: '0.9rem',
                          }}
                        >
                          Modules: {data.modules.join(', ')}
                        </div>
                      )}
                    </div>
                  ))}
                </div>
              )}
            </div>

            {/* WMS Integration Section */}
            <div
              style={{
                background: 'rgba(255, 255, 255, 0.1)',
                borderRadius: '12px',
                padding: '20px',
                border: '1px solid rgba(255, 255, 255, 0.2)',
              }}
            >
              <h3
                style={{
                  color: 'white',
                  fontSize: '1.2rem',
                  fontWeight: '600',
                  marginBottom: '16px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                }}
              >
                🏭 WMS Integration
              </h3>
              {wmsIntegration && (
                <div>
                  {/* Warehouse Management */}
                  <div
                    style={{
                      background: 'rgba(255, 255, 255, 0.08)',
                      borderRadius: '12px',
                      padding: '16px',
                      marginBottom: '16px',
                    }}
                  >
                    <h4
                      style={{
                        color: 'white',
                        fontSize: '1rem',
                        fontWeight: '600',
                        marginBottom: '12px',
                      }}
                    >
                      🏢 Warehouse Management
                    </h4>
                    <div
                      style={{
                        display: 'grid',
                        gridTemplateColumns:
                          'repeat(auto-fit, minmax(250px, 1fr))',
                        gap: '12px',
                      }}
                    >
                      {wmsIntegration.warehouseManagement.warehouses.map(
                        (warehouse) => (
                          <div
                            key={warehouse.id}
                            style={{
                              background: 'rgba(255, 255, 255, 0.05)',
                              borderRadius: '8px',
                              padding: '12px',
                              border: '1px solid rgba(255, 255, 255, 0.1)',
                            }}
                          >
                            <div
                              style={{
                                color: 'white',
                                fontSize: '0.9rem',
                                fontWeight: '600',
                                marginBottom: '4px',
                              }}
                            >
                              {warehouse.name}
                            </div>
                            <div
                              style={{
                                color: 'rgba(255, 255, 255, 0.7)',
                                fontSize: '0.8rem',
                              }}
                            >
                              Location: {warehouse.location}
                            </div>
                            <div
                              style={{
                                color: 'rgba(255, 255, 255, 0.7)',
                                fontSize: '0.8rem',
                              }}
                            >
                              Utilization: {warehouse.utilization}%
                            </div>
                            <div
                              style={{
                                color: 'rgba(255, 255, 255, 0.7)',
                                fontSize: '0.8rem',
                              }}
                            >
                              Status: {warehouse.status}
                            </div>
                          </div>
                        )
                      )}
                    </div>
                  </div>

                  {/* Inventory Tracking */}
                  <div
                    style={{
                      background: 'rgba(255, 255, 255, 0.08)',
                      borderRadius: '12px',
                      padding: '16px',
                      marginBottom: '16px',
                    }}
                  >
                    <h4
                      style={{
                        color: 'white',
                        fontSize: '1rem',
                        fontWeight: '600',
                        marginBottom: '12px',
                      }}
                    >
                      📦 Inventory Tracking
                    </h4>
                    <div
                      style={{
                        display: 'grid',
                        gridTemplateColumns:
                          'repeat(auto-fit, minmax(250px, 1fr))',
                        gap: '12px',
                      }}
                    >
                      {wmsIntegration.inventoryTracking.items.map((item) => (
                        <div
                          key={item.id}
                          style={{
                            background: 'rgba(255, 255, 255, 0.05)',
                            borderRadius: '8px',
                            padding: '12px',
                            border: '1px solid rgba(255, 255, 255, 0.1)',
                          }}
                        >
                          <div
                            style={{
                              color: 'white',
                              fontSize: '0.9rem',
                              fontWeight: '600',
                              marginBottom: '4px',
                            }}
                          >
                            {item.name}
                          </div>
                          <div
                            style={{
                              color: 'rgba(255, 255, 255, 0.7)',
                              fontSize: '0.8rem',
                            }}
                          >
                            SKU: {item.sku}
                          </div>
                          <div
                            style={{
                              color: 'rgba(255, 255, 255, 0.7)',
                              fontSize: '0.8rem',
                            }}
                          >
                            Quantity: {item.quantity}
                          </div>
                          <div
                            style={{
                              color: 'rgba(255, 255, 255, 0.7)',
                              fontSize: '0.8rem',
                            }}
                          >
                            Location: {item.location}
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>

                  {/* Order Management */}
                  <div
                    style={{
                      background: 'rgba(255, 255, 255, 0.08)',
                      borderRadius: '12px',
                      padding: '16px',
                    }}
                  >
                    <h4
                      style={{
                        color: 'white',
                        fontSize: '1rem',
                        fontWeight: '600',
                        marginBottom: '12px',
                      }}
                    >
                      📋 Order Management
                    </h4>
                    <div
                      style={{
                        display: 'grid',
                        gridTemplateColumns:
                          'repeat(auto-fit, minmax(300px, 1fr))',
                        gap: '12px',
                      }}
                    >
                      {wmsIntegration.orderManagement.orders.map((order) => (
                        <div
                          key={order.id}
                          style={{
                            background: 'rgba(255, 255, 255, 0.05)',
                            borderRadius: '8px',
                            padding: '12px',
                            border: '1px solid rgba(255, 255, 255, 0.1)',
                          }}
                        >
                          <div
                            style={{
                              color: 'white',
                              fontSize: '0.9rem',
                              fontWeight: '600',
                              marginBottom: '4px',
                            }}
                          >
                            {order.orderNumber}
                          </div>
                          <div
                            style={{
                              color: 'rgba(255, 255, 255, 0.7)',
                              fontSize: '0.8rem',
                            }}
                          >
                            Customer: {order.customer}
                          </div>
                          <div
                            style={{
                              color: 'rgba(255, 255, 255, 0.7)',
                              fontSize: '0.8rem',
                            }}
                          >
                            Status: {order.status}
                          </div>
                          <div
                            style={{
                              color: 'rgba(255, 255, 255, 0.7)',
                              fontSize: '0.8rem',
                            }}
                          >
                            Items: {order.items.length}
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>
      )}

      {/* Contracts Section - Now part of Operations */}
      {activeTab === 'operations' && contractManagement && (
        <div>
          <div
            style={{
              background: 'rgba(255, 255, 255, 0.15)',
              backdropFilter: 'blur(10px)',
              borderRadius: '16px',
              padding: '20px',
              marginBottom: '24px',
              border: '1px solid rgba(255, 255, 255, 0.2)',
            }}
          >
            <h2
              style={{
                color: 'white',
                fontSize: '1.8rem',
                fontWeight: '600',
                marginBottom: '8px',
                display: 'flex',
                alignItems: 'center',
                gap: '12px',
              }}
            >
              📋 Contract Management
            </h2>
            <p
              style={{
                color: 'rgba(255, 255, 255, 0.8)',
                fontSize: '1rem',
                marginBottom: '24px',
              }}
            >
              Manage volume commitments, lane agreements, and rate optimization.
            </p>

            {/* Volume Commitments */}
            <div
              style={{
                background: 'rgba(255, 255, 255, 0.1)',
                borderRadius: '12px',
                padding: '20px',
                marginBottom: '24px',
                border: '1px solid rgba(255, 255, 255, 0.2)',
              }}
            >
              <h3
                style={{
                  color: 'white',
                  fontSize: '1.2rem',
                  fontWeight: '600',
                  marginBottom: '16px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                }}
              >
                📊 Volume Commitments
              </h3>
              <div
                style={{
                  display: 'grid',
                  gridTemplateColumns: 'repeat(auto-fit, minmax(350px, 1fr))',
                  gap: '16px',
                }}
              >
                {contractManagement.volumeCommitments.map((contract) => (
                  <div
                    key={contract.id}
                    style={{
                      background: 'rgba(255, 255, 255, 0.08)',
                      borderRadius: '12px',
                      padding: '16px',
                      border: '1px solid rgba(255, 255, 255, 0.15)',
                    }}
                  >
                    <div
                      style={{
                        display: 'flex',
                        justifyContent: 'space-between',
                        alignItems: 'flex-start',
                        marginBottom: '12px',
                      }}
                    >
                      <h4
                        style={{
                          color: 'white',
                          fontSize: '1rem',
                          fontWeight: '600',
                          margin: 0,
                        }}
                      >
                        {contract.name}
                      </h4>
                      <span
                        style={{
                          fontSize: '0.8rem',
                          background:
                            contract.status === 'active'
                              ? 'rgba(34, 197, 94, 0.2)'
                              : 'rgba(239, 68, 68, 0.2)',
                          color:
                            contract.status === 'active'
                              ? '#22c55e'
                              : '#ef4444',
                          padding: '4px 8px',
                          borderRadius: '12px',
                          fontWeight: '600',
                        }}
                      >
                        {contract.status}
                      </span>
                    </div>
                    <div
                      style={{
                        color: 'rgba(255, 255, 255, 0.7)',
                        fontSize: '0.9rem',
                        marginBottom: '8px',
                      }}
                    >
                      Route: {contract.terms.origin} →{' '}
                      {contract.terms.destination}
                    </div>
                    <div
                      style={{
                        color: 'rgba(255, 255, 255, 0.7)',
                        fontSize: '0.9rem',
                        marginBottom: '8px',
                      }}
                    >
                      Rate: ${contract.terms.rate.toLocaleString()}
                    </div>
                    <div
                      style={{
                        color: 'rgba(255, 255, 255, 0.7)',
                        fontSize: '0.9rem',
                        marginBottom: '8px',
                      }}
                    >
                      Volume: {contract.terms.volume} loads
                    </div>
                    <div
                      style={{
                        color: 'rgba(255, 255, 255, 0.7)',
                        fontSize: '0.9rem',
                        marginBottom: '8px',
                      }}
                    >
                      Completed: {contract.performance.loadsCompleted}/
                      {contract.terms.volume}
                    </div>
                    <div
                      style={{
                        color: 'rgba(255, 255, 255, 0.7)',
                        fontSize: '0.9rem',
                      }}
                    >
                      On-Time Rate: {contract.performance.onTimeRate}%
                    </div>
                  </div>
                ))}
              </div>
            </div>

            {/* Rate Optimization */}
            <div
              style={{
                background: 'rgba(255, 255, 255, 0.1)',
                borderRadius: '12px',
                padding: '20px',
                border: '1px solid rgba(255, 255, 255, 0.2)',
              }}
            >
              <h3
                style={{
                  color: 'white',
                  fontSize: '1.2rem',
                  fontWeight: '600',
                  marginBottom: '16px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                }}
              >
                🤖 AI Rate Optimization
              </h3>
              <div
                style={{
                  display: 'grid',
                  gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',
                  gap: '16px',
                }}
              >
                {contractManagement.rateOptimization.aiRecommendations.map(
                  (recommendation) => (
                    <div
                      key={recommendation.id}
                      style={{
                        background: 'rgba(255, 255, 255, 0.08)',
                        borderRadius: '12px',
                        padding: '16px',
                        border: '1px solid rgba(255, 255, 255, 0.15)',
                      }}
                    >
                      <h4
                        style={{
                          color: 'white',
                          fontSize: '1rem',
                          fontWeight: '600',
                          marginBottom: '8px',
                        }}
                      >
                        {recommendation.lane}
                      </h4>
                      <div
                        style={{
                          display: 'flex',
                          justifyContent: 'space-between',
                          marginBottom: '8px',
                        }}
                      >
                        <span
                          style={{
                            color: 'rgba(255, 255, 255, 0.7)',
                            fontSize: '0.9rem',
                          }}
                        >
                          Current: $
                          {recommendation.currentRate.toLocaleString()}
                        </span>
                        <span
                          style={{
                            color: '#22c55e',
                            fontSize: '0.9rem',
                            fontWeight: '600',
                          }}
                        >
                          Recommended: $
                          {recommendation.recommendedRate.toLocaleString()}
                        </span>
                      </div>
                      <div
                        style={{
                          color: 'rgba(255, 255, 255, 0.7)',
                          fontSize: '0.8rem',
                          marginBottom: '8px',
                        }}
                      >
                        Confidence: {recommendation.confidence}%
                      </div>
                      <div
                        style={{
                          color: '#fbbf24',
                          fontSize: '0.9rem',
                          fontWeight: '600',
                        }}
                      >
                        Potential Savings: $
                        {recommendation.potentialSavings.toLocaleString()}
                      </div>
                    </div>
                  )
                )}
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Advanced Tracking Section - Now part of Operations */}
      {activeTab === 'operations' && advancedTracking && (
        <div>
          <div
            style={{
              background: 'rgba(255, 255, 255, 0.15)',
              backdropFilter: 'blur(10px)',
              borderRadius: '16px',
              padding: '20px',
              marginBottom: '24px',
              border: '1px solid rgba(255, 255, 255, 0.2)',
            }}
          >
            <h2
              style={{
                color: 'white',
                fontSize: '1.8rem',
                fontWeight: '600',
                marginBottom: '8px',
                display: 'flex',
                alignItems: 'center',
                gap: '12px',
              }}
            >
              📍 Advanced Tracking
            </h2>
            <p
              style={{
                color: 'rgba(255, 255, 255, 0.8)',
                fontSize: '1rem',
                marginBottom: '24px',
              }}
            >
              Real-time GPS, temperature monitoring, fuel tracking, and driver
              behavior analytics.
            </p>

            {/* Real-time GPS */}
            <div
              style={{
                background: 'rgba(255, 255, 255, 0.1)',
                borderRadius: '12px',
                padding: '20px',
                marginBottom: '24px',
                border: '1px solid rgba(255, 255, 255, 0.2)',
              }}
            >
              <h3
                style={{
                  color: 'white',
                  fontSize: '1.2rem',
                  fontWeight: '600',
                  marginBottom: '16px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                }}
              >
                🛰️ Real-time GPS
              </h3>
              <div
                style={{
                  display: 'grid',
                  gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
                  gap: '16px',
                }}
              >
                <div
                  style={{
                    background: 'rgba(255, 255, 255, 0.08)',
                    borderRadius: '12px',
                    padding: '16px',
                    textAlign: 'center',
                  }}
                >
                  <div style={{ fontSize: '2rem', marginBottom: '8px' }}>
                    📡
                  </div>
                  <div
                    style={{
                      color: 'white',
                      fontSize: '1.2rem',
                      fontWeight: '600',
                      marginBottom: '4px',
                    }}
                  >
                    {advancedTracking.realTimeGPS.accuracy}%
                  </div>
                  <div
                    style={{
                      color: 'rgba(255, 255, 255, 0.7)',
                      fontSize: '0.9rem',
                    }}
                  >
                    GPS Accuracy
                  </div>
                </div>
                <div
                  style={{
                    background: 'rgba(255, 255, 255, 0.08)',
                    borderRadius: '12px',
                    padding: '16px',
                    textAlign: 'center',
                  }}
                >
                  <div style={{ fontSize: '2rem', marginBottom: '8px' }}>
                    ⏱️
                  </div>
                  <div
                    style={{
                      color: 'white',
                      fontSize: '1.2rem',
                      fontWeight: '600',
                      marginBottom: '4px',
                    }}
                  >
                    {advancedTracking.realTimeGPS.updateFrequency}s
                  </div>
                  <div
                    style={{
                      color: 'rgba(255, 255, 255, 0.7)',
                      fontSize: '0.9rem',
                    }}
                  >
                    Update Frequency
                  </div>
                </div>
              </div>
            </div>

            {/* Temperature Monitoring */}
            <div
              style={{
                background: 'rgba(255, 255, 255, 0.1)',
                borderRadius: '12px',
                padding: '20px',
                marginBottom: '24px',
                border: '1px solid rgba(255, 255, 255, 0.2)',
              }}
            >
              <h3
                style={{
                  color: 'white',
                  fontSize: '1.2rem',
                  fontWeight: '600',
                  marginBottom: '16px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                }}
              >
                🌡️ Temperature Monitoring
              </h3>
              <div
                style={{
                  display: 'grid',
                  gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
                  gap: '16px',
                }}
              >
                {advancedTracking.temperatureMonitoring.sensors.map(
                  (sensor) => (
                    <div
                      key={sensor.id}
                      style={{
                        background: 'rgba(255, 255, 255, 0.08)',
                        borderRadius: '12px',
                        padding: '16px',
                        border: `1px solid ${
                          sensor.status === 'normal'
                            ? 'rgba(34, 197, 94, 0.3)'
                            : sensor.status === 'warning'
                              ? 'rgba(234, 179, 8, 0.3)'
                              : 'rgba(239, 68, 68, 0.3)'
                        }`,
                      }}
                    >
                      <div
                        style={{
                          display: 'flex',
                          justifyContent: 'space-between',
                          alignItems: 'center',
                          marginBottom: '8px',
                        }}
                      >
                        <h4
                          style={{
                            color: 'white',
                            fontSize: '1rem',
                            fontWeight: '600',
                            margin: 0,
                          }}
                        >
                          {sensor.location}
                        </h4>
                        <span
                          style={{
                            fontSize: '0.8rem',
                            background:
                              sensor.status === 'normal'
                                ? 'rgba(34, 197, 94, 0.2)'
                                : sensor.status === 'warning'
                                  ? 'rgba(234, 179, 8, 0.2)'
                                  : 'rgba(239, 68, 68, 0.2)',
                            color:
                              sensor.status === 'normal'
                                ? '#22c55e'
                                : sensor.status === 'warning'
                                  ? '#fbbf24'
                                  : '#ef4444',
                            padding: '4px 8px',
                            borderRadius: '12px',
                            fontWeight: '600',
                          }}
                        >
                          {sensor.status}
                        </span>
                      </div>
                      <div
                        style={{
                          color: 'white',
                          fontSize: '1.5rem',
                          fontWeight: '600',
                          marginBottom: '4px',
                        }}
                      >
                        {sensor.currentTemp}°F
                      </div>
                      <div
                        style={{
                          color: 'rgba(255, 255, 255, 0.7)',
                          fontSize: '0.8rem',
                        }}
                      >
                        Range: {sensor.minTemp}°F - {sensor.maxTemp}°F
                      </div>
                    </div>
                  )
                )}
              </div>
            </div>

            {/* Fuel Monitoring */}
            <div
              style={{
                background: 'rgba(255, 255, 255, 0.1)',
                borderRadius: '12px',
                padding: '20px',
                marginBottom: '24px',
                border: '1px solid rgba(255, 255, 255, 0.2)',
              }}
            >
              <h3
                style={{
                  color: 'white',
                  fontSize: '1.2rem',
                  fontWeight: '600',
                  marginBottom: '16px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                }}
              >
                ⛽ Fuel Monitoring
              </h3>
              <div
                style={{
                  display: 'grid',
                  gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
                  gap: '16px',
                }}
              >
                <div
                  style={{
                    background: 'rgba(255, 255, 255, 0.08)',
                    borderRadius: '12px',
                    padding: '16px',
                    textAlign: 'center',
                  }}
                >
                  <div style={{ fontSize: '2rem', marginBottom: '8px' }}>
                    ⛽
                  </div>
                  <div
                    style={{
                      color: 'white',
                      fontSize: '1.2rem',
                      fontWeight: '600',
                      marginBottom: '4px',
                    }}
                  >
                    {advancedTracking.fuelMonitoring.currentLevel}%
                  </div>
                  <div
                    style={{
                      color: 'rgba(255, 255, 255, 0.7)',
                      fontSize: '0.9rem',
                    }}
                  >
                    Fuel Level
                  </div>
                </div>
                <div
                  style={{
                    background: 'rgba(255, 255, 255, 0.08)',
                    borderRadius: '12px',
                    padding: '16px',
                    textAlign: 'center',
                  }}
                >
                  <div style={{ fontSize: '2rem', marginBottom: '8px' }}>
                    📊
                  </div>
                  <div
                    style={{
                      color: 'white',
                      fontSize: '1.2rem',
                      fontWeight: '600',
                      marginBottom: '4px',
                    }}
                  >
                    {advancedTracking.fuelMonitoring.efficiency} MPG
                  </div>
                  <div
                    style={{
                      color: 'rgba(255, 255, 255, 0.7)',
                      fontSize: '0.9rem',
                    }}
                  >
                    Fuel Efficiency
                  </div>
                </div>
              </div>
            </div>

            {/* Driver Behavior */}
            <div
              style={{
                background: 'rgba(255, 255, 255, 0.1)',
                borderRadius: '12px',
                padding: '20px',
                border: '1px solid rgba(255, 255, 255, 0.2)',
              }}
            >
              <h3
                style={{
                  color: 'white',
                  fontSize: '1.2rem',
                  fontWeight: '600',
                  marginBottom: '16px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                }}
              >
                👨‍💼 Driver Behavior Analytics
              </h3>
              <div
                style={{
                  display: 'grid',
                  gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',
                  gap: '16px',
                }}
              >
                <div
                  style={{
                    background: 'rgba(255, 255, 255, 0.08)',
                    borderRadius: '12px',
                    padding: '16px',
                    textAlign: 'center',
                  }}
                >
                  <div style={{ fontSize: '2rem', marginBottom: '8px' }}>
                    🚫
                  </div>
                  <div
                    style={{
                      color: 'white',
                      fontSize: '1.2rem',
                      fontWeight: '600',
                      marginBottom: '4px',
                    }}
                  >
                    {advancedTracking.driverBehavior.metrics.idling}%
                  </div>
                  <div
                    style={{
                      color: 'rgba(255, 255, 255, 0.7)',
                      fontSize: '0.9rem',
                    }}
                  >
                    Idling Time
                  </div>
                </div>
                <div
                  style={{
                    background: 'rgba(255, 255, 255, 0.08)',
                    borderRadius: '12px',
                    padding: '16px',
                    textAlign: 'center',
                  }}
                >
                  <div style={{ fontSize: '2rem', marginBottom: '8px' }}>
                    🛑
                  </div>
                  <div
                    style={{
                      color: 'white',
                      fontSize: '1.2rem',
                      fontWeight: '600',
                      marginBottom: '4px',
                    }}
                  >
                    {advancedTracking.driverBehavior.metrics.harshBraking}
                  </div>
                  <div
                    style={{
                      color: 'rgba(255, 255, 255, 0.7)',
                      fontSize: '0.9rem',
                    }}
                  >
                    Harsh Braking
                  </div>
                </div>
                <div
                  style={{
                    background: 'rgba(255, 255, 255, 0.08)',
                    borderRadius: '12px',
                    padding: '16px',
                    textAlign: 'center',
                  }}
                >
                  <div style={{ fontSize: '2rem', marginBottom: '8px' }}>
                    🚗
                  </div>
                  <div
                    style={{
                      color: 'white',
                      fontSize: '1.2rem',
                      fontWeight: '600',
                      marginBottom: '4px',
                    }}
                  >
                    {advancedTracking.driverBehavior.metrics.speeding}%
                  </div>
                  <div
                    style={{
                      color: 'rgba(255, 255, 255, 0.7)',
                      fontSize: '0.9rem',
                    }}
                  >
                    Speeding
                  </div>
                </div>
                <div
                  style={{
                    background: 'rgba(255, 255, 255, 0.08)',
                    borderRadius: '12px',
                    padding: '16px',
                    textAlign: 'center',
                  }}
                >
                  <div style={{ fontSize: '2rem', marginBottom: '8px' }}>
                    🛡️
                  </div>
                  <div
                    style={{
                      color: 'white',
                      fontSize: '1.2rem',
                      fontWeight: '600',
                      marginBottom: '4px',
                    }}
                  >
                    {advancedTracking.driverBehavior.metrics.safetyScore}
                  </div>
                  <div
                    style={{
                      color: 'rgba(255, 255, 255, 0.7)',
                      fontSize: '0.9rem',
                    }}
                  >
                    Safety Score
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Branding Section - Now part of Settings */}
      {activeTab === 'settings' && customBranding && (
        <div>
          <div
            style={{
              background: 'rgba(255, 255, 255, 0.15)',
              backdropFilter: 'blur(10px)',
              borderRadius: '16px',
              padding: '20px',
              marginBottom: '24px',
              border: '1px solid rgba(255, 255, 255, 0.2)',
            }}
          >
            <h2
              style={{
                color: 'white',
                fontSize: '1.8rem',
                fontWeight: '600',
                marginBottom: '8px',
                display: 'flex',
                alignItems: 'center',
                gap: '12px',
              }}
            >
              🎨 Custom Branding
            </h2>
            <p
              style={{
                color: 'rgba(255, 255, 255, 0.8)',
                fontSize: '1rem',
                marginBottom: '24px',
              }}
            >
              Customize your portal with your brand colors, logo, and domain.
            </p>

            {/* Custom Logo */}
            <div
              style={{
                background: 'rgba(255, 255, 255, 0.1)',
                borderRadius: '12px',
                padding: '20px',
                marginBottom: '24px',
                border: '1px solid rgba(255, 255, 255, 0.2)',
              }}
            >
              <h3
                style={{
                  color: 'white',
                  fontSize: '1.2rem',
                  fontWeight: '600',
                  marginBottom: '16px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                }}
              >
                🖼️ Custom Logo
              </h3>
              <div
                style={{
                  display: 'flex',
                  alignItems: 'center',
                  gap: '16px',
                }}
              >
                <div
                  style={{
                    width: '80px',
                    height: '80px',
                    background: 'rgba(255, 255, 255, 0.1)',
                    borderRadius: '8px',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    fontSize: '2rem',
                  }}
                >
                  🏢
                </div>
                <div>
                  <div
                    style={{
                      color: 'white',
                      fontSize: '1rem',
                      fontWeight: '600',
                      marginBottom: '4px',
                    }}
                  >
                    {customBranding.customLogo.altText}
                  </div>
                  <div
                    style={{
                      color: 'rgba(255, 255, 255, 0.7)',
                      fontSize: '0.9rem',
                    }}
                  >
                    Status:{' '}
                    {customBranding.customLogo.enabled ? 'Enabled' : 'Disabled'}
                  </div>
                </div>
              </div>
            </div>

            {/* Custom Colors */}
            <div
              style={{
                background: 'rgba(255, 255, 255, 0.1)',
                borderRadius: '12px',
                padding: '20px',
                marginBottom: '24px',
                border: '1px solid rgba(255, 255, 255, 0.2)',
              }}
            >
              <h3
                style={{
                  color: 'white',
                  fontSize: '1.2rem',
                  fontWeight: '600',
                  marginBottom: '16px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                }}
              >
                🎨 Custom Colors
              </h3>
              <div
                style={{
                  display: 'grid',
                  gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',
                  gap: '16px',
                }}
              >
                <div
                  style={{
                    background: 'rgba(255, 255, 255, 0.08)',
                    borderRadius: '12px',
                    padding: '16px',
                    textAlign: 'center',
                  }}
                >
                  <div
                    style={{
                      width: '40px',
                      height: '40px',
                      background: customBranding.customColors.primary,
                      borderRadius: '8px',
                      margin: '0 auto 8px',
                    }}
                  />
                  <div
                    style={{
                      color: 'white',
                      fontSize: '0.9rem',
                      fontWeight: '600',
                      marginBottom: '4px',
                    }}
                  >
                    Primary
                  </div>
                  <div
                    style={{
                      color: 'rgba(255, 255, 255, 0.7)',
                      fontSize: '0.8rem',
                    }}
                  >
                    {customBranding.customColors.primary}
                  </div>
                </div>
                <div
                  style={{
                    background: 'rgba(255, 255, 255, 0.08)',
                    borderRadius: '12px',
                    padding: '16px',
                    textAlign: 'center',
                  }}
                >
                  <div
                    style={{
                      width: '40px',
                      height: '40px',
                      background: customBranding.customColors.secondary,
                      borderRadius: '8px',
                      margin: '0 auto 8px',
                    }}
                  />
                  <div
                    style={{
                      color: 'white',
                      fontSize: '0.9rem',
                      fontWeight: '600',
                      marginBottom: '4px',
                    }}
                  >
                    Secondary
                  </div>
                  <div
                    style={{
                      color: 'rgba(255, 255, 255, 0.7)',
                      fontSize: '0.8rem',
                    }}
                  >
                    {customBranding.customColors.secondary}
                  </div>
                </div>
                <div
                  style={{
                    background: 'rgba(255, 255, 255, 0.08)',
                    borderRadius: '12px',
                    padding: '16px',
                    textAlign: 'center',
                  }}
                >
                  <div
                    style={{
                      width: '40px',
                      height: '40px',
                      background: customBranding.customColors.accent,
                      borderRadius: '8px',
                      margin: '0 auto 8px',
                    }}
                  />
                  <div
                    style={{
                      color: 'white',
                      fontSize: '0.9rem',
                      fontWeight: '600',
                      marginBottom: '4px',
                    }}
                  >
                    Accent
                  </div>
                  <div
                    style={{
                      color: 'rgba(255, 255, 255, 0.7)',
                      fontSize: '0.8rem',
                    }}
                  >
                    {customBranding.customColors.accent}
                  </div>
                </div>
              </div>
            </div>

            {/* Email Templates */}
            <div
              style={{
                background: 'rgba(255, 255, 255, 0.1)',
                borderRadius: '12px',
                padding: '20px',
                border: '1px solid rgba(255, 255, 255, 0.2)',
              }}
            >
              <h3
                style={{
                  color: 'white',
                  fontSize: '1.2rem',
                  fontWeight: '600',
                  marginBottom: '16px',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                }}
              >
                📧 Email Templates
              </h3>
              <div
                style={{
                  display: 'grid',
                  gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',
                  gap: '16px',
                }}
              >
                {customBranding.customEmailTemplates.templates.map(
                  (template) => (
                    <div
                      key={template.id}
                      style={{
                        background: 'rgba(255, 255, 255, 0.08)',
                        borderRadius: '12px',
                        padding: '16px',
                        border: '1px solid rgba(255, 255, 255, 0.15)',
                      }}
                    >
                      <div
                        style={{
                          display: 'flex',
                          justifyContent: 'space-between',
                          alignItems: 'center',
                          marginBottom: '8px',
                        }}
                      >
                        <h4
                          style={{
                            color: 'white',
                            fontSize: '1rem',
                            fontWeight: '600',
                            margin: 0,
                          }}
                        >
                          {template.name}
                        </h4>
                        <span
                          style={{
                            fontSize: '0.8rem',
                            background: template.active
                              ? 'rgba(34, 197, 94, 0.2)'
                              : 'rgba(107, 114, 128, 0.2)',
                            color: template.active ? '#22c55e' : '#6b7280',
                            padding: '4px 8px',
                            borderRadius: '12px',
                            fontWeight: '600',
                          }}
                        >
                          {template.active ? 'Active' : 'Inactive'}
                        </span>
                      </div>
                      <div
                        style={{
                          color: 'rgba(255, 255, 255, 0.7)',
                          fontSize: '0.9rem',
                          marginBottom: '8px',
                        }}
                      >
                        Subject: {template.subject}
                      </div>
                      <div
                        style={{
                          color: 'rgba(255, 255, 255, 0.7)',
                          fontSize: '0.8rem',
                          marginBottom: '8px',
                        }}
                      >
                        Variables: {template.variables.join(', ')}
                      </div>
                    </div>
                  )
                )}
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Notifications section temporarily removed for scrolling test */}

      {/* Settings Tab */}
      {activeTab === 'settings' && (
        <div>
          <div
            style={{
              background: 'rgba(255, 255, 255, 0.15)',
              backdropFilter: 'blur(10px)',
              borderRadius: '16px',
              padding: '24px',
              border: '1px solid rgba(255, 255, 255, 0.2)',
            }}
          >
            <h2
              style={{
                color: 'white',
                fontSize: '1.3rem',
                fontWeight: '600',
                marginBottom: '20px',
                margin: 0,
              }}
            >
              👤 Company Profile
            </h2>
            <div style={{ display: 'grid', gap: '16px' }}>
              <div
                style={{
                  background: 'rgba(255, 255, 255, 0.1)',
                  borderRadius: '8px',
                  padding: '16px',
                  display: 'grid',
                  gridTemplateColumns: '1fr 2fr',
                  gap: '12px',
                }}
              >
                <div
                  style={{
                    color: 'rgba(255, 255, 255, 0.7)',
                    fontSize: '0.9rem',
                  }}
                >
                  Company Name:
                </div>
                <div style={{ color: 'white', fontWeight: '600' }}>
                  {session.companyName}
                </div>
              </div>

              <div
                style={{
                  background: 'rgba(255, 255, 255, 0.1)',
                  borderRadius: '8px',
                  padding: '16px',
                  display: 'grid',
                  gridTemplateColumns: '1fr 2fr',
                  gap: '12px',
                }}
              >
                <div
                  style={{
                    color: 'rgba(255, 255, 255, 0.7)',
                    fontSize: '0.9rem',
                  }}
                >
                  Shipper ID:
                </div>
                <div style={{ color: 'white', fontWeight: '600' }}>
                  {session.shipperId}
                </div>
              </div>

              <div
                style={{
                  background: 'rgba(255, 255, 255, 0.1)',
                  borderRadius: '8px',
                  padding: '16px',
                  display: 'grid',
                  gridTemplateColumns: '1fr 2fr',
                  gap: '12px',
                }}
              >
                <div
                  style={{
                    color: 'rgba(255, 255, 255, 0.7)',
                    fontSize: '0.9rem',
                  }}
                >
                  Portal Access:
                </div>
                <div style={{ color: '#10b981', fontWeight: '600' }}>
                  ✅ Active
                </div>
              </div>

              <div
                style={{
                  background: 'rgba(255, 255, 255, 0.1)',
                  borderRadius: '8px',
                  padding: '16px',
                  display: 'grid',
                  gridTemplateColumns: '1fr 2fr',
                  gap: '12px',
                }}
              >
                <div
                  style={{
                    color: 'rgba(255, 255, 255, 0.7)',
                    fontSize: '0.9rem',
                  }}
                >
                  Last Login:
                </div>
                <div style={{ color: 'white', fontWeight: '600' }}>
                  {new Date(session.loginTime).toLocaleString()}
                </div>
              </div>

              {dashboardSummary && (
                <div
                  style={{
                    background: 'rgba(255, 255, 255, 0.1)',
                    borderRadius: '8px',
                    padding: '16px',
                    display: 'grid',
                    gridTemplateColumns: '1fr 2fr',
                    gap: '12px',
                  }}
                >
                  <div
                    style={{
                      color: 'rgba(255, 255, 255, 0.7)',
                      fontSize: '0.9rem',
                    }}
                  >
                    Performance:
                  </div>
                  <div style={{ color: 'white', fontWeight: '600' }}>
                    {dashboardSummary.deliveryPerformance.onTimeRate}% On-Time •{' '}
                    {dashboardSummary.deliveryPerformance.avgTransitTime} Avg
                    Transit
                  </div>
                </div>
              )}
            </div>

            {/* Support Section */}
            <div style={{ marginTop: '32px', textAlign: 'center' }}>
              <h3
                style={{
                  color: 'white',
                  fontSize: '1.1rem',
                  fontWeight: '600',
                  marginBottom: '16px',
                }}
              >
                📞 Need Help?
              </h3>
              <div
                style={{
                  background: 'rgba(255, 255, 255, 0.1)',
                  borderRadius: '8px',
                  padding: '16px',
                  color: 'rgba(255, 255, 255, 0.8)',
                  fontSize: '0.9rem',
                }}
              >
                Contact your dedicated FleetFlow team for any questions about
                your loads or portal access.
                <br />
                <strong>Support: (555) 123-4567</strong>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Load Detail Modal */}
      {selectedLoad && (
        <div
          style={{
            position: 'fixed',
            top: 0,
            left: 0,
            width: '100%',
            height: '100%',
            background: 'rgba(0, 0, 0, 0.7)',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            zIndex: 1000,
            backdropFilter: 'blur(8px)',
          }}
          onClick={() => setSelectedLoad(null)}
        >
          <div
            style={{
              background: 'rgba(255, 255, 255, 0.95)',
              borderRadius: '16px',
              maxWidth: '600px',
              maxHeight: '80vh',
              overflow: 'auto',
              padding: '32px',
              margin: '20px',
              boxShadow: '0 20px 60px rgba(0, 0, 0, 0.3)',
            }}
            onClick={(e) => e.stopPropagation()}
          >
            <h2
              style={{
                color: '#1f2937',
                fontSize: '1.5rem',
                fontWeight: '600',
                marginBottom: '20px',
                margin: 0,
              }}
            >
              {getStatusIcon(selectedLoad.currentStatus)} Load{' '}
              {selectedLoad.loadId} Details
            </h2>

            <div style={{ color: '#374151', lineHeight: '1.6' }}>
              <div style={{ marginBottom: '20px' }}>
                <strong>Status:</strong> {selectedLoad.statusDisplay}
              </div>
              <div style={{ marginBottom: '20px' }}>
                <strong>Route:</strong> {selectedLoad.route.origin} →{' '}
                {selectedLoad.route.destination}
              </div>
              <div style={{ marginBottom: '20px' }}>
                <strong>Distance:</strong> {selectedLoad.route.distance}
              </div>
              <div style={{ marginBottom: '20px' }}>
                <strong>Estimated Delivery:</strong>{' '}
                {selectedLoad.estimatedDelivery
                  ? new Date(
                      selectedLoad.estimatedDelivery
                    ).toLocaleDateString()
                  : 'TBD'}
              </div>
              <div style={{ marginBottom: '20px' }}>
                <strong>Broker Contact:</strong>{' '}
                {selectedLoad.contact.brokerName}
              </div>
              {selectedLoad.contact.dispatcherName && (
                <div style={{ marginBottom: '20px' }}>
                  <strong>Dispatcher:</strong>{' '}
                  {selectedLoad.contact.dispatcherName}
                </div>
              )}
            </div>

            <button
              onClick={() => setSelectedLoad(null)}
              style={{
                background: '#3b82f6',
                color: 'white',
                border: 'none',
                borderRadius: '8px',
                padding: '12px 24px',
                cursor: 'pointer',
                fontSize: '1rem',
                fontWeight: '600',
                marginTop: '20px',
              }}
            >
              Close
            </button>
          </div>
        </div>
      )}

      {/* Force scrollable content - ensures page has enough height to scroll */}
      <div style={{ height: '150vh', opacity: 0, pointerEvents: 'none' }}>
        {/* Invisible content to make page scrollable */}
      </div>
    </div>
  );
}
